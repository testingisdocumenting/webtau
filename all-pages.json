[{"type":"Page","content":[{"url":"getting-started/what-is-this","type":"Redirect"}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"","pageTitle":"","pageMeta":{},"dirName":"","fileName":"index","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"webtau","title":"WebTau","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau (","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Web","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"T","type":"SimpleText"}]},{"text":"est ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"au","type":"SimpleText"}]},{"text":"tomation) - concise and expressive way to write end-to-end and unit tests.","type":"SimpleText"}]},{"scale":0.5,"align":"left","imageSrc":"/webtau/webtau-logo.png","timestamp":1692271721166,"shapes":[],"width":256.0,"height":256.0,"type":"AnnotatedImage"},{"type":"Paragraph","content":[{"text":"Test your application across multiple layers and use unique features:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#rest-api","isFile":false,"type":"Link","content":[{"text":"REST API","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#websocket","isFile":false,"type":"Link","content":[{"text":"WebSocket","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#graphql-api","isFile":false,"type":"Link","content":[{"text":"GraphQL API","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#persona","isFile":false,"type":"Link","content":[{"text":"Authorization Personas","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#browser","isFile":false,"type":"Link","content":[{"text":"Browser","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#fake-static-and-proxy-servers","isFile":false,"type":"Link","content":[{"text":"Fake, Static And Proxy Servers","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#database","isFile":false,"type":"Link","content":[{"text":"Database","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#cli","isFile":false,"type":"Link","content":[{"text":"CLI","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#business-logic-jvm","isFile":false,"type":"Link","content":[{"text":"Business Logic (JVM only)","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#repl","isFile":false,"type":"Link","content":[{"text":"REPL","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#reporting","isFile":false,"type":"Link","content":[{"text":"Reporting","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/what-is-this#documentation-assistance","isFile":false,"type":"Link","content":[{"text":"Documentation Assistance","type":"SimpleText"}]}]}]}]},{"type":"Paragraph","content":[{"text":"There are many modules, but you can use any module you need independently, or use all the modules at once with convenient single imports.","type":"SimpleText"}]}]},{"id":"scripting-and-junit","title":"Scripting And JUnit","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Tests can be written and ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"executed as scripts","type":"SimpleText"}]},{"text":" via command line or using ","type":"SimpleText"},{"url":"/webtau/junit5/getting-started","isFile":false,"type":"Link","content":[{"text":"JUnit integration","type":"SimpleText"}]},{"text":" and build systems.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"scenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.waitToBe > 1\n}","title":"browser test (groovy script)","startLine":"search by specific","anchorId":"scripting-and-junit-browser-test-groovy-script","type":"Snippet"},{"command":"webtau testscript.groovy","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Java","content":[{"lang":"java","snippet":"public class WebSearchJavaTest {\n    @Test\n    public void searchByQuery() {\n        search.submit(\"search this\");\n        search.numberOfResults.waitToBe(greaterThan(1));\n    }\n}","title":"browser test (JUnit 5)","startLine":"class","anchorId":"scripting-and-junit-browser-test-junit-5","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"rest-api","title":"Rest API","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"http","type":"InlinedCode"},{"text":" module lets you exercise and validate HTTP endpoints.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It provides a simplified way to make HTTP calls and validate responses","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Now with ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage","isFile":false,"type":"Link","content":[{"text":"Data Coverage","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"private final def livePrice = http.resource(\"/prices/:ticker\").price\n\n...\n\nlivePrice.of(\"IBM\").waitToBe > 115","title":"wait on http response value","surroundedBy":["live-price-definition","live-price-wait"],"surroundedBySeparator":"\n...\n","anchorId":"rest-api-wait-on-http-response-value","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"private final HttpLazyResponseValue livePrice = http.resource(\"/prices/:ticker\").get(\"price\");\n\n...\n\nlivePrice.of(\"IBM\").waitToBe(greaterThan(115)));","title":"wait on http response value","surroundedBy":["live-price-definition","live-price-wait"],"surroundedBySeparator":"\n...\n","anchorId":"rest-api-wait-on-http-response-value-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mto be greater than \u001B[34m115\u001B[0m","  \u001B[33m> \u001B[36m[1/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[31m**100**\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[3/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[32m~~120~~\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[3/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m9ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m115\u001B[33m (\u001B[32m220ms\u001B[33m)\u001B[0m"],"anchorId":"rest-api-console-output","type":"CliOutput"},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe < 100\n    }\n}","title":"REST API test (Groovy specific runner)","anchorId":"rest-api-rest-api-test-groovy-specific-runner","type":"Snippet"},{"lang":"groovy","snippet":"package com.example.tests.junit5\n\nimport org.junit.jupiter.api.Test\nimport org.testingisdocumenting.webtau.junit5.WebTau\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau\nclass WeatherGroovyTest {\n    @Test\n    void checkWeather() {\n        http.get(\"/weather\") {\n            temperature.shouldBe < 100\n        }\n    }\n}","title":"REST API test (JUnit5)","anchorId":"rest-api-rest-api-test-junit5","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"temperature":88},"paths":[],"anchorId":"rest-api-server-response","type":"Json"}]}],"config":{},"type":"Columns"}]},{"name":"Java","content":[{"columns":[{"content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WeatherJavaTest {\n    @Test\n    public void checkWeather() {\n        http.get(\"/weather\", (header, body) -> {\n            body.get(\"temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","title":"REST API test (JUnit5 Java)","anchorId":"rest-api-rest-api-test-junit5-java","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"temperature":88},"paths":[],"anchorId":"rest-api-server-response-2","type":"Json"}]}],"config":{},"type":"Columns"}]}],"type":"Tabs"},{"title":"console output","startLine":"executing","endLine":"executed","lines":["\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/weather\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody.temperature \u001B[0m\u001B[0m\u001B[34mless than \u001B[34m100\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"temperature\"\u001B[33m: \u001B[1m\u001B[32m~~88~~\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/weather\u001B[33m (\u001B[32m31ms\u001B[33m)\u001B[0m"],"anchorId":"rest-api-console-output-2","type":"CliOutput"},{"type":"Paragraph","content":[{"url":"/webtau/HTTP/CRUD-example","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]}]},{"id":"websocket","title":"WebSocket","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"websocket","type":"InlinedCode"},{"text":" module lets your send, receive and validate websocket messages in a convenient synchronous manner.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def wsSession = websocket.connect(\"/prices\")\nwsSession.send([symbol: \"IBM\"])\n\nwsSession.received.waitTo == [\n        price: greaterThan(100),\n        symbol: \"IBM\"]\nwsSession.close()","title":"connect, send and wait example","surroundedBy":"connect-send-wait","anchorId":"websocket-connect-send-and-wait-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var wsSession = websocket.connect(\"/prices\");\nwsSession.send(map(\"symbol\", \"IBM\"));\n\nwsSession.received.waitTo(equal(map(\n        \"price\", greaterThan(100),\n        \"symbol\", \"IBM\")));\nwsSession.close();","title":"connect, send and wait example","surroundedBy":"connect-send-wait","anchorId":"websocket-connect-send-and-wait-example-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"waitUntilReceiveMessageNoPath","lines":["\u001B[33m> \u001B[34mconnecting \u001B[33mto \u001B[36mwebsocket \u001B[35m/prices\u001B[0m","\u001B[32m. \u001B[34mconnected \u001B[33mto \u001B[36mwebsocket \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m13ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34msending \u001B[36mtext \u001B[34mmessage \u001B[33mto \u001B[35mws://localhost:38809/prices\u001B[0m","  \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[0m","\u001B[32m. \u001B[34msent \u001B[36mtext \u001B[34mmessage \u001B[33mto \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices \u001B[0m\u001B[34mto equal \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m100\u001B[33m>\u001B[33m, \u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[0m","  \u001B[33m> \u001B[36m[1/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m77\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[25/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m101\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[25/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices \u001B[0m\u001B[34mequals \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m100\u001B[33m>\u001B[33m, \u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[33m (\u001B[32m224ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mclosing \u001B[36mwebsocket \u001B[35mws://localhost:38809/prices\u001B[0m","\u001B[32m. \u001B[34mclosed \u001B[36mwebsocket \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"websocket-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"url":"/webtau/web-socket/received-messages","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]}]},{"id":"graphql-api","title":"GraphQL API","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"graphql","type":"InlinedCode"},{"text":" module lets you exercise and validate a GraphQL API.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It provides a simplified way to access the JSON response of an end-point and provides a DSL to execute queries and mutations.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    def query = \"{ weather { temperature } }\";\n    graphql.execute(query) {\n        weather.temperature.shouldBe < 100\n    }\n}","title":"GraphQL API test (Groovy specific runner)","anchorId":"graphql-api-graphql-api-test-groovy-specific-runner","type":"Snippet"},{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.graphql\n\n@RunWith(WebTauRunner.class)\nclass GraphQLWeatherGroovyIT {\n    @Test\n    void checkWeather() {\n        def query = \"{ weather { temperature } }\";\n        graphql.execute(query) {\n            weather.temperature.shouldBe < 100\n        }\n    }\n}","title":"GraphQL API test (JUnit4)","anchorId":"graphql-api-graphql-api-test-junit4","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"data":{"weather":{"temperature":88}}},"paths":[],"anchorId":"graphql-api-server-response","type":"Json"}]}],"config":{},"type":"Columns"}]},{"name":"Java","content":[{"columns":[{"content":[{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class GraphQLWeatherJavaIT {\n    @Test\n    public void checkWeather() {\n        String query = \"{ weather { temperature } }\";\n        graphql.execute(query, (header, body) -> {\n            body.get(\"data.weather.temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","title":"GraphQL API test (JUnit4 Java)","anchorId":"graphql-api-graphql-api-test-junit4-java","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"data":{"weather":{"temperature":88}}},"paths":[],"anchorId":"graphql-api-server-response-2","type":"Json"}]}],"config":{},"type":"Columns"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"url":"/webtau/GraphQL/queries-and-mutations","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]}]},{"id":"persona","title":"Persona","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"url":"/webtau/persona/introduction","isFile":false,"type":"Link","content":[{"text":"Persona","type":"SimpleText"}]},{"text":" concept to test API Authorization and collaboration Web Apps like chats and editors.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"scenario(\"my bank balance\") {\n    Alice {\n        http.get(\"/statement\") {\n            balance.shouldBe > 100\n        }\n    }\n\n    Bob {\n        http.get(\"/statement\") {\n            balance.shouldBe < 50\n        }\n    }\n}","title":"persona authorization","excludeRegexp":["package","import"],"anchorId":"persona-persona-authorization","type":"Snippet"},{"title":"Alice server response","data":{"balance":150},"paths":[],"anchorId":"persona-alice-server-response","type":"Json"},{"title":"Bob server response","data":{"balance":30},"paths":[],"anchorId":"persona-bob-server-response","type":"Json"}]},{"name":"Java","content":[{"lang":"java","snippet":"@WebTau\npublic class PersonaHttpJavaTest {\n    @Test\n    public void checkBalance() {\n        Alice.execute(() -> http.get(\"/statement\", (header, body) -> {\n            body.get(\"balance\").shouldBe(greaterThan(100));\n        }));\n\n        Bob.execute(() -> http.get(\"/statement\", (header, body) -> {\n            body.get(\"balance\").shouldBe(lessThan(50));\n        }));\n    }\n}","title":"persona authorization","excludeRegexp":["package","import","http.doc"],"anchorId":"persona-persona-authorization-2","type":"Snippet"},{"title":"Alice server response","data":{"balance":150},"paths":[],"anchorId":"persona-alice-server-response-2","type":"Json"},{"title":"Bob server response","data":{"balance":30},"paths":[],"anchorId":"persona-bob-server-response-2","type":"Json"}]}],"type":"Tabs"}]},{"id":"browser","title":"Browser","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"browser","type":"InlinedCode"},{"text":" module lets you interact with a browser.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"High level abstractions streamline location, assertion and async logic.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau leverages ","type":"SimpleText"},{"url":"https://www.selenium.dev","isFile":false,"type":"Link","content":[{"text":"Selenium WebDriver","type":"SimpleText"}]},{"text":" to do the heavy lifting.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.waitToBe > 1\n}","title":"browser test (groovy script)","anchorId":"browser-browser-test-groovy-script","type":"Snippet"},{"lang":"groovy","snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def header = $(\"#header\")\n    def welcomeMessage = $(\"#welcome\")\n    def searchMessage = $(\"#message\")\n    def box = $(\"#search-box\")\n\n    def resultsArea = $(\"#results\")\n    def results = $(\"#results .result\")\n    def numberOfResults = results.count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(browser.keys.enter)\n    }\n}","title":"SearchPage.groovy","type":"Snippet"},{"lang":"groovy","snippet":"package pages\n\nclass Pages {\n    static final def search = new SearchPage()\n}","title":"Pages.groovy","excludeRegexp":["calculation","form","payments"],"anchorId":"browser-pages-groovy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static com.example.tests.junit5.pages.Pages.*;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WebSearchJavaTest {\n    @Test\n    public void searchByQuery() {\n        search.submit(\"search this\");\n        search.numberOfResults.waitToBe(greaterThan(1));\n    }\n}","title":"browser test (JUnit 5)","anchorId":"browser-browser-test-junit-5","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5.pages;\n\nimport org.testingisdocumenting.webtau.browser.page.PageElement;\nimport org.testingisdocumenting.webtau.browser.page.PageElementValue;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class SearchPage {\n    private final PageElement box = $(\"#search-box\");\n    private final PageElement results = $(\"#results .result\");\n    public final PageElementValue<Integer> numberOfResults = results.count;\n\n    public void submit(String query) {\n        browser.open(\"/search\");\n\n        box.setValue(query);\n        box.sendKeys(browser.keys.enter);\n    }\n}","title":"SearchPage.java","anchorId":"browser-searchpage-java","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5.pages;\n\npublic class Pages {\n    public static SearchPage search = new SearchPage();\n}","title":"Pages.java","anchorId":"browser-pages-java","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"searchByQuery","lines":["\u001B[33m> \u001B[34minitializing \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[0m","\u001B[32m. \u001B[34minitialized \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[33m (\u001B[32m582ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mopening \u001B[35mhttp://localhost:45947/search\u001B[0m","\u001B[32m. \u001B[34mopened \u001B[35mhttp://localhost:45947/search\u001B[33m (\u001B[32m87ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34msetting value \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","  \u001B[33m> \u001B[34mclearing \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","  \u001B[32m. \u001B[34mcleared \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m58ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[34msending keys \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","  \u001B[32m. \u001B[34msent keys \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m84ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[34mset value \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m175ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34msending keys \u001B[32m<enter> \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","\u001B[32m. \u001B[34msent keys \u001B[32m<enter> \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m43ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mcount \u001B[33mof \u001B[35mby css \u001B[1m\u001B[35m#results .result \u001B[0m\u001B[0m\u001B[34mto be greater than \u001B[34m1\u001B[0m","\u001B[32m. \u001B[36mcount \u001B[33mof \u001B[35mby css \u001B[1m\u001B[35m#results .result \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m1\u001B[33m (\u001B[32m21ms\u001B[33m)\u001B[0m"],"anchorId":"browser-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"url":"/webtau/browser/basic-configuration","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]}]},{"id":"fake-static-and-proxy-servers","title":"Fake, Static And Proxy Servers","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"server","type":"InlinedCode"},{"text":" module lets you create and control static, fake and proxy servers:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Static servers to quickly host HTML, JSON, and similar content","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fake servers to control response based request","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Proxy servers to simulate outages and record interactions for failures investigation","type":"SimpleText"}]}]}]},{"lang":"groovy","snippet":"def myServer = server.serve(\"my-server\", \"data/staticcontent\")","title":"static server creation example","surroundedBy":"static-server-create","anchorId":"fake-static-and-proxy-servers-static-server-creation-example","type":"Snippet"},{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") { request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\n        .get(\"/bye/:name\") { request -> server.response([message: \"bye ${request.param(\"name\")}\"]) }","title":"fake server creation example","surroundedBy":"router-example","anchorId":"fake-static-and-proxy-servers-fake-server-creation-example","type":"Snippet"},{"lang":"groovy","snippet":"def proxyServer = server.proxy(\"test-proxy-server\", targetServer.baseUrl)","title":"proxy server creation example","surroundedBy":"proxy-server-creation","anchorId":"fake-static-and-proxy-servers-proxy-server-creation-example","type":"Snippet"},{"type":"Paragraph","content":[{"text":"You can apply overrides to any created server. You can also put servers into a \"bad\" state.","type":"SimpleText"}]},{"lang":"groovy","snippet":"proxyServer.markUnresponsive()","title":"unresponsive server","surroundedBy":"mark-unresponsive-example","anchorId":"fake-static-and-proxy-servers-unresponsive-server","type":"Snippet"},{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") {request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\nmyServer.addOverride(router)","title":"content override","surroundedBy":"override-example","anchorId":"fake-static-and-proxy-servers-content-override","type":"Snippet"},{"type":"Paragraph","content":[{"url":"/webtau/servers/introduction","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]}]},{"id":"database","title":"Database","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"db","type":"InlinedCode"},{"text":" module streamlines databases data setup, assertion and waiting on.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"url":"/webtau/database/introduction","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [     \"id\" | \"description\" |          \"available\" |                \"type\" |       \"price\" ] {\n           _____________________________________________________________________________________________\n           cell.guid | \"nice set\"    |                 true |                \"card\" |            1000 // cell.guid generates random guid that can be used for ids\n           cell.guid | \"nice set\"    |                 true |                \"card\" | cell.above + 10 // cell.above refers values above and can be modified with simple math operations\n           cell.guid | \"another set\" | permute(true, false) | permute(\"rts\", \"fps\") | cell.above + 20 } // permute generates additional rows generating new rows with all the permutations","entry":"use table data permute, above and guid to generate rows","title":"DB data setup example","bodyOnly":true,"startLine":"def PRICES","endLine":"cell.above + 20","commentsType":"inline","type":"Snippet"}]},{"id":"cli","title":"CLI","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"cli","type":"InlinedCode"},{"text":" module helps with running and testing command line tools","type":"SimpleText"}]},{"type":"Paragraph","content":[{"url":"/webtau/cli/introduction","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]},{"lang":"groovy","snippet":"cli.run('echo hello world') {\n    output.should contain('hello')\n    output.should contain('world')\n}","title":"output validation","anchorId":"cli-output-validation","type":"Snippet"}]},{"id":"business-logic-jvm","title":"Business Logic (JVM)","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Powerful WebTau matchers help with complex data validation and provide rich output to help with failure investigation:","type":"SimpleText"}]},{"type":"Paragraph","content":[{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Read More","type":"SimpleText"}]}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"List<Account> accounts = fetchAccounts()\nTableData expected = [\"*id\" | \"name\"       | \"address\"] { // id is a key column\n                     _________________________________________\n                      \"ac2\" | \"Works\"      | [zipCode: \"zip2\"] // when key is present, comparison is order agnostic\n                      \"ac1\" | \"Home\"       | [zipCode: \"zip1\"]\n                      \"ac3\" | \"My Account\" | [zipCode: \"zip8\"] }\n\naccounts.should == expected","surroundedBy":"beans-table-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Account> accounts = fetchAccounts();\nTableData expected = table(\"*id\",       \"name\", \"address\",  // id is a key column\n                           ________________________________________,\n                           \"ac2\",      \"Works\", map(\"zipCode\", \"zip2\"), // when key is present, comparison is order agnostic\n                           \"ac1\",       \"Home\", map(\"zipCode\", \"zip1\"),\n                           \"ac3\", \"My Account\", map(\"zipCode\", \"zip8\"));\n\nactual(accounts).should(equal(expected));","surroundedBy":"beans-table-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"title":"beans mismatches highlighted","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m*\u001B[35mid  \u001B[33m │ \u001B[35mname        \u001B[33m │ \u001B[35maddress            ","                                    \u001B[32m\"ac2\"\u001B[33m │ \u001B[32m\"Works\"     \u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}","                                    \u001B[32m\"ac1\"\u001B[33m │ \u001B[32m\"Home\"      \u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip1\"\u001B[33m}","                                    \u001B[32m\"ac3\"\u001B[33m │ \u001B[32m\"My Account\"\u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip8\"\u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][2].address.zipCode\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"zip3\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                           \u001B[36mexpected\u001B[0m: \u001B[32m\"zip8\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                           \u001B[0m              ^\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][1].name\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"Work\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                \u001B[36mexpected\u001B[0m: \u001B[32m\"Works\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                \u001B[0m               ^\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[35maddress                               \u001B[33m │ \u001B[35mdescription   \u001B[33m │ \u001B[35mid   \u001B[33m │ \u001B[35mname        \u001B[0m","  \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC1\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip1\"\u001B[33m}    \u001B[33m │ \u001B[32m\"test account\"\u001B[33m │ \u001B[32m\"ac1\"\u001B[33m │ \u001B[32m\"Home\"      \u001B[0m","  \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC2\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}    \u001B[33m │ \u001B[32m\"test account\"\u001B[33m │ \u001B[32m\"ac2\"\u001B[33m │ \u001B[31m**\"Work\"**  \u001B[0m","  \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC3\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[31m**\"zip3\"**\u001B[33m}\u001B[33m │ \u001B[32m\"test account\"\u001B[33m │ \u001B[32m\"ac3\"\u001B[33m │ \u001B[32m\"My Account\"\u001B[0m"],"anchorId":"business-logic-jvm-beans-mismatches-highlighted","type":"CliOutput"}]},{"id":"repl","title":"REPL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use powerful ","type":"SimpleText"},{"url":"/webtau/REPL/experiments","isFile":false,"type":"Link","content":[{"text":"REPL","type":"SimpleText"}]},{"text":" mode to significantly speed up end-to-end tests development.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Build your tests one step at a time without losing time on restarts.","type":"SimpleText"}]},{"title":"trying css selectors","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m $(\"p\")","\u001B[34mfound single element using \u001B[35mby css \u001B[1m\u001B[35mp\u001B[0m","  \u001B[35minnerText: \u001B[32mhello web page\u001B[0m","  \u001B[33m<\u001B[34mp\u001B[33m>\u001B[0mhello web page\u001B[33m</\u001B[34mp\u001B[33m>\u001B[0m"],"anchorId":"repl-trying-css-selectors","type":"CliOutput"}]},{"id":"reporting","title":"Reporting","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Leverage out of the box ","type":"SimpleText"},{"url":"/webtau/report/introduction","isFile":false,"type":"Link","content":[{"text":"rich reporting","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Report captures everything you do. Single self-sufficient file that can be slacked or emailed.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Permalinks let you share the exact failure problem with your colleagues.","type":"SimpleText"}]},{"fit":true,"border":true,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-separated-http-calls.png","timestamp":1692272667830,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]},{"id":"documentation-assistance","title":"Documentation Assistance","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau helps you to capture test artifacts like ","type":"SimpleText"},{"url":"/webtau/HTTP/documentation-artifacts","isFile":false,"type":"Link","content":[{"text":"API Responses","type":"SimpleText"}]},{"text":", ","type":"SimpleText"},{"url":"/webtau/browser/documentation-artifacts","isFile":false,"type":"Link","content":[{"text":"screenshots","type":"SimpleText"}]},{"text":",","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"command line output to automate your user facing documentation creation.","type":"SimpleText"}]},{"diagram":{"isInvertedTextColorByStyleId":{},"svg":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: Generated Pages: 1 -->\n<svg width=\"434pt\" height=\"48pt\"\n viewBox=\"0.00 0.00 434.00 48.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 44)\">\n<title>Generated</title>\n<polygon fill=\"transparent\" stroke=\"transparent\" points=\"-4,4 -4,-44 430,-44 430,4 -4,4\"/>\n<!-- build -->\n<g id=\"node1\" class=\"node\">\n<title>build</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"0,-0.5 0,-39.5 54,-39.5 54,-0.5 0,-0.5\"/>\n<text text-anchor=\"middle\" x=\"27\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Build</text>\n</g>\n<!-- deploy -->\n<g id=\"node2\" class=\"node\">\n<title>deploy</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"90,-0.5 90,-39.5 153,-39.5 153,-0.5 90,-0.5\"/>\n<text text-anchor=\"middle\" x=\"121.5\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Deploy</text>\n</g>\n<!-- build&#45;&gt;deploy -->\n<g id=\"edge1\" class=\"edge\">\n<title>build&#45;&gt;deploy</title>\n<path fill=\"none\" stroke=\"black\" d=\"M54.26,-20C62.24,-20 71.21,-20 79.91,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"79.92,-23.5 89.92,-20 79.92,-16.5 79.92,-23.5\"/>\n</g>\n<!-- testrun -->\n<g id=\"node3\" class=\"node\">\n<title>testrun</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"189,-0.5 189,-39.5 259,-39.5 259,-0.5 189,-0.5\"/>\n<text text-anchor=\"middle\" x=\"224\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Test Run</text>\n</g>\n<!-- deploy&#45;&gt;testrun -->\n<g id=\"edge2\" class=\"edge\">\n<title>deploy&#45;&gt;testrun</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.2,-20C161.33,-20 170.27,-20 178.96,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"178.98,-23.5 188.98,-20 178.98,-16.5 178.98,-23.5\"/>\n</g>\n<!-- documentation -->\n<g id=\"node4\" class=\"node\">\n<title>documentation</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"295,-0.5 295,-39.5 426,-39.5 426,-0.5 295,-0.5\"/>\n<text text-anchor=\"middle\" x=\"360.5\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Documentation Build</text>\n</g>\n<!-- testrun&#45;&gt;documentation -->\n<g id=\"edge3\" class=\"edge\">\n<title>testrun&#45;&gt;documentation</title>\n<path fill=\"none\" stroke=\"black\" d=\"M259.29,-20C267.2,-20 275.93,-20 284.83,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"284.92,-23.5 294.92,-20 284.92,-16.5 284.92,-23.5\"/>\n</g>\n</g>\n</svg>\n","stylesByNodeId":{"testrun":["h"]},"id":"dag1"},"idsToHighlight":[],"wide":false,"urls":{},"type":"GraphVizDiagram"},{"type":"Paragraph","content":[{"text":"Below is the example of API documentation with example of requests/response captured by a test:","type":"SimpleText"}]},{"method":"post","url":"/employee","type":"OpenApiMethodAndUrl"},{"type":"Paragraph","content":[{"text":"Create a new employee, by sending details and get back the id of a newly created employee","type":"SimpleText"}]},{"style":"api","id":"documentation-assistance-request","level":2,"title":"Request","type":"SubHeading"},{"parameters":[{"name":"firstName*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_firstName","description":[{"type":"Paragraph","content":[{"text":"first name of an employee","type":"SimpleText"}]}]},{"name":"lastName*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_lastName","description":[{"type":"Paragraph","content":[{"text":"last name of an employee","type":"SimpleText"}]}]}],"title":"application/json","collapsed":false,"noGap":true,"type":"ApiParameters"},{"style":"api","id":"documentation-assistance-responses","level":2,"title":"Responses","type":"SubHeading"},{"style":"api","id":"documentation-assistance-responses-200","level":4,"title":"200","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"customer already exists","type":"SimpleText"}]},{"parameters":[{"name":"id*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_id","description":[{"type":"Paragraph","content":[{"text":"employee unique identifier","type":"SimpleText"}]}]}],"title":"application/json","collapsed":false,"noGap":true,"type":"ApiParameters"},{"style":"api","id":"documentation-assistance-responses-201","level":4,"title":"201","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"customer created successfully","type":"SimpleText"}]},{"parameters":[{"name":"id*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_id","description":[{"type":"Paragraph","content":[{"text":"employee unique identifier","type":"SimpleText"}]}]}],"title":"application/json","collapsed":false,"noGap":true,"type":"ApiParameters"},{"columns":[{"content":[{"title":"request payload","data":{"firstName":"FN","lastName":"LN"},"paths":[],"anchorId":"documentation-assistance-responses-201-request-payload","type":"Json"}]},{"content":[{"title":"response payload","pathsFile":"doc-artifacts/employee-post/paths.json","data":{"id":"id-generated-2"},"paths":["root.id"],"anchorId":"documentation-assistance-responses-201-response-payload","type":"Json"}]}],"config":{},"type":"Columns"},{"fit":true,"annotate":true,"title":"auto created screenshot and annotations","imageSrc":"/webtau/doc-artifacts/search.png","timestamp":1692272303449,"shapes":[{"type":"badge","text":"1","x":111,"y":78,"align":"Center","invertedColors":false},{"type":"badge","text":"2","x":450,"y":166,"align":"Center","invertedColors":false}],"width":900.0,"height":355.0,"anchorId":"documentation-assistance-responses-201-auto-created-screenshot-and-annotations","type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Getting Started","pageTitle":"What Is This","pageMeta":{},"dirName":"getting-started","fileName":"what-is-this","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"WebTau","id":"webtau"},{"title":"Scripting And JUnit","id":"scripting-and-junit"},{"title":"Rest API","id":"rest-api"},{"title":"WebSocket","id":"websocket"},{"title":"GraphQL API","id":"graphql-api"},{"title":"Persona","id":"persona"},{"title":"Browser","id":"browser"},{"title":"Fake, Static And Proxy Servers","id":"fake-static-and-proxy-servers"},{"title":"Database","id":"database"},{"title":"CLI","id":"cli"},{"title":"Business Logic (JVM)","id":"business-logic-jvm"},{"title":"REPL","id":"repl"},{"title":"Reporting","id":"reporting"},{"title":"Documentation Assistance","id":"documentation-assistance"}]}},{"type":"Page","content":[{"id":"reporting","title":"Reporting","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau in its core captures test actions and assertions.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Everything you do, every match that is ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"passed","type":"SimpleText"}]},{"text":" or failed is being recorded.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Information is available in console output, so you don't need to sprinkle ","type":"SimpleText"},{"code":"println","type":"InlinedCode"},{"text":" statements everywhere.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And all the captured information is available as self-contained rich HTML report.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Single report HTML file that you can email, slack or host on an FS and open with no servers required.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"TableData table = data.csv.table(\"data/table.csv\")","title":"read table data from csv","surroundedBy":"// read","anchorId":"reporting-read-table-data-from-csv","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData table = data.csv.table(\"data/table.csv\");","title":"read table data from csv","surroundedBy":["// read-table"],"anchorId":"reporting-read-table-data-from-csv-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mreading \u001B[36mcsv \u001B[33mfrom \u001B[36mfile or resource \u001B[35mdata/table.csv\u001B[0m","\u001B[32m. \u001B[34mread \u001B[34m3 \u001B[36mlines of csv \u001B[33mfrom \u001B[36mfile \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/data/table.csv\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"reporting-console-output","type":"CliOutput"}]},{"id":"high-level-api","title":"High Level API","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau provides high level API to interact with HTTP, Browser, Database, File System.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It is easy to use, requires minimum setup and every action is reported.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"You can use WebTau to only test a single layer of your product, but you can als combine layers in a single test and setup data using HTTP layer and validate using a Browser layer or a DB layer.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"All is with a single configuration, consistent set of matchers and rich reporting.","type":"SimpleText"}]}]},{"id":"syntax-sugar","title":"Syntax Sugar","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau provides DSL to make common testing operations succinct. Syntax sugar is available for Java and Groovy and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"since WebTau core is Java, additional syntax sugar can be added to languages like Kotlin and Scala.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                | cell.above + 1\n \"Mike\" | cell.above                | cell.above + 1 }","entry":"createTableDataWithAboveRefAndMath","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Name\", \"Start Date\"             , \"Games To Play\",\n     ________________________________________________________________,\n      \"John\", LocalDate.of(2016, 6, 20), 10,\n      \"Bob\" , cell.above               , cell.above.plus(1),\n      \"Mike\", cell.above               , cell.above.plus(1))","entry":"createTableDataWithAboveRefAndMath","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"repl","title":"REPL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Writing end-to-end tests is hard and there are a lot of excuses not write one.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"End-to-end test feedback loop is usually long and slow. WebTau provides ","type":"SimpleText"},{"url":"/webtau/REPL/experiments","isFile":false,"type":"Link","content":[{"text":"REPL","type":"SimpleText"}]},{"text":" mode to help you","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"experiment with API and write a test in incremental fashion.","type":"SimpleText"}]},{"title":"exploring http.get","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m http.get(\"https://jsonplaceholder.typicode.com/todos/1\")","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m6ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json; charset=utf-8):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"userId\"\u001B[33m: \u001B[34m1\u001B[33m,\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[34m1\u001B[33m,\u001B[0m","    \u001B[35m\"title\"\u001B[33m: \u001B[32m\"delectus aut autem\"\u001B[33m,\u001B[0m","    \u001B[35m\"completed\"\u001B[33m: \u001B[34mfalse\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[33m (\u001B[32m759ms\u001B[33m)\u001B[0m"],"anchorId":"repl-exploring-http-get","type":"CliOutput"}]},{"id":"documentation-artifacts","title":"Documentation Artifacts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Your users deserve useful and up-to date documentation. Manually maintaining documentation is hard and expensive.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"WebTau helps you to capture test artifacts during the tests, for example","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Screenshots (with annotations)","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"API request/response examples","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"CLI params and sample output","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"Captured artifacts are agnostic to the documentation system. However, you can take a look at ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/znai","isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}]},{"text":" documentation system","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"that was designed with documentation maintenance in mind.","type":"SimpleText"}]},{"columns":[{"content":[{"title":"captured request payload","data":{"firstName":"FN","lastName":"LN"},"paths":[],"anchorId":"documentation-artifacts-captured-request-payload","type":"Json"}]},{"content":[{"title":"captured response payload","pathsFile":"doc-artifacts/employee-post/paths.json","data":{"id":"id-generated-2"},"paths":["root.id"],"anchorId":"documentation-artifacts-captured-response-payload","type":"Json"}]}],"config":{},"type":"Columns"},{"delimiter":".","startNumber":1,"type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Enter search query","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Results are displayed in a grid","type":"SimpleText"}]}]}]},{"border":true,"fit":true,"annotate":true,"title":"automatically captured screenshot with annotations","imageSrc":"/webtau/doc-artifacts/search.png","timestamp":1692272303449,"shapes":[{"type":"badge","text":"1","x":111,"y":78,"align":"Center","invertedColors":false},{"type":"badge","text":"2","x":450,"y":166,"align":"Center","invertedColors":false}],"width":900.0,"height":355.0,"anchorId":"documentation-artifacts-automatically-captured-screenshot-with-annotations","type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Getting Started","pageTitle":"Why","pageMeta":{},"dirName":"getting-started","fileName":"why","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Reporting","id":"reporting"},{"title":"High Level API","id":"high-level-api"},{"title":"Syntax Sugar","id":"syntax-sugar"},{"title":"REPL","id":"repl"},{"title":"Documentation Artifacts","id":"documentation-artifacts"}]}},{"type":"Page","content":[{"id":"runners","title":"Runners","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To run WebTau tests you have a few options:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/installation#groovy-runner","isFile":false,"type":"Link","content":[{"text":"Standalone Groovy Runner","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/installation#junit5","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/installation#junit4","isFile":false,"type":"Link","content":[{"text":"JUnit4","type":"SimpleText"}]}]}]}]}]},{"id":"groovy-runner","title":"Groovy Runner","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"url":"https://brew.sh","isFile":false,"type":"Link","content":[{"text":"brew","type":"SimpleText"}]},{"text":" installed in your system use","type":"SimpleText"}]},{"lang":"","snippet":"brew install testingisdocumenting/brew/webtau\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"url":"https://sdkman.io","isFile":false,"type":"Link","content":[{"text":"sdkman","type":"SimpleText"}]},{"text":" installed in your system use","type":"SimpleText"}]},{"lang":"","snippet":"sdk install webtau\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Alternatively, download and unzip ","type":"SimpleText"},{"url":"https://repo.maven.apache.org/maven2/org/testingisdocumenting/webtau/webtau-dist/2.0/webtau-dist-2.0-webtau.zip","isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Add it to your ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: WebTau installed manually requires Java 17+ to be present in ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"}]},{"command":"webtau --example","paramsToHighlight":[],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Navigate into ","type":"SimpleText"},{"code":"todo","type":"InlinedCode"},{"text":" example","type":"SimpleText"}]},{"command":"cd examples/todo","paramsToHighlight":[],"type":"CliCommand"},{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('fetch todo item') {\n    http.get('/todos/1') {\n        title.should == 'delectus aut autem'\n        completed.should == false\n    }\n}","title":"todolist.groovy","anchorId":"groovy-runner-todolist-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To run test","type":"SimpleText"}]},{"command":"webtau todolist.groovy --url=https://jsonplaceholder.typicode.com","paramsToHighlight":["url"],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Note: using ","type":"SimpleText"},{"code":"import","type":"InlinedCode"},{"text":" is optional and is mainly for IDE auto completion. Imports are added implicitly","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"during command line run.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To integrate CLI run into maven build use:","type":"SimpleText"}]},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"WebTau Dependency","anchorId":"groovy-runner-webtau-dependency","type":"Snippet"},{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <env>integration</env>\n        <url>http://optional-base-url</url>\n        <config>optional-config-file-name-override.cfg.groovy</config>\n        <reportPath>optional-report-path-override.html</reportPath>\n        <failedReportPath>optional-failed-report-path-override.html</failedReportPath>\n        <reportName>my service</reportName>\n        <reportNameUrl>https://service-under-test</reportNameUrl>\n        <noColor>false</noColor>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","title":"WebTau Plugin","anchorId":"groovy-runner-webtau-plugin","type":"Snippet"},{"type":"Paragraph","content":[{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Learn more about Groovy Runner features","type":"SimpleText"}]}]}]},{"id":"junit5","title":"JUnit5","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"WebTau Groovy Dependency","anchorId":"junit5-webtau-groovy-dependency","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit5</artifactId>\n    <version>2.0</version>\n</dependency>","title":"JUnit5 Dependency","anchorId":"junit5-junit5-dependency","type":"Snippet"},{"lang":"groovy","snippet":"package com.example.tests.junit5\n\nimport org.junit.jupiter.api.Test\nimport org.testingisdocumenting.webtau.junit5.WebTau\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.* // convenient single import for all things webtau\n\n@WebTau // annotation required for reports generation\nclass JUnit5ExampleGroovyTest {\n    @Test\n    void \"my test\"() {\n    }\n}","title":"JUnit 5 example","commentsType":"inline","anchorId":"junit5-junit-5-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"WebTau Java Dependency","anchorId":"junit5-webtau-java-dependency","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit5</artifactId>\n    <version>2.0</version>\n</dependency>","title":"JUnit5 Dependency","anchorId":"junit5-junit5-dependency-2","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*; // convenient single import for all things webtau\n\n@WebTau // annotation required for reports generation\npublic class JUnit5ExampleJavaTest {\n    @Test\n    public void myTest() {\n    }\n}","title":"JUnit 5 example","commentsType":"inline","anchorId":"junit5-junit-5-example-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"url":"/webtau/junit5/getting-started","isFile":false,"type":"Link","content":[{"text":"Learn more about JUnit5 features","type":"SimpleText"}]}]}]},{"id":"junit4","title":"JUnit4","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"WebTau Groovy Dependency","anchorId":"junit4-webtau-groovy-dependency","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit4</artifactId>\n    <version>2.0</version>\n</dependency>","title":"JUnit4 Dependency","anchorId":"junit4-junit4-dependency","type":"Snippet"},{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.* // convenient single import for all things webtau\n\n@RunWith(WebTauRunner.class) // webtau runner to generate reports\nclass JUnit4ExampleGroovyTest {\n    @Test\n    void \"my test\"() {\n    }\n}","title":"JUnit 4 example","commentsType":"inline","anchorId":"junit4-junit-4-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"WebTau Java Dependency","anchorId":"junit4-webtau-java-dependency","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit4</artifactId>\n    <version>2.0</version>\n</dependency>","title":"JUnit4 Dependency","anchorId":"junit4-junit4-dependency-2","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*; // convenient single import for all things webtau\n\n@RunWith(WebTauRunner.class) // webtau runner to generate reports\npublic class JUnit4ExampleJavaTest {\n    @Test\n    public void myTest() {\n    }\n}","title":"JUnit 4 example","commentsType":"inline","anchorId":"junit4-junit-4-example-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"url":"/webtau/junit5/JUnit-4","isFile":false,"type":"Link","content":[{"text":"Learn more about JUnit4 features","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Getting Started","pageTitle":"Installation","pageMeta":{},"dirName":"getting-started","fileName":"installation","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Runners","id":"runners"},{"title":"Groovy Runner","id":"groovy-runner"},{"title":"JUnit5","id":"junit5"},{"title":"JUnit4","id":"junit4"}]}},{"type":"Page","content":[{"id":"config-file","title":"Config File","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau let you specify services url, browser settings, DB url connections, etc in a config file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Depending on ","type":"SimpleText"},{"url":"/webtau/getting-started/installation","isFile":false,"type":"Link","content":[{"text":"runner","type":"SimpleText"}]},{"text":" you use WebTau will read data from a different place.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"type":"Paragraph","content":[{"text":"When you use the Groovy runner, it will look for ","type":"SimpleText"},{"code":"webtau.cfg.groovy","type":"InlinedCode"},{"text":" file (default).","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8080\"","title":"webtau.cfg.groovy","includeRegexp":"localhost","anchorId":"config-file-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: WebTau treats groovy config file as code","type":"SimpleText"}]}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"When you use JUnit like runners, e.g. ","type":"SimpleText"},{"url":"/webtau/getting-started/installation#junit5","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]},{"text":", WebTau expects file named","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"webtau.properties","type":"InlinedCode"},{"text":" to be present in test classpath, e.g. test resources:","type":"SimpleText"}]},{"lang":"properties","snippet":"url = http://localhost:8080","autoTitle":true,"includeRegexp":"localhost","title":"src/test/resources/webtau.properties","anchorId":"config-file-src-test-resources-webtau-properties","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To change config file location use","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"command":"webtau --config my.conf.groovy","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Java","content":[{"lang":"","snippet":"-Dwebtau.properties=my.webtau.properties\n","lineNumber":"","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"environments","title":"Environments","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau supports environment specific config values, and a way to select which environment to set active during tests run.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"url = \"http://localhost:8080\"\n\nenvironments {\n    qa {\n        url = \"http://server.qa:8080\"\n    }\n}","title":"webtau.cfg.groovy","excludeRegexp":"package","anchorId":"environments-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To select an active environment using ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Standalone Runner","type":"SimpleText"}]},{"text":" you","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"can pass ","type":"SimpleText"},{"code":"env","type":"InlinedCode"},{"text":" as cli parameter","type":"SimpleText"}]},{"command":"webtau --env=qa","paramsToHighlight":[],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Additionally you can use environment varialbe to set an active environment: ","type":"SimpleText"},{"code":"WEBTAU_ENV=qa","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"properties","snippet":"url = http://localhost:8080\nenvironments.qa.url = http://server.qa:8080","title":"src/test/resources/webtau.properties","anchorId":"environments-src-test-resources-webtau-properties","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To select an active environment you have two options:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"System property ","type":"SimpleText"},{"code":"-Denv=qa","type":"InlinedCode"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Environment variable ","type":"SimpleText"},{"code":"WEBTAU_ENV=qa","type":"InlinedCode"}]}]}]}]}],"type":"Tabs"}]},{"id":"overrides","title":"Overrides","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau has a list of options you can specify using config file: ","type":"SimpleText"},{"url":"/webtau/configuration/options","isFile":false,"type":"Link","content":[{"text":"url, browserId, etc.","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You can override any value using ","type":"SimpleText"},{"url":"/webtau/configuration/options#environment-variable-options","isFile":false,"type":"Link","content":[{"text":"environment variables","type":"SimpleText"}]},{"text":":","type":"SimpleText"}]},{"lang":"","snippet":"export WEBTAU_URL=http://another-server\nexport WEBTAU_CHROME_DRIVER_PATH=/path/to/chrome/driver\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In addition to environment variables, you can use a runner specific way to override:","type":"SimpleText"}]},{"id":"overrides-groovy-standalone-runner","level":2,"title":"Groovy Standalone Runner","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"In case of Groovy standalone runner, pass ","type":"SimpleText"},{"code":"--<option>=<value>","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"command":"webtau --waitTimeout=25000 --url=http://another-server","paramsToHighlight":[],"type":"CliCommand"},{"id":"overrides-junit-like-runners","level":2,"title":"JUnit Like Runners","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Pass system property via java ","type":"SimpleText"},{"code":"-D","type":"InlinedCode"},{"text":" option:","type":"SimpleText"}]},{"lang":"","snippet":"-Durl=http://another-server\n","lineNumber":"","type":"Snippet"}]},{"id":"disable-ansi-colors","title":"Disable ANSI Colors","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau renders output using colors.","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"Use ","type":"SimpleText"},{"code":"noColor","type":"InlinedCode"},{"text":" option to disable it.","type":"SimpleText"}]},{"lang":"","snippet":"export WEBTAU_NO_COLOR=true\n-DnoColor=true\nwebtau --noColor ...\n","lineNumber":"","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Getting Started","pageTitle":"Configuration","pageMeta":{},"dirName":"getting-started","fileName":"configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Config File","id":"config-file"},{"title":"Environments","id":"environments"},{"title":"Overrides","id":"overrides"},{"title":"Disable ANSI Colors","id":"disable-ansi-colors"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"http","type":"InlinedCode"},{"text":" module lets you exercise and validate HTTP endpoints.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It provides a simplified way to make HTTP calls and validate responses","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Now with ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage","isFile":false,"type":"Link","content":[{"text":"Data Coverage","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"private final def livePrice = http.resource(\"/prices/:ticker\").price\n\n...\n\nlivePrice.of(\"IBM\").waitToBe > 115","title":"wait on http response value","surroundedBy":["live-price-definition","live-price-wait"],"surroundedBySeparator":"\n...\n","anchorId":"wait-on-http-response-value","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"private final HttpLazyResponseValue livePrice = http.resource(\"/prices/:ticker\").get(\"price\");\n\n...\n\nlivePrice.of(\"IBM\").waitToBe(greaterThan(115)));","title":"wait on http response value","surroundedBy":["live-price-definition","live-price-wait"],"surroundedBySeparator":"\n...\n","anchorId":"wait-on-http-response-value-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mto be greater than \u001B[34m115\u001B[0m","  \u001B[33m> \u001B[36m[1/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[31m**100**\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[3/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[32m~~120~~\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[3/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m9ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m115\u001B[33m (\u001B[32m220ms\u001B[33m)\u001B[0m"],"anchorId":"console-output","type":"CliOutput"},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe < 100\n    }\n}","title":"REST API test (Groovy specific runner)","anchorId":"rest-api-test-groovy-specific-runner","type":"Snippet"},{"lang":"groovy","snippet":"package com.example.tests.junit5\n\nimport org.junit.jupiter.api.Test\nimport org.testingisdocumenting.webtau.junit5.WebTau\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau\nclass WeatherGroovyTest {\n    @Test\n    void checkWeather() {\n        http.get(\"/weather\") {\n            temperature.shouldBe < 100\n        }\n    }\n}","title":"REST API test (JUnit5)","anchorId":"rest-api-test-junit5","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"temperature":88},"paths":[],"anchorId":"server-response","type":"Json"}]}],"config":{},"type":"Columns"}]},{"name":"Java","content":[{"columns":[{"content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WeatherJavaTest {\n    @Test\n    public void checkWeather() {\n        http.get(\"/weather\", (header, body) -> {\n            body.get(\"temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","title":"REST API test (JUnit5 Java)","anchorId":"rest-api-test-junit5-java","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"temperature":88},"paths":[],"anchorId":"server-response-2","type":"Json"}]}],"config":{},"type":"Columns"}]}],"type":"Tabs"},{"title":"console output","startLine":"executing","endLine":"executed","lines":["\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/weather\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody.temperature \u001B[0m\u001B[0m\u001B[34mless than \u001B[34m100\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"temperature\"\u001B[33m: \u001B[1m\u001B[32m~~88~~\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/weather\u001B[33m (\u001B[32m31ms\u001B[33m)\u001B[0m"],"anchorId":"console-output-2","type":"CliOutput"}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Introduction","pageMeta":{},"dirName":"HTTP","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"single-test-method","title":"Single Test Method","type":"Section","content":[{"type":"Paragraph","content":[{"text":"We have an app that exposes ","type":"SimpleText"},{"code":"create","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"read","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"update","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"delete","type":"InlinedCode"},{"text":" operations for customer records. Records are being served","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"under ","type":"SimpleText"},{"code":"/customers","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is an example of a ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operations test.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"CRUD operations for customer\") {\n    def customerPayload = [firstName: \"FN\", lastName: \"LN\"] // new customer data\n\n    def id = http.post(\"/customers\", customerPayload) {\n        return id // return id value from response body\n    }\n\n    http.get(\"/customers/${id}\") {\n        body.should == customerPayload // only specified properties will be asserted against\n    }\n\n    def changedLastName = \"NLN\"\n    http.put(\"/customers/${id}\", [*:customerPayload, lastName: changedLastName]) {\n        lastName.should == changedLastName // specifying body is optional\n    }\n\n    http.get(\"/customers/${id}\") {\n        firstName.should == \"FN\"\n        lastName.should == changedLastName\n    }\n\n    def changedFirstName = \"NFN\"\n    http.patch(\"/customers/${id}\", [firstName: changedFirstName])\n\n    http.get(\"/customers/${id}\") {\n        firstName.should == changedFirstName\n        lastName.should == changedLastName\n    }\n\n    http.delete(\"/customers/${id}\") {\n        statusCode.should == 204\n    }\n\n    http.get(\"/customers/${id}\") {\n        statusCode.should == 404\n    }\n}","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class CustomerCrudJavaTest {\n    @Test\n    public void crud() {\n        var customerPayload = http.json( // new customer data\n                \"firstName\", \"FN\",\n                \"lastName\", \"LN\");\n\n        int id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\"); // return id value from response body\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload)); // only specified properties will be asserted against\n        }));\n\n        String changedLastName = \"NLN\";\n        var changedCustomerPayload = http.json(\n                \"firstName\", \"FN\",\n                \"lastName\", \"NLN\");\n\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.get(\"firstName\").should(equal(\"FN\"));\n            body.get(\"lastName\").should(equal(changedLastName));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(404));\n        }));\n    }\n}","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"}]},{"id":"generated-report","title":"Generated Report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"After test runs, WebTau generates ","type":"SimpleText"},{"url":"/webtau/report/introduction","isFile":false,"type":"Link","content":[{"text":"HTML report","type":"SimpleText"}]},{"text":":","type":"SimpleText"}]},{"fit":true,"annotate":false,"border":true,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-http-calls.png","timestamp":1692272665506,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"},{"type":"Paragraph","content":[{"text":"Note: asserted values are being tracked and highlighted inside the report","type":"SimpleText"}]}]},{"id":"separate-test-methods","title":"Separate Test Methods","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of separating one CRUD ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":" into multiple is to be able to run one test at a time.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In order to make each test runnable independently we will use ","type":"SimpleText"},{"code":"createLazyResource","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef customerPayload = [firstName: \"FN\", lastName: \"LN\"]\n\ndef customer = createLazyResource(\"customer\") { // lazy resource to be created on the first access\n    def id = http.post(\"/customers\", customerPayload) {\n        return id\n    }\n\n    return new Customer(id: id, url: \"/customers/${id}\") // definition is below\n}\n\nscenario(\"customer create\") {\n    customer.id.should != null // accessing resource for the first time will trigger POST (in this example)\n}\n\nscenario(\"customer read\") {\n    http.get(customer.url) { // convenient re-use of url defined above\n        body.should == customerPayload\n    }\n}\n\nscenario(\"customer update\") {\n    def changedLastName = \"NLN\"\n    http.put(customer.url, [*:customerPayload, lastName: changedLastName]) {\n        lastName.should == changedLastName\n    }\n\n    http.get(customer.url) {\n        lastName.should == changedLastName\n    }\n}\n\nscenario(\"customer delete\") {\n    http.delete(customer.url) {\n        statusCode.should == 204\n    }\n\n    http.get(customer.url) {\n        statusCode.should == 404\n    }\n}","commentsType":"inline","title":"CRUD separated","anchorId":"separate-test-methods-crud-separated","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.rest.springboot\n\nclass Customer {\n    Number id\n    String url // store url of the created entity\n}","commentsType":"inline","title":"Customer lazy resource","anchorId":"separate-test-methods-customer-lazy-resource","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: to run one scenario at a time use ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" (additional ","type":"SimpleText"},{"code":"s","type":"InlinedCode"},{"text":" in front). ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/selective-run","isFile":false,"type":"Link","content":[{"text":"Read more","type":"SimpleText"}]}]}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of separating one CRUD ","type":"SimpleText"},{"code":"@Test","type":"InlinedCode"},{"text":" into multiple is to be able to run one test at a time.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In order to make each test runnable independently we will leverage ","type":"SimpleText"},{"code":"BeforeAll","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"AfterAll","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"TestMethodOrder","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.testingisdocumenting.webtau.http.request.HttpRequestBody;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport org.junit.jupiter.api.*;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau // annotation to enable rich console output and html reporting\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class) // forcing methods execution order\n@DisplayName(\"customer CRUD\")\npublic class CustomerCrudSeparatedJavaTest {\n    private static final HttpRequestBody customerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"LN\");\n\n    private static final HttpRequestBody changedCustomerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"NLN\");\n\n    private static int id;\n\n    @BeforeAll\n    @DisplayName(\"create customer\") // optional friendly name for reporting purposes\n    public static void createCustomer() {\n        id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n\n        actual(id).shouldNot(equal(0));\n    }\n\n    @Test\n    @Order(1)\n    @DisplayName(\"read customer\")\n    public void read() {\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n    }\n\n    @Test\n    @Order(2) // order dependence saves from creating customer on every test\n    @DisplayName(\"update customer\")\n    public void update() {\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n    }\n\n    @Test\n    @Order(3) // but you can still run each method independently\n    @DisplayName(\"delete customer\")\n    public void delete() {\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(404));\n        }));\n\n        id = -1; // marking as deleted to let cleanup step know that no delete is required\n    }\n\n    @AfterAll\n    public static void cleanup() { // optional (since we create new ids all the time) step to keep your environment clean\n        if (id == -1) {\n            return;\n        }\n\n        http.delete(\"/customers/\" + id);\n    }\n}","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"separate-methods-report","title":"Separate Methods Report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Now report has separate entries for each ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operation. Makes it possible to filter tests by ","type":"SimpleText"},{"code":"create","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"update","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"read","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"delete","type":"InlinedCode"},{"text":" to streamline investigation.","type":"SimpleText"}]},{"fit":true,"border":true,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-separated-http-calls.png","timestamp":1692272667830,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"CRUD Example","pageMeta":{},"dirName":"HTTP","fileName":"CRUD-example","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Single Test Method","id":"single-test-method"},{"title":"Generated Report","id":"generated-report"},{"title":"Separate Test Methods","id":"separate-test-methods"},{"title":"Separate Methods Report","id":"separate-methods-report"}]}},{"type":"Page","content":[{"id":"special-values","title":"Special Values","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Values that you access inside the ","type":"SimpleText"},{"code":"http","type":"InlinedCode"},{"text":" call validation block are special values of ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" type.","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"DataNode","type":"InlinedCode"},{"text":" has methods to assert and traverse the response.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"All assertions made on ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" are tracked and are available as part of the generated report.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    price.should == 100\n    assert price instanceof DataNode\n}","entry":"use groovy closure as validation","bodyOnly":true,"excludeRegexp":"doc-exclude","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", ((header, body) -> {\n    DataNode price = body.get(\"price\");\n    price.should(equal(100));\n}));","entry":"useClosureAsValidation","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"},{"title":"GET /end-point response","pathsFile":"doc-artifacts/data-node-price-access/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":["root.price"],"anchorId":"special-values-get-end-point-response","type":"Json"}]},{"id":"extracting-values","title":"Extracting Values","type":"Section","content":[{"type":"Paragraph","content":[{"text":"As you have seen in ","type":"SimpleText"},{"url":"/webtau/HTTP/CRUD-example","isFile":false,"type":"Link","content":[{"text":"CRUD example","type":"SimpleText"}]},{"text":" you can return values back from a validation block.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def id = http.get(\"/end-point\") {\n    return id\n}\n\nid.should == 10\nid.getClass().should == Integer","entry":"can return simple value from get","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"List<Map<String, ?>> complexList = http.get(\"/end-point\") {\n    return complexList\n}\n\ncomplexList[0].k2.should == 30","entry":"can return complex value from get","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Integer id = http.get(\"/end-point\", ((header, body) -> {\n    return body.get(\"id\");\n}));\n\nactual(id).should(equal(10));","entry":"canReturnSimpleValueFromGet","bodyOnly":true,"type":"Snippet"},{"lang":"java","snippet":"List<Map<String, ?>> complexList = http.get(\"/end-point\", ((header, body) -> {\n    return body.get(\"complexList\");\n}));\n\nNumber k2 = (Number) complexList.get(0).get(\"k2\");\nactual(k2).should(equal(30));","entry":"canReturnComplexValueFromGet","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"WebTau automatically converts leaf value to its correspondent primitive.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It converts List and object to  ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: WebTau will not be able to associate assertions on returned values with a specific call.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Avoid using returned values for validation. Make assertions on ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" instance to generate useful report information such as data coverage.","type":"SimpleText"}]}]},{"id":"properties-on-lists","title":"Properties On Lists","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you have a list of objects like ","type":"SimpleText"},{"code":"complexList","type":"InlinedCode"},{"text":" below, you can access all its children property value with ","type":"SimpleText"},{"code":"complexList.k2","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    complexList.k2.should == [30, 40]\n}","entry":"children key shortcut","bodyOnly":true,"excludeRegexp":"doc-exclude","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", ((header, body) -> {\n    body.get(\"complexList\").get(\"k2\").should(equal(list(30, 40)));\n}));","entry":"childrenKeyShortcut","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"title":"response","pathsFile":"doc-artifacts/properties-on-list/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":["root.complexList[0].k2","root.complexList[1].k2"],"anchorId":"properties-on-lists-response","type":"Json"}]},{"id":"path-based-properties-access","title":"Path based properties access","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Primarily for Java users, WebTau supports the ability to query properties of a ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" via a path instead of chaining","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"get(String name)","type":"InlinedCode"},{"text":" calls.  For example, to obtain a simple property:","type":"SimpleText"}]},{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"object.k1\").should(equal(\"v1\"));\n});","entry":"canQueryNodeByPath","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"It is also possible to query arrays, including the ability to query for the Nth element from the end:","type":"SimpleText"}]},{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList[0].k1\").should(equal(\"v1\"));\n    body.get(\"complexList[-1].k1\").should(equal(\"v11\"));\n});","entry":"canQuerySpecificListElementByPath","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Similarly to the Groovy example in ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node#properties-on-lists","isFile":false,"type":"Link","content":[{"text":"Properties On Lists","type":"SimpleText"}]},{"text":", it is possible to access","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"all children property values:","type":"SimpleText"}]},{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList.k1\").should(equal(list(\"v1\", \"v11\")));\n});","entry":"canQueryListByNodePath","bodyOnly":true,"type":"Snippet"}]},{"id":"if-else-logic","title":"If-Else Logic","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Even though values that you access inside validation block are special values of ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" type, you can still","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"perform simple ","type":"SimpleText"},{"code":"if-else","type":"InlinedCode"},{"text":" like logic checks on them.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In case of Groovy, accessing a value during if-else will mark the value as ","type":"SimpleText"},{"type":"Emphasis","content":[{"text":"accessed","type":"SimpleText"}]},{"text":" for reporting.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In case of Java, use ","type":"SimpleText"},{"code":".get()","type":"InlinedCode"},{"text":" to access underlying value. No marking of the value will during comparison.","type":"SimpleText"}]},{"title":"response","data":{"addressType":"complex","address":{"zipCode":"12345"}},"paths":[],"anchorId":"if-else-logic-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def zipCode = http.get(\"/address\") {\n    return addressType == \"complex\" ? address.zipCode : \"NA\"\n}","entry":"if-else logic","bodyOnly":true,"excludeRegexp":"doc-exclude","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Warning: Comparison of complex values is not properly implemented due to current Groovy API implementation details","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"String zipCode = http.get(\"/address\", ((header, body) -> {\n    return body.get(\"addressType\").get().equals(\"complex\") ? body.get(\"address.zipCode\") : \"NA\";\n}));","entry":"ifElseLogic","bodyOnly":true,"excludeRegexp":"doc-exclude","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"iteration","title":"Iteration","type":"Section","content":[{"type":"Paragraph","content":[{"code":"DataNode","type":"InlinedCode"},{"text":" have convenient methods to iterate over values and make assertions.","type":"SimpleText"}]},{"title":"response","highlight":"amount","data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":[],"anchorId":"iteration-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    list.each { it.shouldBe > 0 }\n}","entry":"each on simple list","bodyOnly":true,"title":"List of simple values","type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    complexList.each { k2.shouldBe > 0 }\n}","entry":"each on complex list","bodyOnly":true,"title":"List of complex values","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"list\").forEach(node -> node.shouldBe(greaterThan(0)));\n});","entry":"eachOnSimpleList","bodyOnly":true,"title":"List of simple values","anchorId":"iteration-list-of-simple-values","type":"Snippet"},{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList\").forEach(node -> node.get(\"k2\").shouldBe(greaterThan(0)));\n});","entry":"eachOnComplexList","bodyOnly":true,"title":"List of complex values","anchorId":"iteration-list-of-complex-values","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"find","title":"Find","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"find","type":"InlinedCode"},{"text":" to find a ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" based on a provided predicate","type":"SimpleText"}]},{"title":"response","pathsFile":"doc-artifacts/find-on-list-and-assert/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":["root.complexList[0].k1","root.complexList[0].k2"],"anchorId":"find-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    def found = complexList.find { it.id.get() == \"id1\" }\n    found.k1.should == \"v1\"\n    found.k2.should == 30\n}\n\nhttp.doc.capture(\"find-on-list-and-assert\") // doc-exclude","title":"find and assert on value","entry":"find on list and assert","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"def found = http.get(\"/end-point\") {\n    return complexList.find { it.id == \"id1\" }\n}","title":"find and return a complex value","entry":"find on list and return","excludeRegexp":"doc-exclude","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", ((header, body) -> {\n    DataNode found = body.get(\"complexList\").find(node -> node.get(\"id\").get().equals(\"id1\"));\n    found.get(\"k1\").should(equal(\"v1\"));\n    found.get(\"k2\").should(equal(30));\n}));","title":"find and assert on value","entry":"findOnListAndAssert","bodyOnly":true,"anchorId":"find-find-and-assert-on-value","type":"Snippet"},{"lang":"java","snippet":"Map<String, ?> found = http.get(\"/end-point\", ((header, body) -> {\n    return body.get(\"complexList\").find(node -> node.get(\"id\").get().equals(\"id1\"));\n}));","title":"find and return a complex value","entry":"findOnListAndReturn","excludeRegexp":"doc-exclude","bodyOnly":true,"anchorId":"find-find-and-return-a-complex-value","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: WebTau will not track assertion on returned values and it will not show in reports and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"will not participate in data coverage. Use returned values for further test logic.","type":"SimpleText"}]}]},{"id":"find-all","title":"Find All","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"findAll","type":"InlinedCode"},{"text":" to find a list of ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":"s based on a provided predicate","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    def found = complexList.findAll { it.k2 > 20 }\n    found.k1.should containAll(\"v1\", \"v11\")\n}","entry":"findAll on complex list","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", ((header, body) -> {\n    DataNode found = body.get(\"complexList\").findAll(node -> {\n        int k2 = node.get(\"k2\").get();\n        return k2 > 20;\n    });\n\n    found.get(\"k1\").should(containAll(\"v1\", \"v11\"));\n}));","title":"find and assert on value","entry":"findAllOnComplexList","bodyOnly":true,"anchorId":"find-all-find-and-assert-on-value","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: The result of ","type":"SimpleText"},{"code":"findAll","type":"InlinedCode"},{"text":" is of type ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" and you can leverage ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node#properties-on-lists","isFile":false,"type":"Link","content":[{"text":"Properties On Lists","type":"SimpleText"}]}]}]},{"id":"collect","title":"Collect","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"collect","type":"InlinedCode"},{"text":" to transform a collection of items","type":"SimpleText"}]},{"lang":"groovy","snippet":"def transformed = http.get(\"/end-point\") {\n    return list.collect { \"world#${it}\" }\n}\n\nassert transformed == [\"world#1\", \"world#2\", \"world#3\"]\nassert transformed[0] instanceof GString","entry":"transform list","bodyOnly":true,"type":"Snippet"}]},{"id":"combine","title":"Combine","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Methods ","type":"SimpleText"},{"code":"find","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"collect","type":"InlinedCode"},{"text":" can be chained","type":"SimpleText"}]},{"lang":"groovy","snippet":"def sum = http.get(\"/end-point\") {\n    return complexList\n            .findAll { k1.get().startsWith(\"v1\") }\n            .collect { k2.get() }\n            .sum()\n}\n\nassert sum == 70","entry":"findAll, collect, and sum","bodyOnly":true,"type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Data Node","pageMeta":{},"dirName":"HTTP","fileName":"data-node","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Special Values","id":"special-values"},{"title":"Extracting Values","id":"extracting-values"},{"title":"Properties On Lists","id":"properties-on-lists"},{"title":"Path based properties access","id":"path-based-properties-access"},{"title":"If-Else Logic","id":"if-else-logic"},{"title":"Iteration","id":"iteration"},{"title":"Find","id":"find"},{"title":"Find All","id":"find-all"},{"title":"Collect","id":"collect"},{"title":"Combine","id":"combine"}]}},{"type":"Page","content":[{"id":"response-lazy-value","title":"Response Lazy Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau has a way to define a lazy value associated with ","type":"SimpleText"},{"code":"HTTP GET","type":"InlinedCode"},{"text":" response. After that it can be used in multiple tests, ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" on it. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Value can be associated with static urls like ","type":"SimpleText"},{"code":"/info","type":"InlinedCode"},{"text":" or dynamic urls like ","type":"SimpleText"},{"code":"/price/:ticker","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"private final def livePrice = http.resource(\"/prices/:ticker\").price\n\n...\n\nlivePrice.of(\"IBM\").waitToBe > 115","title":"wait on http response value","surroundedBy":["live-price-definition","live-price-wait"],"surroundedBySeparator":"\n...\n","anchorId":"response-lazy-value-wait-on-http-response-value","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"private final HttpLazyResponseValue livePrice = http.resource(\"/prices/:ticker\").get(\"price\");\n\n...\n\nlivePrice.of(\"IBM\").waitToBe(greaterThan(115)));","title":"wait on http response value","surroundedBy":["live-price-definition","live-price-wait"],"surroundedBySeparator":"\n...\n","anchorId":"response-lazy-value-wait-on-http-response-value-2","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mto be greater than \u001B[34m115\u001B[0m","  \u001B[33m> \u001B[36m[1/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[31m**100**\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[3/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[32m~~120~~\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[3/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m9ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m115\u001B[33m (\u001B[32m220ms\u001B[33m)\u001B[0m"],"anchorId":"response-lazy-value-console-output","type":"CliOutput"}]},{"id":"full-body","title":"Full Body","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".body","type":"InlinedCode"},{"text":" to define a resource matching the whole response:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"private final def livePriceBody = http.resource(\"/prices/:ticker\").body\n\n...\n\nlivePriceBody.of(\"IBM\").waitTo == [price: greaterThan(115)]","title":"wait on whole body","surroundedBy":["no-path-definition","no-path-wait"],"surroundedBySeparator":"\n...\n","anchorId":"full-body-wait-on-whole-body","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"private final HttpLazyResponseValue livePriceBody = http.resource(\"/prices/:ticker\").body;\n\n...\n\nlivePriceBody.of(\"IBM\").waitTo(equal(map(\"price\", greaterThan(115)))));","title":"wait on whole body","surroundedBy":["no-path-definition","no-path-wait"],"surroundedBySeparator":"\n...\n","anchorId":"full-body-wait-on-whole-body-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[34mto equal \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m115\u001B[33m>\u001B[33m}\u001B[0m","  \u001B[33m> \u001B[36m[1/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[31m**100**\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m5ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[3/3] \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[1m\u001B[32m__120__\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[3/3] \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/prices/IBM\u001B[33m (\u001B[32m5ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[36mvalue \u001B[33mof \u001B[35m/prices/\u001B[0m\u001B[1mIBM\u001B[35m\u001B[0m: \u001B[0m\u001B[34mequals \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m115\u001B[33m>\u001B[33m}\u001B[33m (\u001B[32m215ms\u001B[33m)\u001B[0m"],"anchorId":"full-body-console-output","type":"CliOutput"}]},{"id":"complex-value-path","title":"Complex Value Path","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Value path supports multiple nesting level and arrays indexing:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"private final def complexListFirstId = http.resource(\"/end-point\").complexList[0].id\n\n...\n\ncomplexListFirstId.should == \"id1\"","title":"complex value path","surroundedBy":["complex-path-definition","complex-path-validation"],"surroundedBySeparator":"\n...\n","anchorId":"complex-value-path-complex-value-path","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"private final HttpLazyResponseValue complexListFirstId = http.resource(\"/end-point\").get(\"complexList[0].id\");\n\n...\n\ncomplexListFirstId.should(equal(\"id1\")));","title":"complex value path","surroundedBy":["complex-path-definition","complex-path-validation"],"surroundedBySeparator":"\n...\n","anchorId":"complex-value-path-complex-value-path-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mexpecting \u001B[36mvalue \u001B[33mof \u001B[35m/end-point\u001B[0m: \u001B[0m\u001B[1mcomplexList[0].id \u001B[0m\u001B[0m\u001B[34mto equal \u001B[32m\"id1\"\u001B[0m","  \u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/end-point\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[34m10\u001B[33m,\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[34m100\u001B[33m,\u001B[0m","      \u001B[35m\"amount\"\u001B[33m: \u001B[34m30\u001B[33m,\u001B[0m","      \u001B[35m\"list\"\u001B[33m: \u001B[33m[\u001B[34m1\u001B[33m, \u001B[34m2\u001B[33m, \u001B[34m3\u001B[33m]\u001B[33m,\u001B[0m","      \u001B[35m\"object\"\u001B[33m: \u001B[33m{\u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v1\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[32m\"v2\"\u001B[33m, \u001B[35m\"k3\"\u001B[33m: \u001B[32m\"v3\"\u001B[33m}\u001B[33m,\u001B[0m","      \u001B[35m\"complexList\"\u001B[33m: \u001B[33m[\u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[1m\u001B[32m__\"id1\"__\u001B[33m, \u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v1\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[34m30\u001B[33m}\u001B[33m, \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"id2\"\u001B[33m, \u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v11\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[34m40\u001B[33m}\u001B[33m]\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/end-point\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[36mvalue \u001B[33mof \u001B[35m/end-point\u001B[0m: \u001B[0m\u001B[1mcomplexList[0].id \u001B[0m\u001B[0m\u001B[34mequals \u001B[32m\"id1\"\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m"],"anchorId":"complex-value-path-console-output","type":"CliOutput"}]},{"id":"multiple-url-parameters","title":"Multiple URL Parameters","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use vararg, or pass a map to ","type":"SimpleText"},{"code":"of","type":"InlinedCode"},{"text":" to provide multiple URL parameters to your resource:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"private final def myObj = http.resource(\"/end-point/:param1/:param2\").object\n\n...\n\nmyObj.of([param1: 10, param2: 20]).should == [k1: \"v1_\", k2: \"v2_\", k3: \"v3_\"]","title":"multiple url params","surroundedBy":["multiple-url-params-definition","multiple-url-params-validation"],"surroundedBySeparator":"\n...\n","anchorId":"multiple-url-parameters-multiple-url-params","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"private final HttpLazyResponseValue myObj = http.resource(\"/end-point/:param1/:param2\").get(\"object\");\n\n...\n\nmyObj.of(\"param1\", \"10\", \"param2\", \"20\").should(equal(map(\"k1\", \"v1_\", \"k2\", \"v2_\", \"k3\", \"v3_\"))));","title":"multiple url params","surroundedBy":["multiple-url-params-definition","multiple-url-params-validation"],"surroundedBySeparator":"\n...\n","anchorId":"multiple-url-parameters-multiple-url-params-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[33m> \u001B[34mexpecting \u001B[36mvalue \u001B[33mof \u001B[35m/end-point/\u001B[0m\u001B[1m10\u001B[35m/\u001B[0m\u001B[1m20\u001B[35m\u001B[0m: \u001B[0m\u001B[1mobject \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m{\u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v1_\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[32m\"v2_\"\u001B[33m, \u001B[35m\"k3\"\u001B[33m: \u001B[32m\"v3_\"\u001B[33m}\u001B[0m","  \u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/end-point/10/20\u001B[0m","    \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","    \u001B[0m","    \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[34m10\u001B[33m,\u001B[0m","      \u001B[35m\"price\"\u001B[33m: \u001B[34m120\u001B[33m,\u001B[0m","      \u001B[35m\"amount\"\u001B[33m: \u001B[34m30\u001B[33m,\u001B[0m","      \u001B[35m\"list\"\u001B[33m: \u001B[33m[\u001B[34m1\u001B[33m, \u001B[34m2\u001B[33m, \u001B[34m3\u001B[33m]\u001B[33m,\u001B[0m","      \u001B[35m\"object\"\u001B[33m: \u001B[33m{\u001B[35m\"k1\"\u001B[33m: \u001B[1m\u001B[32m__\"v1_\"__\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[1m\u001B[32m__\"v2_\"__\u001B[33m, \u001B[35m\"k3\"\u001B[33m: \u001B[1m\u001B[32m__\"v3_\"__\u001B[33m}\u001B[33m,\u001B[0m","      \u001B[35m\"complexList\"\u001B[33m: \u001B[33m[\u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"id1\"\u001B[33m, \u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v1\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[34m30\u001B[33m}\u001B[33m, \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"id2\"\u001B[33m, \u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v11\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[34m40\u001B[33m}\u001B[33m]\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:42635/end-point/10/20\u001B[33m (\u001B[32m8ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[36mvalue \u001B[33mof \u001B[35m/end-point/\u001B[0m\u001B[1m10\u001B[35m/\u001B[0m\u001B[1m20\u001B[35m\u001B[0m: \u001B[0m\u001B[1mobject \u001B[0m\u001B[0m\u001B[34mequals \u001B[33m{\u001B[35m\"k1\"\u001B[33m: \u001B[32m\"v1_\"\u001B[33m, \u001B[35m\"k2\"\u001B[33m: \u001B[32m\"v2_\"\u001B[33m, \u001B[35m\"k3\"\u001B[33m: \u001B[32m\"v3_\"\u001B[33m}\u001B[33m (\u001B[32m9ms\u001B[33m)\u001B[0m"],"anchorId":"multiple-url-parameters-console-output","type":"CliOutput"}]},{"id":"full-text-response","title":"Full Text Response","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fullTextResponse","type":"InlinedCode"},{"text":" to extract full original response:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"String responseAsText = http.resource(\"/prices/IBM\").fullTextResponse()\nresponseAsText.should == \"{\\\"price\\\": 100}\"","title":"full text response","surroundedBy":"full-text-response","anchorId":"full-text-response-full-text-response","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String responseAsText = http.resource(\"/prices/IBM\").fullTextResponse();\nactual(responseAsText, \"response\").should(equal(\"{\\\"price\\\": 100}\"));","title":"full text response","surroundedBy":"full-text-response","anchorId":"full-text-response-full-text-response-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"http-header","title":"HTTP Header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.resource","type":"InlinedCode"},{"text":" optional second parameter to pass HTTP header:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def responseValue = http.resource(\"/end-point\", http.header(\"x-prop\", \"x-value\")).path","title":"resource header","surroundedBy":"pass-header","replace":[["full-echo","end-point"],["get\\(\"x-prop\"\\)","path"]],"anchorId":"http-header-resource-header","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"HttpLazyResponseValue responseValue = http.resource(\"/end-point\", http.header(\"path\", \"x-value\")).get(\"path\");","title":"resource header","surroundedBy":"pass-header","replace":[["full-echo","end-point"],["\"x-prop\"","\"path\""]],"anchorId":"http-header-resource-header-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"HTTP Resource","pageMeta":{"identifier":["{validationPath: \"org/testingisdocumenting/webtau/http/HttpResourceJavaTest.java\"}"]},"dirName":"HTTP","fileName":"HTTP-resource","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Response Lazy Value","id":"response-lazy-value"},{"title":"Full Body","id":"full-body"},{"title":"Complex Value Path","id":"complex-value-path"},{"title":"Multiple URL Parameters","id":"multiple-url-parameters"},{"title":"Full Text Response","id":"full-text-response"},{"title":"HTTP Header","id":"http-header"}]}},{"type":"Page","content":[{"id":"standard-header","title":"Standard Header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Standard headers like ","type":"SimpleText"},{"code":"Content-Type","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"Accept","type":"InlinedCode"},{"text":" are set on your behalf.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"When payload content is present then values are based on the content type you are sending.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"When no payload is present, it defaults to ","type":"SimpleText"},{"code":"application/json","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"id":"explicit-header","title":"Explicit Header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To explicitly set header pass ","type":"SimpleText"},{"code":"http.header(values)","type":"InlinedCode"},{"text":" as an additional parameter.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\")) {\n    // assertions go here\n}\n\nhttp.get(\"/end-point\", [queryParam1: \"queryParamValue1\"],\n        http.header(\"Accept\", \"application/octet-stream\")) {\n    // assertions go here\n}\n\nhttp.patch(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        [fileId: \"myFile\"]) {\n    // assertions go here\n}\n\nhttp.post(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        [fileId: \"myFile\"]) {\n    // assertions go here\n}\n\nhttp.put(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        [fileId: \"myFile\", file: sampleFile]) {\n    // assertions go here\n}\n\nhttp.delete(\"/end-point\", http.header(\"Custom-Header\", \"special-value\"))","entry":"explicit header passing example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.get(\"/end-point\", http.query(\"queryParam1\", \"queryParamValue1\"),\n    http.header(\"Accept\", \"application/octet-stream\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.patch(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        http.json(\"fileId\", \"myFile\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.post(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        http.json(\"fileId\", \"myFile\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.put(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        http.json(\"fileId\", \"myFile\", \"file\", sampleFile), (header, body) -> {\n    // assertions go here\n});\n\nhttp.delete(\"/end-point\", http.header(\"Custom-Header\", \"special-value\"));","entry":"explicitHeaderPassingExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Additionally ","type":"SimpleText"},{"code":"http.header","type":"InlinedCode"},{"text":" accepts values as a map.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def varArgHeader = http.header(\n        \"My-Header1\", \"Value1\",\n        \"My-Header2\", \"Value2\")\n\ndef mapBasedHeader = http.header([\n        \"My-Header1\": \"Value1\",\n        \"My-Header2\": \"Value2\"])","entry":"header creation","excludeRegexp":"doc-exclude","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"HttpHeader varArgHeader = http.header(\n        \"My-Header1\", \"Value1\",\n        \"My-Header2\", \"Value2\");\n\nMap<CharSequence, CharSequence> headerValues = new HashMap<>();\nheaderValues.put(\"My-Header1\", \"Value1\");\nheaderValues.put(\"My-Header2\", \"Value2\");\nHttpHeader mapBasedHeader = http.header(headerValues);","entry":"headerCreation","excludeRegexp":"doc-exclude","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".with","type":"InlinedCode"},{"text":" to create a new instance of a header based on the existing one plus additional values","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def newHeaderVarArg = header.with(\n        \"Additional-1\", \"AdditionalValue1\",\n        \"Additional-2\", \"AdditionalValue2\")\n\ndef newHeaderMap = header.with([\n        \"Additional-1\": \"AdditionalValue1\",\n        \"Additional-2\": \"AdditionalValue2\"])","entry":"header with","surroundedBy":"// example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"HttpHeader newHeaderVarArg = header.with(\n        \"Additional-1\", \"AdditionalValue1\",\n        \"Additional-2\", \"AdditionalValue2\");\n\nMap<CharSequence, CharSequence> additionalValues = new HashMap<>();\nadditionalValues.put(\"Additional-1\", \"AdditionalValue1\");\nadditionalValues.put(\"Additional-2\", \"AdditionalValue2\");\nHttpHeader newHeaderMap = header.with(additionalValues);","entry":"headerWith","surroundedBy":"// example","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"implicit-header","title":"Implicit Header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Webtau has a way to provide headers for each call implicitly.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Use it to provide things like authentication, version, etc. header values.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Implicit headers goal is to reduce expose to implementation details and make tests more robust.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest.headers\n\nimport scenarios.rest.headers.auth.Auth\n\nurl = \"http://localhost:8080\"\n\nhttpHeaderProvider = Auth.&authHeader","title":"webtau.cfg.groovy","highlight":[6],"anchorId":"implicit-header-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Auth.&authHeader","type":"InlinedCode"},{"text":" is implemented as follows:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.headers.auth\n\nimport org.testingisdocumenting.webtau.http.HttpHeader\n\nclass Auth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        def token = generateToken()\n        return original.with([Authorization: \"Bearer $token\"])\n    }\n\n    private static String generateToken() {\n        return \"jwt-token\"\n    }\n}","title":"scenarios/rest/headers/auth/Auth.groovy","anchorId":"implicit-header-scenarios-rest-headers-auth-auth-groovy","type":"Snippet"}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"In case of JUnit like runners, WebTau uses ","type":"SimpleText"},{"url":"https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html","isFile":false,"type":"Link","content":[{"text":"Service Loaders","type":"SimpleText"}]},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to locate header providers","type":"SimpleText"}]},{"lang":"WebTauHttpConfiguration","snippet":"com.example.tests.junit5.config.HttpAuthHeaderProvider","autoTitle":true,"title":"src/test/resources/META-INF/services/org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration","anchorId":"implicit-header-src-test-resources-meta-inf-services-org-testingisdocumenting-webtau-http-config-webtauhttpconfiguration","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5.config;\n\nimport org.testingisdocumenting.webtau.http.HttpHeader;\nimport org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class HttpAuthHeaderProvider implements WebTauHttpConfiguration {\n    @Override\n    public HttpHeader fullHeader(String fullUrl, String passedUrl, HttpHeader given) {\n        String token = generateToken();\n        return given.with(\"Authorization\", \"Bearer \" + token);\n    }\n\n    private String generateToken() {\n        return \"jwt-token\";\n    }\n}","autoTitle":true,"title":"src/test/java/com/example/tests/junit5/config/HttpAuthHeaderProvider.java","anchorId":"implicit-header-src-test-java-com-example-tests-junit5-config-httpauthheaderprovider-java","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: Read ","type":"SimpleText"},{"url":"/webtau/persona/HTTP-persona","isFile":false,"type":"Link","content":[{"text":"Persona Auth","type":"SimpleText"}]},{"text":" to learn about ways to streamline authentication","type":"SimpleText"}]}]},{"id":"content-type-shortcut","title":"Content Type Shortcut","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.body","type":"InlinedCode"},{"text":" to combine ","type":"SimpleText"},{"code":"Content-Type","type":"InlinedCode"},{"text":" and payload.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def content = binaryFileContent(\"path\")\nhttp.post(\"/end-point\", http.body(\"application/octet-stream\", content)) {\n    // assertions go here\n}","title":"combined type and payload","entry":"explicit binary mime types combined with request body","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"byte[] content = binaryFileContent(\"path\");\nhttp.post(\"/end-point\", http.body(\"application/octet-stream\", content), (header, body) -> {\n    // assertions go here\n});","title":"combined type and payload","entry":"explicitBinaryMimeTypesCombinedWithRequestBody","bodyOnly":true,"anchorId":"content-type-shortcut-combined-type-and-payload","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"More examples are in ","type":"SimpleText"},{"url":"/webtau/HTTP/body#content-type-shortcuts","isFile":false,"type":"Link","content":[{"text":"HTTP Body Content-Type Shortcuts","type":"SimpleText"}]}]}]},{"id":"response-header","title":"Response Header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To validate values from response header use ","type":"SimpleText"},{"code":"header","type":"InlinedCode"},{"text":" object.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/end-point\") {\n    header.location.should == \"http://www.example.org/url/23\"\n    header[\"Location\"].should == \"http://www.example.org/url/23\"\n\n    header.contentLocation.should == \"/url/23\"\n    header[\"Content-Location\"].should == \"/url/23\"\n\n    header.contentLength.shouldBe > 300\n    header[\"Content-Length\"].shouldBe > 300\n}","title":"header assertion with shortcut","entry":"header assertion with shortcut","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/end-point\", (header, body) -> {\n    header.location.should(equal(\"http://www.example.org/url/23\"));\n    header.get(\"Location\").should(equal(\"http://www.example.org/url/23\"));\n\n    header.contentLocation.should(equal(\"/url/23\"));\n    header.get(\"Content-Location\").should(equal(\"/url/23\"));\n\n    header.contentLength.shouldBe(greaterThan(300));\n    header.get(\"Content-Length\").shouldBe(greaterThan(300));\n});","title":"header assertion with shortcut","entry":"headerAssertionWithShortcut","bodyOnly":true,"anchorId":"response-header-header-assertion-with-shortcut","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"At the moment only ","type":"SimpleText"},{"code":"location","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLocation","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLength","type":"InlinedCode"},{"text":" have camelCase shortcuts.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"All the other header values you need to use ","type":"SimpleText"},{"code":"['Header-Name']","type":"InlinedCode"},{"text":" syntax.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Header","pageMeta":{},"dirName":"HTTP","fileName":"header","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Standard Header","id":"standard-header"},{"title":"Explicit Header","id":"explicit-header"},{"title":"Implicit Header","id":"implicit-header"},{"title":"Content Type Shortcut","id":"content-type-shortcut"},{"title":"Response Header","id":"response-header"}]}},{"type":"Page","content":[{"id":"json-request","title":"JSON Request","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Methods ","type":"SimpleText"},{"code":"http.post","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"http.put","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"http.delete","type":"InlinedCode"},{"text":" automatically converts ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" into","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"application/json","type":"InlinedCode"},{"text":" request","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/chat\", [message: \"hello\", priority: \"HIGH\"]) {\n    status.should == \"SUCCESS\"\n}","title":"implicit application/json","entry":"post body only syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/chat\", http.json(\"message\", \"hello\", \"priority\", \"high\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"implicit application/json","entry":"postBodyOnlySyntaxExample","bodyOnly":true,"anchorId":"json-request-implicit-application-json","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: For Java example uses a ","type":"SimpleText"},{"code":"http.json","type":"InlinedCode"},{"text":" shortcut but Map/List also works.","type":"SimpleText"}]}]}],"type":"Tabs"}]},{"id":"json-request-from-file","title":"JSON Request From File","type":"Section","content":[{"type":"Paragraph","content":[{"url":"/webtau/data/json#read-list","isFile":false,"type":"Link","content":[{"text":"Data JSON","type":"SimpleText"}]},{"text":" module has convenient methods to read JSON from resource/file as list/map/object","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/chat\", data.json.map(\"chat-message.json\")) {\n    status.should == \"SUCCESS\"\n}","title":"implicit application/json","entry":"post body from file syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/chat\", data.json.map(\"chat-message.json\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"implicit application/json","entry":"postBodyFromFileSyntaxExample","bodyOnly":true,"anchorId":"json-request-from-file-implicit-application-json","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"generic-request","title":"Generic Request","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.body","type":"InlinedCode"},{"text":" to create generic body request.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def content = binaryFileContent(\"path\")\nhttp.post(\"/end-point\", http.body(\"application/octet-stream\", content)) {\n    // assertions go here\n}","title":"combined type and payload","entry":"explicit binary mime types combined with request body","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"byte[] content = binaryFileContent(\"path\");\nhttp.post(\"/end-point\", http.body(\"application/octet-stream\", content), (header, body) -> {\n    // assertions go here\n});","title":"combined type and payload","entry":"explicitBinaryMimeTypesCombinedWithRequestBody","bodyOnly":true,"anchorId":"generic-request-combined-type-and-payload","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"content-type-shortcuts","title":"Content-Type Shortcuts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau provides shortcuts for Standard MIME types","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/end-point\", http.application.json(\n        \"key1\", \"value1\",\n        \"key2\", \"value2\")) {\n    // assertions go here\n}","title":"json content as vararg","entry":"shortcut json mime types combined with request body","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.post(\"/end-point\", http.application.json('{\"key1\": \"value1\", \"key2\": \"value2\"}')) {\n    // assertions go here\n}","title":"json content as text","entry":"shortcut json text mime types combined with request body","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"def content = binaryFileContent(\"path\")\nhttp.post(\"/end-point\", http.application.octetStream(content)) {\n    // assertions go here\n}","title":"binary content shortuct","entry":"shortcut binary mime types combined with request body","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"def content = \"text content\"\nhttp.post(\"/end-point\", http.text.plain(content)) {\n    // assertions go here\n}","title":"text content shortcut","entry":"shortcut text mime types combined with request body","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/end-point\", http.application.json(\n        \"key1\", \"value1\",\n        \"key2\", \"value2\"), (header, body) -> {\n    // assertions go here\n});","title":"json content as vararg","entry":"shortcutJsonMimeTypesCombinedWithRequestBody","bodyOnly":true,"anchorId":"content-type-shortcuts-json-content-as-vararg","type":"Snippet"},{"lang":"java","snippet":"http.post(\"/end-point\", http.application.json(\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\"}\"), (header, body) -> {\n    // assertions go here\n});","title":"json content as text","entry":"shortcutJsonTextMimeTypesCombinedWithRequestBody","bodyOnly":true,"anchorId":"content-type-shortcuts-json-content-as-text","type":"Snippet"},{"lang":"java","snippet":"byte[] content = binaryFileContent(\"path\");\nhttp.post(\"/end-point\", http.application.octetStream(content), (header, body) -> {\n    // assertions go here\n});","title":"binary content shortuct","entry":"shortcutBinaryMimeTypesCombinedWithRequestBody","bodyOnly":true,"anchorId":"content-type-shortcuts-binary-content-shortuct","type":"Snippet"},{"lang":"java","snippet":"String content = \"text content\";\nhttp.post(\"/end-point\", http.text.plain(content), (header, body) -> {\n    // assertions go here\n});","title":"text content shortcut","entry":"shortcutTextMimeTypesCombinedWithRequestBody","bodyOnly":true,"anchorId":"content-type-shortcuts-text-content-shortcut","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"http.application.json","type":"InlinedCode"},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is a long form of ","type":"SimpleText"},{"code":"http.json","type":"InlinedCode"},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and is there for completeness purpose.","type":"SimpleText"},{"type":"SoftLineBreak"},{"type":"HardLineBreak"},{"type":"HardLineBreak"},{"text":"There is no behavior difference between passing an instance of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"http.json","type":"InlinedCode"}]}]},{"id":"form-url-encoded-data","title":"Form URL Encoded Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formDataUrlEncoded","type":"InlinedCode"},{"text":" to send ","type":"SimpleText"},{"code":"application/x-www-form-urlencoded","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/submit\", http.formDataUrlEncoded([firstName: \"F Name\", lastName: \"L Name\"])) {\n    // ...\n}","title":"send text form data","entry":"send form url encoded data","bodyOnly":true,"excludeRegexp":"doc-exclude","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/submit\", http.formDataUrlEncoded(\"firstName\", \"F Name\", \"lastName\", \"L Name\"), (header, body) -> {\n    // ...\n});","title":"send text form data","entry":"sendFormUrlEncodedData","bodyOnly":true,"excludeRegexp":"doc-exclude","anchorId":"form-url-encoded-data-send-text-form-data","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"form-file-data","title":"Form File Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Consider example where backend expects a file as ","type":"SimpleText"},{"code":"multipart/form-data","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Field ","type":"SimpleText"},{"code":"file","type":"InlinedCode"},{"text":" defines content.","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"Backend responds with file name and file description it received.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formData","type":"InlinedCode"},{"text":" to build a request body to send ","type":"SimpleText"},{"code":"multipart/form-data","type":"InlinedCode"},{"text":",","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def imagePath = testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: imagePath)) {\n    fileName.should == \"image.png\"\n}","title":"file upload","entry":"file upload example simple","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Path imagePath = testResourcePath(\"src/test/resources/image.png\");\n\nhttp.post(\"/file-upload\", http.formData(map(\"file\", imagePath)), (header, body) -> {\n    body.get(\"fileName\").should(equal(\"image.png\"));\n});","title":"file upload","entry":"fileUploadExampleSimple","bodyOnly":true,"anchorId":"form-file-data-file-upload","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formFile","type":"InlinedCode"},{"text":" to override file name.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def imagePath = testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: http.formFile(\"myFileName.png\", imagePath))) {\n    fileName.should == \"myFileName.png\"\n}","title":"file name override","entry":"file upload example with file name override","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Path imagePath = testResourcePath(\"src/test/resources/image.png\");\n\nhttp.post(\"/file-upload\", http.formData(map(\n        \"file\", http.formFile(\"myFileName.png\", imagePath))), (header, body) -> {\n    body.get(\"fileName\").should(equal(\"myFileName.png\"));\n});","title":"file upload","entry":"fileUploadExampleWithFileNameOverride","bodyOnly":true,"anchorId":"form-file-data-file-upload-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Multiple form fields can be specified:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def imagePath = testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: imagePath, fileDescription: \"new report\")) {\n    fileName.should == \"image.png\"\n    description.should == \"new report\"\n}","title":"multiple form fields","entry":"file upload example multiple fields","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Path imagePath = testResourcePath(\"src/test/resources/image.png\");\n\nhttp.post(\"/file-upload\", http.formData(map(\n        \"file\", imagePath,\n        \"fileDescription\", \"new report\")), (header, body) -> {\n    body.get(\"fileName\").should(equal(\"image.png\"));\n    body.get(\"description\").should(equal(\"new report\"));\n});","title":"file upload","entry":"fileUploadExampleMultipleFields","bodyOnly":true,"anchorId":"form-file-data-file-upload-3","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To pass a file content directly, use","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"byte[] fileContent = [1, 2, 3, 4] as byte[]\n\nhttp.post(\"/file-upload\", http.formData(file: fileContent)) {\n    fileName.should == \"backend-generated-name-as-no-name-provided\"\n}","title":"file upload in-memory content","entry":"file upload example with in-memory content","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"byte[] fileContent = new byte[] {1, 2, 3, 4};\n\nhttp.post(\"/file-upload\", http.formData(map(\"file\", fileContent)), (header, body) -> {\n    body.get(\"fileName\").should(equal(\"backend-generated-name-as-no-name-provided\"));\n});","title":"file upload in-memory content","entry":"fileUploadExampleWithInMemoryContent","bodyOnly":true,"anchorId":"form-file-data-file-upload-in-memory-content","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: no file name is passed and this particular backend generated file name on your behalf.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formFile","type":"InlinedCode"},{"text":" to provide a file name","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"byte[] fileContent = [1, 2, 3, 4] as byte[]\n\nhttp.post(\"/file-upload\", http.formData(\n        file: http.formFile(\"myFileName.dat\", fileContent))) {\n    fileName.should == \"myFileName.dat\"\n}","title":"providing name","entry":"file upload example with in-memory content and file name","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"byte[] fileContent = new byte[] {1, 2, 3, 4};\n\nhttp.post(\"/file-upload\", http.formData(map(\n        \"file\", http.formFile(\"myFileName.dat\", fileContent))), (header, body) -> {\n    body.get(\"fileName\").should(equal(\"myFileName.dat\"));\n});","title":"file upload in-memory content","entry":"fileUploadExampleWithInMemoryContentAndFileName","bodyOnly":true,"anchorId":"form-file-data-file-upload-in-memory-content-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"parsed-response","title":"Parsed Response","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Special ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node","isFile":false,"type":"Link","content":[{"text":"Data Node","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":" represents parsed response. Use it to validate response values.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/query\") {\n    body.price.should == 100\n}","title":"use body for validation","entry":"get only validation with body syntax example","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: For Groovy ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":" is optional and when not specified, will be used implicitly","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/query\") {\n    price.should == 100\n}","title":"optional body","entry":"get only validation syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/query\", ((header, body) -> {\n    body.get(\"price\").should(equal(100));\n}));","title":"use body for validation","entry":"getOnlyValidationSyntaxExample","bodyOnly":true,"anchorId":"parsed-response-use-body-for-validation","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"pdf-response","title":"PDF Response","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.pdf.parse(body)","type":"InlinedCode"},{"text":" to parse and assert PDF content from binary response.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/report\") {\n    data.pdf.read(body).pageText(0).should contain(\"Quarterly earnings:\")\n}","title":"single PDF assertion","entry":"download pdf and assert page text using contains","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/report\", ((header, body) -> {\n    data.pdf.read(body).pageText(0).should(contain(\"Quarterly earnings:\"));\n}));","title":"single PDF assertion","entry":"downloadPdfAndAssertPageTextUsingContains","bodyOnly":true,"anchorId":"pdf-response-single-pdf-assertion","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Assign ","type":"SimpleText"},{"code":"parse","type":"InlinedCode"},{"text":" result to a local variable to make multiple assertions","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/report\") {\n    def pdf = data.pdf.read(body)\n    pdf.pageText(0).should contain(\"Quarterly earnings:\")\n    pdf.pageText(1).should == \"Intentional blank page\\n\"\n}","title":"multiple PDF assertions","entry":"download pdf and assert page text using equal and contains","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/report\", ((header, body) -> {\n    Pdf pdf = data.pdf.read(body);\n    pdf.pageText(0).should(contain(\"Quarterly earnings:\"));\n    pdf.pageText(1).should(equal(\"Intentional blank page\\n\"));\n}));","title":"multiple PDF assertions","entry":"downloadPdfAndAssertPageTextUsingEqualAndContains","bodyOnly":true,"anchorId":"pdf-response-multiple-pdf-assertions","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: Use pdf assertions for sanity checks, i.e. presence of a correct client name or an account number. Implement comprehensive PDF generation logic tests as unit tests.","type":"SimpleText"}]}]},{"id":"raw-response","title":"Raw Response","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"body.getTextContent()","type":"InlinedCode"},{"text":" to access original text content","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def rawContent = http.post(\"/chat\", [message: \"hello world\"]) {\n    return body.getTextContent()\n}","title":"access to raw text content","entry":"access to raw text content","surroundedBy":"doc-snippet","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String rawContent = http.post(\"/chat\", http.json(\"message\", \"hello world\"), (header, body) -> {\n    return body.getTextContent();\n});","title":"access to raw text content","entry":"accessToRawTextContent","surroundedBy":"doc-snippet","bodyOnly":true,"anchorId":"raw-response-access-to-raw-text-content","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Body","pageMeta":{},"dirName":"HTTP","fileName":"body","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"JSON Request","id":"json-request"},{"title":"JSON Request From File","id":"json-request-from-file"},{"title":"Generic Request","id":"generic-request"},{"title":"Content-Type Shortcuts","id":"content-type-shortcuts"},{"title":"Form URL Encoded Data","id":"form-url-encoded-data"},{"title":"Form File Data","id":"form-file-data"},{"title":"Parsed Response","id":"parsed-response"},{"title":"PDF Response","id":"pdf-response"},{"title":"Raw Response","id":"raw-response"}]}},{"type":"Page","content":[{"id":"passing-query-parameters","title":"Passing Query Parameters","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau offers a number of ways of specifying query parameters:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/path?a=1&b=text\") {\n    // assertions go here\n}","title":"embedding query params directly in url","entry":"query params in url example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/path?a=1&b=text\", ((header, body) -> {\n    // assertions go here\n}));","title":"embedding query params directly in url","entry":"queryParamsInUrlExample","bodyOnly":true,"anchorId":"passing-query-parameters-embedding-query-params-directly-in-url","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"Map","type":"InlinedCode"},{"text":" as a second parameter to pass query parameters. Suitable for languages that support in-line creation of ","type":"SimpleText"},{"code":"Map","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/path\", [a: 1, b: \"text\"]) {\n    // assertions go here\n}","title":"pass query parameters as Map","entry":"query params using query as map example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/path\", map(\"a\", 1, \"b\", \"text\"), ((header, body) -> {\n    // assertions go here\n}));","title":"pass query parameters as Map","entry":"queryParamsUsingQueryAsMapExample","bodyOnly":true,"anchorId":"passing-query-parameters-pass-query-parameters-as-map","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Only ","type":"SimpleText"},{"code":"http.get","type":"InlinedCode"},{"text":" has a ","type":"SimpleText"},{"code":"Map","type":"InlinedCode"},{"text":" variant, for ","type":"SimpleText"},{"code":"http.put","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"http.post","type":"InlinedCode"},{"text":", etc you need to pass ","type":"SimpleText"},{"code":"http.query","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/chat\", http.query([a: 1, b: \"text\"]), http.header([\"x-param\": \"value\"]), [message: \"hello\"]) {\n    // assertions go here\n}","title":"pass query parameters using http.query","entry":"query params using query method example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/chat\", http.query(\"a\", 1, \"b\", \"text\"), http.header(\"x-param\", \"value\"), http.json(\"message\", \"hello\"),\n        (header, body) -> {\n            // assertions go here\n        });","title":"pass query parameters as Map","entry":"queryParamsUsingQueryMethodExample","bodyOnly":true,"anchorId":"passing-query-parameters-pass-query-parameters-as-map-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"parameters-encoding","title":"Parameters Encoding","type":"Section","content":[{"type":"Paragraph","content":[{"text":"All query parameters are encoded automatically.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/path\", http.query([message: \"hello world !\"])) {\n    // assertions go here\n}","title":"query parameter with url incompatible characters","surroundedBy":"query-params-encoding","anchorId":"parameters-encoding-query-parameter-with-url-incompatible-characters","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/path\", http.query(\"message\", \"hello world !\"), (header, body) -> {\n    // assertions go here\n});","title":"query parameter with url incompatible characters","entry":"queryParamsEncoding","bodyOnly":true,"anchorId":"parameters-encoding-query-parameter-with-url-incompatible-characters-2","type":"Snippet"}]}],"type":"Tabs"},{"lang":"txt","snippet":"/path?message=hello+world+%21","title":"automatic encoding","anchorId":"parameters-encoding-automatic-encoding","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Query Parameters","pageMeta":{},"dirName":"HTTP","fileName":"query-parameters","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Passing Query Parameters","id":"passing-query-parameters"},{"title":"Parameters Encoding","id":"parameters-encoding"}]}},{"type":"Page","content":[{"id":"overloaded-calls","title":"Overloaded Calls","type":"Section","content":[{"type":"Paragraph","content":[{"code":"http.get|post|put|delete","type":"InlinedCode"},{"text":" methods have overloads to let you supply additional data in addition to URL:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Query parameters","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Request header","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Payload (","type":"SimpleText"},{"type":"Emphasis","content":[{"text":"where applicable","type":"SimpleText"}]},{"text":")","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Validation block","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"Overloads maintain relative order, but you can omit any additional data.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is ","type":"SimpleText"},{"code":"http.get","type":"InlinedCode"},{"text":" quick example:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/query\", http.header([h1: \"v1\"])) {\n    price.should == 100\n}","title":"GET request with passed header","entry":"get no query syntax example","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/query\", http.header(\"h1\", \"v1\"), ((header, body) -> {\n    body.get(\"price\").should(equal(100));\n}));","title":"GET request with passed header","entry":"getNoQuerySyntaxExample","bodyOnly":true,"anchorId":"overloaded-calls-get-request-with-passed-header","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"},{"title":"GET /query response","pathsFile":"doc-artifacts/get-full-syntax-assertion/paths.json","data":{"id":"id1","price":100,"amount":30},"paths":["root.price"],"anchorId":"overloaded-calls-get-query-response","type":"Json"}]},{"id":"implicit-statuscode-check","title":"Implicit statusCode Check","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau automatically assert ","type":"SimpleText"},{"code":"statusCode","type":"InlinedCode"},{"text":" based on method.","type":"SimpleText"}]},{"table":{"columns":[{"title":"Method","align":"left"},{"title":"Implicitly Expected Code","align":"left"}],"data":[[[{"text":"GET","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"POST","type":"SimpleText"}],[{"text":"201","type":"SimpleText"}]],[[{"text":"PUT","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"PUT (no response)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]],[[{"text":"DELETE","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"DELETE (no response)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]]]},"type":"Table"},{"type":"Paragraph","content":[{"text":"To turn it off, provide an explicit ","type":"SimpleText"},{"code":"statusCode","type":"InlinedCode"},{"text":" assertion.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.post(\"/resource\") {\n    statusCode.should == 200 // explicit check that override default 201 (for POST) implicit check\n}","title":"explicit statusCode check","entry":"post statusCode syntax example","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.post(\"/resource\", (header, body) -> {\n    header.statusCode.should(equal(200)); // explicit check that override default 201 (for POST) implicit check\n});","title":"explicit statusCode check","entry":"postStatusCodeSyntaxExample","bodyOnly":true,"commentsType":"inline","anchorId":"implicit-statuscode-check-explicit-statuscode-check","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"get","title":"GET","type":"Section","content":[{"lang":"java","snippet":"http.get(url, [queryParams], [header], [validationBlock])\n","lineNumber":"","title":"full signature","type":"Snippet"},{"parameters":[{"name":"url","type":[{"text":"String","url":""}],"anchorId":"url","description":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"relative","type":"SimpleText"}]},{"text":" or absolute URL to send ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request to","type":"SimpleText"}]}]},{"name":"queryParams","type":[{"text":"HttpQueryParams | Map","url":""}],"anchorId":"queryParams","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"query parameters","type":"SimpleText"}]},{"text":" to attach to URL","type":"SimpleText"}]}]},{"name":"header","type":[{"text":"HttpHeader","url":""}],"anchorId":"header","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/header","isFile":false,"type":"Link","content":[{"text":"request header","type":"SimpleText"}]},{"text":" to send","type":"SimpleText"}]}]},{"name":"validationBlock","type":[{"text":"HttpResponseValidator","url":""}],"anchorId":"validationBlock","description":[{"type":"Paragraph","content":[{"text":"validation block of code to ","type":"SimpleText"},{"url":"/webtau/HTTP/matchers","isFile":false,"type":"Link","content":[{"text":"assert","type":"SimpleText"}]},{"text":" and access response body and header","type":"SimpleText"}]}]}],"type":"ApiParameters"},{"title":"GET /query response","pathsFile":"doc-artifacts/get-full-syntax-assertion/paths.json","data":{"id":"id1","price":100,"amount":30},"paths":["root.price"],"anchorId":"get-get-query-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def id = http.get(\"/query\", [q1: \"v1\"], http.header([h1: \"v1\"])) {\n    price.should == 100 // validation\n    return id // optional return\n}","title":"full signature with query, header and validation block","entry":"get full return syntax example","bodyOnly":true,"commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/query\", [q1: \"v1\"]) {\n    price.should == 100\n}","title":"without header","entry":"get no header syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/query\", http.header([h1: \"v1\"])) {\n    price.should == 100\n}","title":"without query","entry":"get no query syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/query\") {\n    price.should == 100\n}","title":"only validation","entry":"get only validation syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/query\")","title":"no validation","entry":"get only syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String id = http.get(\"/query\", http.query(\"q1\", \"v1\"), http.header(\"h1\", \"v1\"), ((header, body) -> {\n    body.get(\"price\").should(equal(100)); // validation\n    return body.get(\"id\"); // optional return\n}));","title":"full signature with query, header and validation block","entry":"getFullReturnSyntaxExample","bodyOnly":true,"commentsType":"inline","anchorId":"get-full-signature-with-query-header-and-validation-block","type":"Snippet"},{"lang":"java","snippet":"http.get(\"/query\", http.query(\"q1\", \"v1\"), ((header, body) -> {\n    body.get(\"price\").should(equal(100));\n}));","title":"without header","entry":"getNoHeaderSyntaxExample","bodyOnly":true,"anchorId":"get-without-header","type":"Snippet"},{"lang":"java","snippet":"http.get(\"/query\", http.header(\"h1\", \"v1\"), ((header, body) -> {\n    body.get(\"price\").should(equal(100));\n}));","title":"without query","entry":"getNoQuerySyntaxExample","bodyOnly":true,"anchorId":"get-without-query","type":"Snippet"},{"lang":"java","snippet":"http.get(\"/query\", ((header, body) -> {\n    body.get(\"price\").should(equal(100));\n}));","title":"only validation","entry":"getOnlyValidationSyntaxExample","bodyOnly":true,"anchorId":"get-only-validation","type":"Snippet"},{"lang":"java","snippet":"http.get(\"/query\");","title":"no validation","entry":"getOnlySyntaxExample","bodyOnly":true,"anchorId":"get-no-validation","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"post","title":"POST","type":"Section","content":[{"lang":"java","snippet":"http.post(url, [queryParams], [header], [body], [validationBlock])\n","lineNumber":"","title":"full signature","type":"Snippet"},{"parameters":[{"name":"url","type":[{"text":"String","url":""}],"anchorId":"url","description":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"relative","type":"SimpleText"}]},{"text":" or absolute URL to send ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request to","type":"SimpleText"}]}]},{"name":"queryParams","type":[{"text":"HttpQueryParams | Map","url":""}],"anchorId":"queryParams","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"query parameters","type":"SimpleText"}]},{"text":" to attach to URL","type":"SimpleText"}]}]},{"name":"header","type":[{"text":"HttpHeader","url":""}],"anchorId":"header","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/header","isFile":false,"type":"Link","content":[{"text":"request header","type":"SimpleText"}]},{"text":" to send","type":"SimpleText"}]}]},{"name":"body","type":[{"text":"HttpRequestBody | Map | List","url":""}],"anchorId":"body","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/body","isFile":false,"type":"Link","content":[{"text":"request body","type":"SimpleText"}]},{"text":" to send with a request","type":"SimpleText"}]}]},{"name":"validationBlock","type":[{"text":"HttpResponseValidator","url":""}],"anchorId":"validationBlock","description":[{"type":"Paragraph","content":[{"text":"validation block of code to ","type":"SimpleText"},{"url":"/webtau/HTTP/matchers","isFile":false,"type":"Link","content":[{"text":"assert","type":"SimpleText"}]},{"text":" and access response body and header","type":"SimpleText"}]}]}],"type":"ApiParameters"},{"title":"POST /chat response","pathsFile":"doc-artifacts/post-full-syntax-assertion/paths.json","data":{"id":"id1","status":"SUCCESS"},"paths":["root.status"],"anchorId":"post-post-chat-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def id = http.post(\"/chat\", http.query([q1: \"v1\"]), http.header([h1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\" // validation\n    return id // optional return\n}","title":"full signature with query, header, body and validation block","entry":"post full return syntax example","bodyOnly":true,"commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"http.post(\"/chat\", http.query([q1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without header","entry":"post no header syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.post(\"/chat\", http.header([h1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without query","entry":"post no query syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.post(\"/chat\", [message: \"hello\", priority: \"HIGH\"]) {\n    status.should == \"SUCCESS\"\n}","title":"body only","entry":"post body only syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.post(\"/chat\") {\n    status.should == \"SUCCESS\"\n}","title":"validation only","entry":"post validation only syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.post(\"/chat\")","title":"no validation","entry":"post only syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String id = http.post(\"/chat\", http.query(\"q1\", \"v1\"), http.header(\"h1\", \"v1\"), http.json(\"message\", \"hello\"),\n        (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\")); // validation\n    return body.get(\"id\"); // optional return\n});","title":"full signature with query, header, body and validation block","entry":"postFullReturnSyntaxExample","bodyOnly":true,"commentsType":"inline","anchorId":"post-full-signature-with-query-header-body-and-validation-block","type":"Snippet"},{"lang":"java","snippet":"http.post(\"/chat\", http.query(\"q1\", \"v1\"), http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"without header","entry":"postNoHeaderSyntaxExample","bodyOnly":true,"anchorId":"post-without-header","type":"Snippet"},{"lang":"java","snippet":"http.post(\"/chat\", http.header(\"h1\", \"v1\"), http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"without query","entry":"postNoQuerySyntaxExample","bodyOnly":true,"anchorId":"post-without-query","type":"Snippet"},{"lang":"java","snippet":"http.post(\"/chat\", http.json(\"message\", \"hello\", \"priority\", \"high\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"body only","entry":"postBodyOnlySyntaxExample","bodyOnly":true,"anchorId":"post-body-only","type":"Snippet"},{"lang":"java","snippet":"http.post(\"/chat\", (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"validation only","entry":"postValidationOnlySyntaxExample","bodyOnly":true,"anchorId":"post-validation-only","type":"Snippet"},{"lang":"java","snippet":"http.post(\"/chat\");","title":"no validation","entry":"postNoValidationSyntaxExample","bodyOnly":true,"anchorId":"post-no-validation","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"put","title":"PUT","type":"Section","content":[{"lang":"java","snippet":"http.put(url, [queryParams], [header], [body], [validationBlock])\n","lineNumber":"","title":"full signature","type":"Snippet"},{"parameters":[{"name":"url","type":[{"text":"String","url":""}],"anchorId":"url","description":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"relative","type":"SimpleText"}]},{"text":" or absolute URL to send ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request to","type":"SimpleText"}]}]},{"name":"queryParams","type":[{"text":"HttpQueryParams | Map","url":""}],"anchorId":"queryParams","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"query parameters","type":"SimpleText"}]},{"text":" to attach to URL","type":"SimpleText"}]}]},{"name":"header","type":[{"text":"HttpHeader","url":""}],"anchorId":"header","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/header","isFile":false,"type":"Link","content":[{"text":"request header","type":"SimpleText"}]},{"text":" to send","type":"SimpleText"}]}]},{"name":"body","type":[{"text":"HttpRequestBody | Map | List","url":""}],"anchorId":"body","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/body","isFile":false,"type":"Link","content":[{"text":"request body","type":"SimpleText"}]},{"text":" to send with a request","type":"SimpleText"}]}]},{"name":"validationBlock","type":[{"text":"HttpResponseValidator","url":""}],"anchorId":"validationBlock","description":[{"type":"Paragraph","content":[{"text":"validation block of code to ","type":"SimpleText"},{"url":"/webtau/HTTP/matchers","isFile":false,"type":"Link","content":[{"text":"assert","type":"SimpleText"}]},{"text":" and access response body and header","type":"SimpleText"}]}]}],"type":"ApiParameters"},{"title":"PUT /chat/id1 response","pathsFile":"doc-artifacts/post-full-syntax-assertion/paths.json","data":{"id":"id1","status":"SUCCESS"},"paths":["root.status"],"anchorId":"put-put-chat-id1-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def id = http.put(\"/chat/id1\", http.query([q1: \"v1\"]), http.header([h1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\" // validation\n    return id // optional return\n}","title":"full signature with query, header, body and validation block","entry":"put full return syntax example","bodyOnly":true,"commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"http.put(\"/chat/id1\", http.query([q1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without header","entry":"put no header syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.put(\"/chat/id1\", http.header([h1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without query","entry":"put no query syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.put(\"/chat/id1\", [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"body only","entry":"put body only syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.put(\"/chat/id1\") {\n    status.should == \"SUCCESS\"\n}","title":"validation only","entry":"put validation only syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.put(\"/chat/id1\")","title":"no validation","entry":"put only syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String id = http.put(\"/chat/id1\", http.query(\"q1\", \"v1\"), http.header(\"h1\", \"v1\"), http.json(\"message\", \"hello\"),\n        (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\")); // validation\n    return body.get(\"id\"); // optional return\n});","title":"full signature with query, header, body and validation block","entry":"putFullReturnSyntaxExample","bodyOnly":true,"commentsType":"inline","anchorId":"put-full-signature-with-query-header-body-and-validation-block","type":"Snippet"},{"lang":"java","snippet":"http.put(\"/chat/id1\", http.query(\"q1\", \"v1\"), http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"without header","entry":"putNoHeaderSyntaxExample","bodyOnly":true,"anchorId":"put-without-header","type":"Snippet"},{"lang":"java","snippet":"http.put(\"/chat/id1\", http.header(\"h1\", \"v1\"), http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"without query","entry":"putNoQuerySyntaxExample","bodyOnly":true,"anchorId":"put-without-query","type":"Snippet"},{"lang":"java","snippet":"http.put(\"/chat/id1\", http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"body only","entry":"putBodyOnlySyntaxExample","bodyOnly":true,"anchorId":"put-body-only","type":"Snippet"},{"lang":"java","snippet":"http.put(\"/chat/id1\", (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"validation only","entry":"putValidationOnlySyntaxExample","bodyOnly":true,"anchorId":"put-validation-only","type":"Snippet"},{"lang":"java","snippet":"http.put(\"/chat/id1\");","title":"no validation","entry":"putNoValidationSyntaxExample","bodyOnly":true,"anchorId":"put-no-validation","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"delete","title":"DELETE","type":"Section","content":[{"lang":"java","snippet":"http.delete(url, [queryParams], [header], [validationBlock])\n","lineNumber":"","title":"full signature","type":"Snippet"},{"parameters":[{"name":"url","type":[{"text":"String","url":""}],"anchorId":"url","description":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"relative","type":"SimpleText"}]},{"text":" or absolute URL to send ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request to","type":"SimpleText"}]}]},{"name":"queryParams","type":[{"text":"HttpQueryParams | Map","url":""}],"anchorId":"queryParams","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"query parameters","type":"SimpleText"}]},{"text":" to attach to URL","type":"SimpleText"}]}]},{"name":"header","type":[{"text":"HttpHeader","url":""}],"anchorId":"header","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/header","isFile":false,"type":"Link","content":[{"text":"request header","type":"SimpleText"}]},{"text":" to send","type":"SimpleText"}]}]},{"name":"validationBlock","type":[{"text":"HttpResponseValidator","url":""}],"anchorId":"validationBlock","description":[{"type":"Paragraph","content":[{"text":"validation block of code to ","type":"SimpleText"},{"url":"/webtau/HTTP/matchers","isFile":false,"type":"Link","content":[{"text":"assert","type":"SimpleText"}]},{"text":" and access response body and header","type":"SimpleText"}]}]}],"type":"ApiParameters"},{"title":"DELETE /chat/id1 response","pathsFile":"doc-artifacts/post-full-syntax-assertion/paths.json","data":{"id":"id1","status":"SUCCESS"},"paths":["root.status"],"anchorId":"delete-delete-chat-id1-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def id = http.delete(\"/chat/id1\", [q1: \"v1\"], http.header([h1: \"v1\"])) {\n    status.should == \"SUCCESS\" // validation\n    return id // optional return\n}","title":"full signature with query, header and validation block","entry":"delete full return syntax example","bodyOnly":true,"commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"http.delete(\"/chat/id1\", [q1: \"v1\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without header","entry":"delete no header syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.delete(\"/chat/id1\", http.header([h1: \"v1\"])) {\n    status.should == \"SUCCESS\"\n}","title":"without query","entry":"delete no query syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.delete(\"/chat/id1\") {\n    status.should == \"SUCCESS\"\n}","title":"only validation","entry":"delete only validation syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.delete(\"/chat/id1\")","title":"no validation","entry":"delete only syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String id = http.delete(\"/chat/id1\", http.query(\"q1\", \"v1\"), http.header(\"h1\", \"v1\"), ((header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\")); // validation\n    return body.get(\"id\"); // optional return\n}));","title":"full signature with query, header and validation block","entry":"deleteFullReturnSyntaxExample","bodyOnly":true,"commentsType":"inline","anchorId":"delete-full-signature-with-query-header-and-validation-block","type":"Snippet"},{"lang":"java","snippet":"http.delete(\"/chat/id1\", http.query(\"q1\", \"v1\"), ((header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n}));","title":"without header","entry":"deleteNoHeaderSyntaxExample","bodyOnly":true,"anchorId":"delete-without-header","type":"Snippet"},{"lang":"java","snippet":"http.delete(\"/chat/id1\", http.header(\"h1\", \"v1\"), ((header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n}));","title":"without query","entry":"deleteNoQuerySyntaxExample","bodyOnly":true,"anchorId":"delete-without-query","type":"Snippet"},{"lang":"java","snippet":"http.delete(\"/chat/id1\", ((header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n}));","title":"only validation","entry":"deleteOnlyValidationSyntaxExample","bodyOnly":true,"anchorId":"delete-only-validation","type":"Snippet"},{"lang":"java","snippet":"http.delete(\"/chat/id1\");","title":"no validation","entry":"deleteOnlySyntaxExample","bodyOnly":true,"anchorId":"delete-no-validation","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"patch","title":"PATCH","type":"Section","content":[{"lang":"java","snippet":"http.patch(url, [queryParams], [header], [body], [validationBlock])\n","lineNumber":"","title":"full signature","type":"Snippet"},{"parameters":[{"name":"url","type":[{"text":"String","url":""}],"anchorId":"url","description":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"relative","type":"SimpleText"}]},{"text":" or absolute URL to send ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request to","type":"SimpleText"}]}]},{"name":"queryParams","type":[{"text":"HttpQueryParams | Map","url":""}],"anchorId":"queryParams","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"query parameters","type":"SimpleText"}]},{"text":" to attach to URL","type":"SimpleText"}]}]},{"name":"header","type":[{"text":"HttpHeader","url":""}],"anchorId":"header","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/header","isFile":false,"type":"Link","content":[{"text":"request header","type":"SimpleText"}]},{"text":" to send","type":"SimpleText"}]}]},{"name":"body","type":[{"text":"HttpRequestBody | Map | List","url":""}],"anchorId":"body","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/body","isFile":false,"type":"Link","content":[{"text":"request body","type":"SimpleText"}]},{"text":" to send with a request","type":"SimpleText"}]}]},{"name":"validationBlock","type":[{"text":"HttpResponseValidator","url":""}],"anchorId":"validationBlock","description":[{"type":"Paragraph","content":[{"text":"validation block of code to ","type":"SimpleText"},{"url":"/webtau/HTTP/matchers","isFile":false,"type":"Link","content":[{"text":"assert","type":"SimpleText"}]},{"text":" and access response body and header","type":"SimpleText"}]}]}],"type":"ApiParameters"},{"title":"PATCH /chat/id1 response","pathsFile":"doc-artifacts/post-full-syntax-assertion/paths.json","data":{"id":"id1","status":"SUCCESS"},"paths":["root.status"],"anchorId":"patch-patch-chat-id1-response","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def id = http.patch(\"/chat/id1\", http.query([q1: \"v1\"]), http.header([h1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\" // validation\n    return id // optional return\n}","title":"full signature with query, header, body and validation block","entry":"patch full return syntax example","bodyOnly":true,"commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"http.patch(\"/chat/id1\", http.query([q1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without header","entry":"patch no header syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.patch(\"/chat/id1\", http.header([h1: \"v1\"]), [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"without query","entry":"patch no query syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.patch(\"/chat/id1\", [message: \"hello\"]) {\n    status.should == \"SUCCESS\"\n}","title":"body only","entry":"patch body only syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.patch(\"/chat/id1\") {\n    status.should == \"SUCCESS\"\n}","title":"validation only","entry":"patch validation only syntax example","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.patch(\"/chat/id1\")","title":"no validation","entry":"patch only syntax example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String id = http.patch(\"/chat/id1\", http.query(\"q1\", \"v1\"), http.header(\"h1\", \"v1\"), http.json(\"message\", \"hello\"),\n        (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\")); // validation\n    return body.get(\"id\"); // optional return\n});","title":"full signature with query, header, body and validation block","entry":"patchFullReturnSyntaxExample","bodyOnly":true,"commentsType":"inline","anchorId":"patch-full-signature-with-query-header-body-and-validation-block","type":"Snippet"},{"lang":"java","snippet":"http.patch(\"/chat/id1\", http.query(\"q1\", \"v1\"), http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"without header","entry":"patchNoHeaderSyntaxExample","bodyOnly":true,"anchorId":"patch-without-header","type":"Snippet"},{"lang":"java","snippet":"http.patch(\"/chat/id1\", http.header(\"h1\", \"v1\"), http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"without query","entry":"patchNoQuerySyntaxExample","bodyOnly":true,"anchorId":"patch-without-query","type":"Snippet"},{"lang":"java","snippet":"http.patch(\"/chat/id1\", http.json(\"message\", \"hello\"), (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"body only","entry":"patchBodyOnlySyntaxExample","bodyOnly":true,"anchorId":"patch-body-only","type":"Snippet"},{"lang":"java","snippet":"http.patch(\"/chat/id1\", (header, body) -> {\n    body.get(\"status\").should(equal(\"SUCCESS\"));\n});","title":"validation only","entry":"patchValidationOnlySyntaxExample","bodyOnly":true,"anchorId":"patch-validation-only","type":"Snippet"},{"lang":"java","snippet":"http.patch(\"/chat/id1\");","title":"no validation","entry":"patchNoValidationSyntaxExample","bodyOnly":true,"anchorId":"patch-no-validation","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"ping","title":"PING","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"ping","type":"InlinedCode"},{"text":" to check if an end point responds ","type":"SimpleText"},{"code":"200","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" method","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"if (!http.ping(\"/end-point\")) {\n    http.post(\"/cluster-master\", [restart: \"server-one\"])\n}","title":"if else ping example","entry":"ping if else example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"if (!http.ping(\"/end-point\")) {\n    http.post(\"/cluster-master\", http.json(\"restart\", \"server-one\"));\n}","title":"if else ping example","entry":"pingIfElseExample","bodyOnly":true,"anchorId":"ping-if-else-ping-example","type":"Snippet"}]}],"type":"Tabs"},{"lang":"java","snippet":"boolean http.ping(url, [queryParams], [header]) \n","lineNumber":"","title":"full signature","type":"Snippet"},{"parameters":[{"name":"url","type":[{"text":"String","url":""}],"anchorId":"url","description":[{"type":"Paragraph","content":[{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"relative","type":"SimpleText"}]},{"text":" or absolute URL to send ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request to","type":"SimpleText"}]}]},{"name":"queryParams","type":[{"text":"HttpQueryParams | Map","url":""}],"anchorId":"queryParams","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"query parameters","type":"SimpleText"}]},{"text":" to attach to URL","type":"SimpleText"}]}]},{"name":"header","type":[{"text":"HttpHeader","url":""}],"anchorId":"header","description":[{"type":"Paragraph","content":[{"url":"/webtau/HTTP/header","isFile":false,"type":"Link","content":[{"text":"request header","type":"SimpleText"}]},{"text":" to send","type":"SimpleText"}]}]}],"type":"ApiParameters"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.ping(\"/end-point\", [queryParam1: \"queryParamValue1\"], http.header([\"X-flag\": \"test\"]))","title":"full signature with query and header","entry":"ping all params","bodyOnly":true,"commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"http.ping(\"/end-point\", [queryParam1: \"queryParamValue1\"])","title":"without header","entry":"ping no header","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.ping(\"/end-point\", http.header([\"X-flag\": \"test\"]))","title":"without query","entry":"ping no query","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"http.ping(\"/end-point\")","title":"url only","entry":"ping url only","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.ping(\"/end-point\", http.query(\"queryParam1\", \"queryParamValue1\"), http.header(\"X-flag\", \"test\"));","title":"full signature with query and header","entry":"pingAllParams","bodyOnly":true,"commentsType":"inline","anchorId":"ping-full-signature-with-query-and-header","type":"Snippet"},{"lang":"java","snippet":"http.ping(\"/end-point\", http.query(\"queryParam1\", \"queryParamValue1\"));","title":"without header","entry":"pingNoHeader","bodyOnly":true,"anchorId":"ping-without-header","type":"Snippet"},{"lang":"java","snippet":"http.ping(\"/end-point\", http.header(\"X-flag\", \"test\"));","title":"without query","entry":"pingNoQuery","bodyOnly":true,"anchorId":"ping-without-query","type":"Snippet"},{"lang":"java","snippet":"http.ping(\"/end-point\");","title":"url only","entry":"pingUrlOnly","bodyOnly":true,"anchorId":"ping-url-only","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"HTTP Calls","pageMeta":{},"dirName":"HTTP","fileName":"HTTP-calls","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Overloaded Calls","id":"overloaded-calls"},{"title":"Implicit statusCode Check","id":"implicit-statuscode-check"},{"title":"GET","id":"get","style":"api"},{"title":"POST","id":"post","style":"api"},{"title":"PUT","id":"put","style":"api"},{"title":"DELETE","id":"delete","style":"api"},{"title":"PATCH","id":"patch","style":"api"},{"title":"PING","id":"ping","style":"api"}]}},{"type":"Page","content":[{"id":"happy-paths","title":"Happy Paths","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use happy paths test scenarios to document your API. Capture requests performed and response received. Use it as part of your documentation.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Benefits:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"No manual copy-pasting of requests/responses","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Documentation is up-to-date","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Happy paths API is working as intended","type":"SimpleText"}]}]}]}]},{"id":"capturing-test-artifacts","title":"Capturing Test Artifacts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.doc.capture","type":"InlinedCode"},{"text":" to capture REST API artifacts","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"extracting id after POST to use inside GET request\") {\n    def id = http.post(\"/employee\", [firstName: 'FN', lastName: 'LN']) {\n        id.shouldNot == \"\"\n        return id\n    }\n    http.doc.capture('employee-post') // capture previous HTTP call into <docDir>/employee-post\n\n    http.get(\"/employee/$id\") {\n        firstName.should == 'FN'\n        lastName.should == 'LN'\n    }\n    http.doc.capture('employee-get') // capture previous HTTP call into <docDir>/employee-get\n}","title":"happy path","commentsType":"inline","anchorId":"capturing-test-artifacts-happy-path","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class CustomerDocCaptureTest {\n    @Test\n    public void extractIdAfterPostToUseInsideGetRequest() {\n        var customerPayload = http.json(\n                \"firstName\", \"FN\",\n                \"lastName\", \"LN\");\n\n        int id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            body.get(\"id\").shouldNot(equal(\"\"));\n            return body.get(\"id\");\n        }));\n        http.doc.capture(\"employee-post\"); // capture previous HTTP call into <docDir>/employee-post\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.get(\"firstName\").should(equal(\"FN\"));\n            body.get(\"lastName\").should(equal(\"LN\"));\n        }));\n        http.doc.capture(\"employee-get\"); // capture previous HTTP call into <docDir>/employee-get\n    }\n}","title":"happy path","commentsType":"inline","anchorId":"capturing-test-artifacts-happy-path-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"An ","type":"SimpleText"},{"code":"employee-get","type":"InlinedCode"},{"text":" directory will be created containing a number of test artifacts.","type":"SimpleText"}]}]},{"id":"documentation-pipeline","title":"Documentation Pipeline","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Documentation pipeline can look like","type":"SimpleText"}]},{"diagram":{"isInvertedTextColorByStyleId":{},"svg":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: Generated Pages: 1 -->\n<svg width=\"434pt\" height=\"48pt\"\n viewBox=\"0.00 0.00 434.00 48.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"page0,1_graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 44)\">\n<title>Generated</title>\n<polygon fill=\"transparent\" stroke=\"transparent\" points=\"-4,4 -4,-44 430,-44 430,4 -4,4\"/>\n<!-- build -->\n<g id=\"node1\" class=\"node\">\n<title>build</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"0,-0.5 0,-39.5 54,-39.5 54,-0.5 0,-0.5\"/>\n<text text-anchor=\"middle\" x=\"27\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Build</text>\n</g>\n<!-- deploy -->\n<g id=\"node2\" class=\"node\">\n<title>deploy</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"90,-0.5 90,-39.5 153,-39.5 153,-0.5 90,-0.5\"/>\n<text text-anchor=\"middle\" x=\"121.5\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Deploy</text>\n</g>\n<!-- build&#45;&gt;deploy -->\n<g id=\"edge1\" class=\"edge\">\n<title>build&#45;&gt;deploy</title>\n<path fill=\"none\" stroke=\"black\" d=\"M54.26,-20C62.24,-20 71.21,-20 79.91,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"79.92,-23.5 89.92,-20 79.92,-16.5 79.92,-23.5\"/>\n</g>\n<!-- testrun -->\n<g id=\"node3\" class=\"node\">\n<title>testrun</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"189,-0.5 189,-39.5 259,-39.5 259,-0.5 189,-0.5\"/>\n<text text-anchor=\"middle\" x=\"224\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Test Run</text>\n</g>\n<!-- deploy&#45;&gt;testrun -->\n<g id=\"edge2\" class=\"edge\">\n<title>deploy&#45;&gt;testrun</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.2,-20C161.33,-20 170.27,-20 178.96,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"178.98,-23.5 188.98,-20 178.98,-16.5 178.98,-23.5\"/>\n</g>\n<!-- documentation -->\n<g id=\"node4\" class=\"node\">\n<title>documentation</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"295,-0.5 295,-39.5 426,-39.5 426,-0.5 295,-0.5\"/>\n<text text-anchor=\"middle\" x=\"360.5\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Documentation Build</text>\n</g>\n<!-- testrun&#45;&gt;documentation -->\n<g id=\"edge3\" class=\"edge\">\n<title>testrun&#45;&gt;documentation</title>\n<path fill=\"none\" stroke=\"black\" d=\"M259.29,-20C267.2,-20 275.93,-20 284.83,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"284.92,-23.5 294.92,-20 284.92,-16.5 284.92,-23.5\"/>\n</g>\n</g>\n</svg>\n","stylesByNodeId":{"testrun":["h"]},"id":"dag2"},"idsToHighlight":[],"wide":false,"urls":{},"type":"GraphVizDiagram"},{"type":"Paragraph","content":[{"text":"Example of using captured artifacts using ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/znai","isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}]}]},{"lang":"markdown","snippet":"# Create Employee\n\n:include-open-api: openapi/api-spec.json {operationId: \"createEmployee\" }\n\n```columns\nleft: \n:include-json: doc-artifacts/employee-post/request.json { title: \"request payload\" }\n\nright: \n:include-json: doc-artifacts/employee-post/response.json { \n  title: \"response payload\", \n  pathsFile: \"doc-artifacts/employee-post/paths.json\" \n}\n```\n","lineNumber":"","title":"znai example","type":"Snippet"}]},{"id":"create-employee","title":"Create Employee","type":"Section","content":[{"method":"post","url":"/employee","type":"OpenApiMethodAndUrl"},{"type":"Paragraph","content":[{"text":"Create a new employee, by sending details and get back the id of a newly created employee","type":"SimpleText"}]},{"style":"api","id":"create-employee-request","level":2,"title":"Request","type":"SubHeading"},{"parameters":[{"name":"firstName*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_firstName","description":[{"type":"Paragraph","content":[{"text":"first name of an employee","type":"SimpleText"}]}]},{"name":"lastName*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_lastName","description":[{"type":"Paragraph","content":[{"text":"last name of an employee","type":"SimpleText"}]}]}],"title":"application/json","collapsed":false,"noGap":true,"type":"ApiParameters"},{"style":"api","id":"create-employee-responses","level":2,"title":"Responses","type":"SubHeading"},{"style":"api","id":"create-employee-responses-200","level":4,"title":"200","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"customer already exists","type":"SimpleText"}]},{"parameters":[{"name":"id*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_id","description":[{"type":"Paragraph","content":[{"text":"employee unique identifier","type":"SimpleText"}]}]}],"title":"application/json","collapsed":false,"noGap":true,"type":"ApiParameters"},{"style":"api","id":"create-employee-responses-201","level":4,"title":"201","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"customer created successfully","type":"SimpleText"}]},{"parameters":[{"name":"id*","type":[{"text":"string","url":""}],"anchorId":"createEmployeeapplication/json_id","description":[{"type":"Paragraph","content":[{"text":"employee unique identifier","type":"SimpleText"}]}]}],"title":"application/json","collapsed":false,"noGap":true,"type":"ApiParameters"},{"columns":[{"content":[{"title":"request payload","data":{"firstName":"FN","lastName":"LN"},"paths":[],"anchorId":"create-employee-responses-201-request-payload","type":"Json"}]},{"content":[{"title":"response payload","pathsFile":"doc-artifacts/employee-post/paths.json","data":{"id":"id-generated-2"},"paths":["root.id"],"anchorId":"create-employee-responses-201-response-payload","type":"Json"}]}],"config":{},"type":"Columns"}]},{"id":"test-artifacts-location","title":"Test Artifacts Location","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, the directory will be created in the current working directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To change it add ","type":"SimpleText"},{"code":"docPath","type":"InlinedCode"},{"text":" to your ","type":"SimpleText"},{"code":"webtau.cfg.groovy","type":"InlinedCode"},{"text":" file.","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8180\"\n\ndocPath = \"doc-artifacts\"","title":"webtau.cfg.groovy","excludeRegexp":"package","anchorId":"test-artifacts-location-webtau-cfg-groovy","type":"Snippet"}]},{"id":"test-artifacts","title":"Test Artifacts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"A number of artifacts will be created depending on the exact call being captured.","type":"SimpleText"}]},{"id":"test-artifacts-request-and-response-payloads","level":2,"title":"Request and response payloads","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Request bodies are captured in either ","type":"SimpleText"},{"code":"request.json","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"request.pdf","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"request.data","type":"InlinedCode"},{"text":" depending on the type.","type":"SimpleText"}]},{"title":"employee-post/request.json","data":{"firstName":"FN","lastName":"LN"},"paths":[],"anchorId":"test-artifacts-request-and-response-payloads-employee-post-request-json","type":"Json"},{"type":"Paragraph","content":[{"text":"Similarly, response bodies are captured in either ","type":"SimpleText"},{"code":"response.json","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"response.pdf","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"response.data","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"title":"employee-get/response.json","data":{"firstName":"FN","lastName":"LN"},"paths":[],"anchorId":"test-artifacts-request-and-response-payloads-employee-get-response-json","type":"Json"},{"id":"test-artifacts-request-and-response-headers","level":2,"title":"Request and response headers","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Just like payloads, request and response headers are captured in ","type":"SimpleText"},{"code":"request.header.txt","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"response.header.txt","type":"InlinedCode"},{"type":"SoftLineBreak"},{"text":"respectively. These files contain a header per line with the name and values colon separated.  The values","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"are redacted for any potentially sensitive headers.","type":"SimpleText"}]},{"title":"redacted request.header.txt","data":"testheader: testValue\nauthorization: ................","paths":[],"anchorId":"test-artifacts-request-and-response-headers-redacted-request-header-txt","type":"Json"},{"id":"test-artifacts-response-body-assertions","level":2,"title":"Response body assertions","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Any assertions you perform on the response body in your scenarios are captured in a ","type":"SimpleText"},{"code":"paths.json","type":"InlinedCode"},{"text":" file.  This","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"contains an array with the list of paths within the body whose values were asserted.","type":"SimpleText"}]},{"title":"employee-get/paths.json","data":["root.firstName","root.lastName"],"paths":[],"anchorId":"test-artifacts-response-body-assertions-employee-get-paths-json","type":"Json"},{"id":"test-artifacts-request-urls","level":2,"title":"Request URLs","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"The actual request URL is captured in two forms into two different files:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"request.fullurl.txt","type":"InlinedCode"},{"text":" - contains the full URL","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"request.url.txt","type":"InlinedCode"},{"text":" - contains only the part specified in the http call in the scenario","type":"SimpleText"}]}]}]},{"lang":"txt","snippet":"/path?a=1&b=text","title":"request.url.txt","anchorId":"test-artifacts-request-urls-request-url-txt","type":"Snippet"},{"lang":"txt","snippet":"http://localhost:34687/path?a=1&b=text","title":"request.fullurl.txt","anchorId":"test-artifacts-request-urls-request-fullurl-txt","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Documentation Artifacts","pageMeta":{},"dirName":"HTTP","fileName":"documentation-artifacts","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Happy Paths","id":"happy-paths"},{"title":"Capturing Test Artifacts","id":"capturing-test-artifacts"},{"title":"Documentation Pipeline","id":"documentation-pipeline"},{"title":"Create Employee","id":"create-employee"},{"title":"Test Artifacts Location","id":"test-artifacts-location"},{"title":"Test Artifacts","id":"test-artifacts"}]}},{"type":"Page","content":[{"id":"validation","title":"Validation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau supports validation of responses against an ","type":"SimpleText"},{"url":"https://www.openapis.org/","isFile":false,"type":"Link","content":[{"text":"OpenAPI specification","type":"SimpleText"}]},{"text":".  This feature can","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"be enabled by specifying the ","type":"SimpleText"},{"code":"openApiSpecUrl","type":"InlinedCode"},{"text":" configuration option.  This should be the URL to the specification against","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"which to validate.","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8080\"\nopenApiSpecUrl = \"scenarios/rest/springboot/api-spec.json\"","title":"Configuration","excludeRegexp":"docPath","anchorId":"validation-configuration","type":"Snippet"}]},{"id":"current-limitations","title":"Current limitations","type":"Section","content":[{"type":"Paragraph","content":[{"text":"OpenAPI specification support is still in its early stage.  It is fully functional but there are a few limitations to be","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"aware of:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"WebTau currently only supports OpenAPI specification v2","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"specification matching is currently done based on the path and method","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"any HTTP requests which do not match any operation in the specification will not fail tests but will produce a warning","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"on the console","type":"SimpleText"}]}]}]}]},{"id":"validations-report","title":"Validations report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The validation errors are reported in the same manner as assertion errors.  They are available in the output from the","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"command line WebTau runner:","type":"SimpleText"}]},{"lang":"bash","snippet":"> executing HTTP POST http://localhost:8080/customers\n {\n  \"id\": 1,\n  \"firstName\": \"FN\",\n  \"lastName\": \"LN\",\n  \"_links\": {\n    \"self\": {\n      \"href\": \"http://localhost:8080/customers/1\"\n    },\n    \"customer\": {\n      \"href\": \"http://localhost:8080/customers/1\"\n    }\n  }\n }\nX failed executing HTTP POST http://localhost:8080/customers : \nAPI spec validation failure: ERROR - Response status 201 not defined for path ''.: []\n[x] failed\njava.lang.AssertionError: \nAPI spec validation failure: ERROR - Response status 201 not defined for path ''.: []\n\tat scenarios.rest.springboot.customerCrud$_run_closure1.doCall(customerCrud.groovy:8)\n\tat scenarios.rest.springboot.customerCrud$_run_closure1.doCall(customerCrud.groovy)\n\n\n\nTotal: 1,  Passed: 0,  Skipped: 0,  Failed: 1,  Errored: 0\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"They are also available in the HTML report:","type":"SimpleText"}]},{"fit":true,"imageSrc":"/webtau/img/rest-crud-openapi-spec-validation-error.png","timestamp":1692271721154,"shapes":[],"width":2242.0,"height":620.0,"type":"AnnotatedImage"}]},{"id":"validation-configuration","title":"Validation Configuration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To ignore additional properties in responses set ","type":"SimpleText"},{"code":"openApiIgnoreAdditionalProperties","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"true","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"As any other config value it can be done via command line, config file or system properties.","type":"SimpleText"}]}]},{"id":"disable-validation","title":"Disable Validation","type":"Section","content":[{"lang":"groovy","snippet":"import org.testingisdocumenting.webtau.openapi.OpenApi","includeRegexp":"import.*Open","title":"Additional import","anchorId":"disable-validation-additional-import","type":"Snippet"},{"lang":"groovy","snippet":"OpenApi.withoutValidation {\n    http.post(\"/employee\", [firstName: 'First']) {\n        // ...\n    }\n}","title":"Disable request and response validation","type":"Snippet"},{"lang":"groovy","snippet":"OpenApi.responseOnlyValidation() {\n    http.post(\"/employee\", [firstName: 'First']) {\n        // ...\n    }\n}","title":"Disable request validation","type":"Snippet"},{"lang":"groovy","snippet":"OpenApi.requestOnlyValidation() {\n    http.post(\"/employee\", [firstName: 'First', lastName: 'Second']) {\n        // ...\n    }\n}","title":"Disable response validation","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"OpenAPI Spec","pageMeta":{},"dirName":"HTTP","fileName":"openAPI-spec","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Validation","id":"validation"},{"title":"Current limitations","id":"current-limitations"},{"title":"Validations report","id":"validations-report"},{"title":"Validation Configuration","id":"validation-configuration"},{"title":"Disable Validation","id":"disable-validation"}]}},{"type":"Page","content":[{"id":"validation","title":"Validation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau supports validation of objects against ","type":"SimpleText"},{"url":"https://json-schema.org/","isFile":false,"type":"Link","content":[{"text":"JSON Schema","type":"SimpleText"}]},{"text":".  It is possible to validate either","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"the entire body or just a specific field with the ","type":"SimpleText"},{"code":"complyWithSchema","type":"InlinedCode"},{"text":" matcher as shown in the two examples below:","type":"SimpleText"}]},{"lang":"groovy","snippet":"http.get(\"/weather\") {\n    body.should complyWithSchema('valid-schema.json')\n}","title":"Validate entire body against JSON schema","type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"/city/London\") {\n    weather.should complyWithSchema('valid-schema.json')\n}","title":"Validate specific field against JSON schema","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Both examples above validate against the following schema:","type":"SimpleText"}]},{"title":"Correct schema for the example above","data":{"type":"object","required":["temperature"],"properties":{"temperature":{"type":"integer"}}},"paths":[],"anchorId":"validation-correct-schema-for-the-example-above","type":"Json"}]},{"id":"error-messages","title":"Error messages","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Using the first example above, an invalid schema will generate an error similar to:","type":"SimpleText"}]},{"lang":"","snippet":"invalid schema (examples/scenarios/rest/jsonSchema/validateSchema.groovy)\n> executing HTTP GET http://localhost:8080/weather\n  X failed expecting body to comply with schema invalid-schema.json : \n      body expected to comply with schema invalid-schema.json\n      [#: required key [anotherField] not found, #/temperature: expected type: Boolean, found: Integer]\n{\n  \"temperature\": 88\n}\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"The schema used in validation to generate this error is as follows:","type":"SimpleText"}]},{"title":"Incorrect schema for the example above","data":{"type":"object","required":["temperature","anotherField"],"properties":{"temperature":{"type":"boolean"},"anotherField":{"type":"string"}}},"paths":[],"anchorId":"error-messages-incorrect-schema-for-the-example-above","type":"Json"}]},{"id":"configuration","title":"Configuration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The path to the schema file specified in ","type":"SimpleText"},{"code":"complyWithSchema","type":"InlinedCode"},{"text":" can be relative or absolute.  If it's relative, it'll be","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"relative to the ","type":"SimpleText"},{"code":"jsonSchemasDir","type":"InlinedCode"},{"text":" specified in configuration and if not specified then relative to working directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"For example:","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8180\"\njsonSchemasDir = 'schemas'","title":"Configuration","excludeRegexp":"package","anchorId":"configuration-configuration","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"JSON Schema","pageMeta":{},"dirName":"HTTP","fileName":"JSON-schema","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Validation","id":"validation"},{"title":"Error messages","id":"error-messages"},{"title":"Configuration","id":"configuration"}]}},{"type":"Page","content":[{"id":"code-coverage-vs-data-coverage","title":"Code Coverage VS Data Coverage","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Code Coverage helps to reveal what paths of business logic you forgot to exercise.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But it doesn't help as much with HTTP API testing: a single call to an API may exercise the entire code path.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"One of the main artifacts of HTTP API testing is a response. Does response have correct data? Are there data paths that we never asserted on?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau looks across all the executed tests and called HTTP API methods to track what calls have response fields that were never observed.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"At the end report provides ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Data Coverage","type":"SimpleText"}]},{"text":" you can act on:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Remove fields from the response","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add an extra assertion","type":"SimpleText"}]}]}]}]},{"id":"detect-fields-that-were-skipped","title":"Detect Fields That Were Skipped","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Let's consider an end-point that returns a weather temperature in Fahrenheit and Celsius. And Later we decided to add ","type":"SimpleText"},{"code":"time","type":"InlinedCode"},{"text":" field to the response.","type":"SimpleText"}]},{"title":"server response","paths":["root.time"],"data":{"time":"2018-11-27 13:05:00","weather":{"temperatureF":88,"temperatureC":31}},"anchorId":"detect-fields-that-were-skipped-server-response","type":"Json"},{"type":"Paragraph","content":[{"text":"Our tests were asserting on both temperature fields, but we have no assertions on ","type":"SimpleText"},{"code":"time","type":"InlinedCode"},{"text":" field.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest.coverage\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check fahrenheit temperature\") {\n    http.get(\"/city/NewYork\") {\n        weather.temperatureF.shouldBe > 80\n    }\n}\n\nscenario(\"check celsius temperature\") {\n    http.get(\"/city/NewYork\") {\n        weather.temperatureC.shouldBe > 26\n    }\n}","title":"New York weather test","anchorId":"detect-fields-that-were-skipped-new-york-weather-test","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class NewYorkWeatherJavaTest {\n    @Test\n    public void checkFahrenheitTemperature() {\n        http.get(\"/city/NewYork\", (header, body) -> {\n            body.get(\"weather.temperatureF\").shouldBe(greaterThan(80));\n        });\n    }\n\n    @Test\n    public void checkCelsiusTemperature() {\n        http.get(\"/city/NewYork\", (header, body) -> {\n            body.get(\"weather.temperatureC\").shouldBe(greaterThan(26));\n        });\n    }\n}","title":"New York weather test","anchorId":"detect-fields-that-were-skipped-new-york-weather-test-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"When we run our test suite, we will see in the output that both temperatures were asserted (","type":"SimpleText"},{"code":"~~","type":"InlinedCode"},{"text":" in the response).","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But since we didn't touch ","type":"SimpleText"},{"code":"time","type":"InlinedCode"},{"text":" field, at the end of test run, WebTau will print a warning about missing validation","type":"SimpleText"}]},{"highlight":[12,27,35],"excludeRegexp":["Total time","Total: ","report is generated","generated"],"lines":["\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m checkFahrenheitTemperature \u001B[35m(NewYorkWeatherJavaTest)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/city/NewYork\u001B[0m","  \u001B[33m> \u001B[34mreading \u001B[36mHTTP routes definition \u001B[33mfrom \u001B[36mclass path resource \u001B[35mdata/http-routes.txt\u001B[0m","  \u001B[32m. \u001B[34mread \u001B[36mHTTP routes definition \u001B[33mfrom \u001B[36mclass path resource \u001B[35mdata/http-routes.txt\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[34mmapping \u001B[36moperation id\u001B[0m","  \u001B[32m. \u001B[34mmapped \u001B[36moperation id \u001B[33mas \u001B[32m\"GET /city/:cityId\"\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody.weather.temperatureF \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m80\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"time\"\u001B[33m: \u001B[32m\"2018-11-27 13:05:00\"\u001B[33m,\u001B[0m","    \u001B[35m\"weather\"\u001B[33m: \u001B[33m{\u001B[35m\"temperatureF\"\u001B[33m: \u001B[1m\u001B[32m~~88~~\u001B[33m, \u001B[35m\"temperatureC\"\u001B[33m: \u001B[34m31\u001B[33m}\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/city/NewYork\u001B[33m (\u001B[32m17ms\u001B[33m)\u001B[0m","\u001B[32m[.] \u001B[34mcheckFahrenheitTemperature \u001B[35m(NewYorkWeatherJavaTest)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m checkCelsiusTemperature \u001B[35m(NewYorkWeatherJavaTest)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/city/NewYork\u001B[0m","  \u001B[33m> \u001B[34mmapping \u001B[36moperation id\u001B[0m","  \u001B[32m. \u001B[34mmapped \u001B[36moperation id \u001B[33mas \u001B[32m\"GET /city/:cityId\"\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody.weather.temperatureC \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m26\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"time\"\u001B[33m: \u001B[32m\"2018-11-27 13:05:00\"\u001B[33m,\u001B[0m","    \u001B[35m\"weather\"\u001B[33m: \u001B[33m{\u001B[35m\"temperatureF\"\u001B[33m: \u001B[34m88\u001B[33m, \u001B[35m\"temperatureC\"\u001B[33m: \u001B[1m\u001B[32m~~31~~\u001B[33m}\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/city/NewYork\u001B[33m (\u001B[32m10ms\u001B[33m)\u001B[0m","\u001B[32m[.] \u001B[34mcheckCelsiusTemperature \u001B[35m(NewYorkWeatherJavaTest)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m after all tests \u001B[35m(Teardown)\u001B[0m","\u001B[32m[.] \u001B[34mafter all tests \u001B[35m(Teardown)\u001B[0m","\u001B[0m","\u001B[41m\u001B[30mData Coverage\u001B[0m HTTP routes that have non validated response fields\u001B[0m","  \u001B[35mGET /city/:cityId\u001B[0m","    root.time\u001B[0m","\u001B[0m"],"type":"CliOutput"},{"type":"Paragraph","content":[{"text":"WebTau prints only the first three routes with the skipped fields, and only first three fields.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"More details is available in the produced HTML report.","type":"SimpleText"}]},{"annotate":true,"border":true,"imageSrc":"/webtau/doc-artifacts/reports/http-data-coverage-report.png","timestamp":1692272669342,"shapes":[{"type":"badge","text":"1","x":960,"y":17,"align":"Center","invertedColors":false},{"type":"badge","text":"2","x":850,"y":145,"align":"Center","invertedColors":false}],"width":1310.0,"height":798.0,"type":"AnnotatedImage"},{"delimiter":".","startNumber":1,"type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"HTTP Data Coverage leads to more details on Routes that have fields that were skipped","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Expanding a Route will list all the ignored fields","type":"SimpleText"}]}]}]}]},{"id":"routing","title":"Routing","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau needs to know how to group URLs you call. In the example above ","type":"SimpleText"},{"code":"/city/NewYork","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"/city/London","type":"InlinedCode"},{"text":" belongs to the same group.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And if you validate Celsius field when calling NewYork and Fahrenheit when calling London, fields will be considered as covered.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"This is because WebTau identifies both URLs as ","type":"SimpleText"},{"code":"/city/:id","type":"InlinedCode"}]},{"highlight":[2,5],"startLine":"checkFahrenheitTemperature","endLine":"temperatureF","lines":["\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m checkFahrenheitTemperature \u001B[35m(NewYorkWeatherJavaTest)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:45947/city/NewYork\u001B[0m","  \u001B[33m> \u001B[34mreading \u001B[36mHTTP routes definition \u001B[33mfrom \u001B[36mclass path resource \u001B[35mdata/http-routes.txt\u001B[0m","  \u001B[32m. \u001B[34mread \u001B[36mHTTP routes definition \u001B[33mfrom \u001B[36mclass path resource \u001B[35mdata/http-routes.txt\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[34mmapping \u001B[36moperation id\u001B[0m","  \u001B[32m. \u001B[34mmapped \u001B[36moperation id \u001B[33mas \u001B[32m\"GET /city/:cityId\"\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody.weather.temperatureF \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m80\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"type":"CliOutput"},{"type":"Paragraph","content":[{"text":"There are two ways to provide routing information:","type":"SimpleText"}]},{"delimiter":".","startNumber":1,"type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Provide ","type":"SimpleText"},{"url":"/webtau/HTTP/openAPI-spec","isFile":false,"type":"Link","content":[{"text":"Open API","type":"SimpleText"}]},{"text":" spec","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Provide http routes text files","type":"SimpleText"}]}]}]}]},{"id":"text-routes","title":"Text Routes","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you don't have ","type":"SimpleText"},{"url":"/webtau/HTTP/openAPI-spec","isFile":false,"type":"Link","content":[{"text":"Open API","type":"SimpleText"}]},{"text":" spec, you can define a plain text files that enumerates your API routes like this","type":"SimpleText"}]},{"lang":"txt","snippet":"GET /city/:cityId","autoTitle":true,"title":"src/test/resources/data/http-routes.txt","anchorId":"text-routes-src-test-resources-data-http-routes-txt","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: variant with curly brackets for parameters also works ","type":"SimpleText"},{"code":"/city/{id}","type":"InlinedCode"}]},{"type":"Paragraph","content":[{"text":"Specify file path (or resource for java) in your config file to enable it","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"httpRoutesPath = \"data/http-routes.txt\"","title":"webtau.cfg.groovy","includeRegexp":"httpRoutesPath","anchorId":"text-routes-webtau-cfg-groovy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"properties","snippet":"httpRoutesPath = data/http-routes.txt","title":"webtau.properties","includeRegexp":"httpRoutesPath","anchorId":"text-routes-webtau-properties","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"json-output","title":"JSON Output","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"httpDataCoverageOutput","type":"InlinedCode"},{"text":" config option","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to output Data Coverage in a separate JSON file for further processing.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"httpDataCoverageOutput = \"generated/data-coverage.json\"","title":"webtau.cfg.groovy","includeRegexp":"httpDataCoverageOutput","anchorId":"json-output-webtau-cfg-groovy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"properties","snippet":"httpDataCoverageOutput = generated/data-coverage.json","title":"webtau.properties","includeRegexp":"httpDataCoverageOutput","anchorId":"json-output-webtau-properties","type":"Snippet"}]}],"type":"Tabs"},{"highlight":[3],"startLine":"Data Coverage","endLine":"generated","lines":["\u001B[41m\u001B[30mData Coverage\u001B[0m HTTP routes that have non validated response fields\u001B[0m","  \u001B[35mGET /city/:cityId\u001B[0m","    root.time\u001B[0m","\u001B[32m. \u001B[34mgenerated \u001B[36mHTTP Data Coverage\u001B[0m: \u001B[35m/home/runner/work/webtau/webtau/webtau-junit5-examples/generated/data-coverage.json\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"type":"CliOutput"},{"lang":"json","snippet":"[ {\n  \"touchedPathsCount\" : 2,\n  \"untouchedPathsCount\" : 1,\n  \"untouchedPaths\" : [ \"root.time\" ],\n  \"id\" : \"GET /city/:cityId\",\n  \"untouchedPercent\" : 33\n} ]","autoTitle":true,"title":"generated/data-coverage.json","anchorId":"json-output-generated-data-coverage-json","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Data Coverage","pageMeta":{},"dirName":"HTTP","fileName":"data-coverage","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Code Coverage VS Data Coverage","id":"code-coverage-vs-data-coverage"},{"title":"Detect Fields That Were Skipped","id":"detect-fields-that-were-skipped"},{"title":"Routing","id":"routing"},{"title":"Text Routes","id":"text-routes"},{"title":"JSON Output","id":"json-output"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]},{"id":"response-mapping","title":"Response Mapping","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Identifiers inside validation closure are automatically mapped to a response body.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"object response","meta":{"rightSide":false},"data":{"id":"id1","k1":"v1","k2":"v2"},"paths":[],"anchorId":"response-mapping-object-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-simple-object\") {\n    k1.should == \"v1\"\n}","entry":"simple object mapping example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-simple-object\", (header, body) -> {\n    body.get(\"k1\").should(equal(\"v1\"));\n});","entry":"simpleObjectMappingExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"List responses are handled by using index chain","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"list response","data":[{"id":"id1","k1":"v1","k2":"v2"}],"paths":[],"anchorId":"response-mapping-list-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-simple-list\") {\n    body[0].k1.should == \"v1\"\n}","entry":"simple list mapping example","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: Groovy API implicitly assumes ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":", but if you need to deal with array response you need to access values using ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":" explicitly.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-simple-list\", (header, body) -> {\n    body.get(0).get(\"k1\").should(equal(\"v1\"));\n});","entry":"simpleListMappingExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"should-and-should-not","title":"Should and Should Not","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Matchers in WebTau are triggered with ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"},{"text":" keywords.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Additionally ","type":"SimpleText"},{"code":"shouldBe","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNotBe","type":"InlinedCode"},{"text":" alias keywords are available to make certain matcher combinations easier to read.","type":"SimpleText"}]},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/example\") {\n    year.shouldNot == 2000\n    year.should != 2000  // alternative shortcut\n    genres.should contain(\"RPG\")\n    rating.shouldBe > 7\n}","entry":"matchers basic example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/example\", (header, body) -> {\n    body.get(\"year\").shouldNot(equal(2000));\n    body.get(\"genres\").should(contain(\"RPG\"));\n    body.get(\"rating\").shouldBe(greaterThan(7));\n});","entry":"matchersBasicExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"equality","title":"Equality","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau defines its own set of equality rules to simplify testing.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-object-equality-matchers/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":30},{"id":"id2","k1":"v11","k2":40}]},"paths":["root.amount","root.complexList[0].k1","root.complexList[0].k2","root.complexList[1].k1","root.complexList[1].k2","root.id","root.list[0]","root.list[1]","root.list[2]","root.object.k1","root.object.k3"],"anchorId":"equality-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    id.should != 0\n    amount.should == 30\n\n    list.should == [1, 2, 3]\n\n    object.k1.should == ~/v\\d/ // regular expression matching\n\n    object.should == [k1: \"v1\", k3: \"v3\"] // matching only specified fields and can be nested multiple times\n\n    complexList.should == [\"k1\"   | \"k2\"] { // matching only specified fields, but number of entries must be exact\n                           ________________\n                            \"v1\"  | 30\n                            \"v11\" | 40 }\n}","entry":"equality matcher","bodyOnly":true,"commentsType":"inline","excludeRegexp":"doc.capture","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"id\").shouldNot(equal(0));\n    body.get(\"amount\").should(equal(30));\n\n    body.get(\"list\").should(equal(list(1, 2, 3)));\n\n    body.get(\"object\").get(\"k1\").should(equal(\n            Pattern.compile(\"v\\\\d\"))); // regular expression matching\n\n    body.get(\"object\").should(equal(map(\n            \"k1\", \"v1\",\n            \"k3\", \"v3\"))); // matching only specified fields and can be nested multiple times\n\n    body.get(\"complexList\").should(equal(table(\"k1\" , \"k2\", // matching only specified fields, but number of entries must be exact\n                                              ________________,\n                                               \"v1\" ,  30,\n                                               \"v11\",  40)));\n});","entry":"equalityMatcher","bodyOnly":true,"commentsType":"inline","excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point\") {\n    complexList.should == [ \"*id\" | \"k1\"  | \"k2\"] { // order agnostic key based match\n                           ________________________\n                            \"id2\" | \"v11\" | 40\n                            \"id1\" | \"v1\"  | 30 }\n}","entry":"equality matcher table keys","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList\").should(equal(table(\"*id\", \"k1\" , \"k2\", // order agnostic key based match\n                                               ________________,\n                                               \"id2\", \"v11\", 40,\n                                               \"id1\", \"v1\" , 30)));\n});","entry":"equalityMatcherTableKey","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"greater-less-equal","title":"Greater/Less/Equal","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"greaterThan","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"greaterThanOrEqual","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"lessThan","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"lessThanOrEqual","type":"InlinedCode"},{"text":" to assert numeric values.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-numbers-matchers/paths.json","data":{"id":10,"price":100,"amount":30,"list":[1,2,3]},"paths":["root.amount","root.id","root.list[1]","root.price"],"anchorId":"greater-less-equal-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-numbers\") {\n    id.shouldBe > 0\n    price.shouldBe >= 100\n    amount.shouldBe < 150\n    list[1].shouldBe <= 2\n\n    id.shouldNotBe <= 0\n    price.shouldNotBe < 100\n    amount.shouldNotBe >= 150\n    list[1].shouldNotBe > 2\n}","entry":"compare numbers with greater less matchers","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"Groovy","type":"InlinedCode"},{"text":" can use shortcuts ","type":"SimpleText"},{"code":">","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":">=","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"<","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"<=","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-numbers\", (header, body) -> {\n    body.get(\"id\").shouldBe(greaterThan(0));\n    body.get(\"price\").shouldBe(greaterThanOrEqual(100));\n    body.get(\"amount\").shouldBe(lessThan(150));\n    body.get(\"list\").get(1).shouldBe(lessThanOrEqual(2));\n\n    body.get(\"id\").shouldNotBe(lessThanOrEqual(0));\n    body.get(\"price\").shouldNotBe(lessThan(100));\n    body.get(\"amount\").shouldNotBe(greaterThanOrEqual(150));\n    body.get(\"list\").get(1).shouldNotBe(greaterThan(2));\n});","entry":"compareNumbersWithGreaterLessMatchers","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"contain","title":"Contain","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" when you cannot rely on order of values in a response.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-list-contain-matchers/paths.json","data":[{"id":"id1","k1":"v1","k2":"v2"},{"id":"id2","k1":"v11","k2":[10,20,30]}],"paths":["root[0].k1","root[0].k2","root[1].k2[0]","root[1].k2[1]","root[1].k2[2]"],"anchorId":"contain-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-list\") {\n    body.should contain([k1: \"v1\", k2: \"v2\"])\n    body[1].k2.shouldNot contain(22)\n}","entry":"contain matcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-list\", (header, body) -> {\n    body.should(contain(map(\n            \"k1\", \"v1\",\n            \"k2\", \"v2\")));\n    body.get(1).get(\"k2\").shouldNot(contain(22));\n});","entry":"containMatcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"contain-table","title":"Contain Table","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" to assert that a list contains multiple entries of interest","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-object-contain-all-table-matchers/paths.json","data":[{"id":"id1","k1":"v11","k2":"v12"},{"id":"id2","k1":"v21","k2":"v22"},{"id":"id3","k1":"v31","k2":"v32"},{"id":"id4","k1":"v41","k2":"v42"}],"paths":["root[0].id","root[0].k1","root[0].k2","root[2].id","root[2].k1","root[2].k2"],"anchorId":"contain-table-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-large-list\") {\n    body.should contain([\"id\" | \"k1\"  | \"k2\"] {\n                        ________________________\n                         \"id1\" | \"v11\" | \"v12\"\n                         \"id3\" | \"v31\" | \"v32\" })\n}","entry":"contain table matcher","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-large-list\", (header, body) -> {\n    body.should(contain(table(\"id\", \"k1\" , \"k2\",\n                              ______________________,\n                              \"id1\", \"v11\", \"v12\",\n                              \"id3\", \"v31\", \"v32\" )));\n});","entry":"containTableMatcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"contain-all","title":"Contain All","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"containAll","type":"InlinedCode"},{"text":" when you cannot rely on order of values in a response and need to check more than one value.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-list-contain-all-matchers/paths.json","data":[{"id":"id1","k1":"v1","k2":"v2"},{"id":"id2","k1":"v11","k2":[10,20,30]}],"paths":["root[1].k2[0]","root[1].k2[1]","root[1].k2[2]"],"anchorId":"contain-all-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-list\") {\n    body[1].k2.should containAll(10, 30)\n    body[1].k2.shouldNot containAll(40, 60, 80)\n}","entry":"contain all matcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-list\", (header, body) -> {\n    body.get(1).get(\"k2\").should(containAll(10, 30));\n    body.get(1).get(\"k2\").shouldNot(containAll(40, 60, 80));\n});","entry":"containAllMatcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"nested-contain-all","title":"Nested Contain All","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"containingAll","type":"InlinedCode"},{"text":" alias to make it easier to read ","type":"SimpleText"},{"code":"containAll","type":"InlinedCode"},{"text":" matcher nested inside ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/prices-contain-containing-all/paths.json","data":[{"id":"game1","prices":[15,30,40,60]},{"id":"game2","prices":[10,30]}],"paths":[],"anchorId":"nested-contain-all-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/prices\") {\n    body.prices.should contain(containingAll(10, 30))\n}","entry":"contain containing all matcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/prices\", (header, body) -> {\n    body.get(\"prices\").should(contain(containingAll(10, 30)));\n});","entry":"containContainingAllMatcher","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"date-and-time","title":"Date and Time","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can assert ","type":"SimpleText"},{"code":"actual","type":"InlinedCode"},{"text":" string against ","type":"SimpleText"},{"code":"LocalDate","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"ZonedDateTime","type":"InlinedCode"},{"text":". String will be automatically converted","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"using ISO formatter.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-dates-matchers/paths.json","data":{"id":54,"tradeDate":"2018-06-12","transactionTime":"2018-06-12T10:00:00+01:00:00","paymentSchedule":["2018-06-12","2018-07-10","2018-08-09","2018-09-12"]},"paths":["root.paymentSchedule[0]","root.tradeDate","root.transactionTime"],"anchorId":"date-and-time-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-dates\") {\n    def expectedDate = LocalDate.of(2018, 6, 12)\n    def expectedTime = ZonedDateTime.of(expectedDate,\n        LocalTime.of(9, 0, 0),\n        ZoneId.of(\"UTC\"))\n\n    tradeDate.should == expectedDate\n    transactionTime.should == expectedTime\n    transactionTime.shouldBe >= expectedDate\n\n    paymentSchedule.should contain(expectedDate)\n}","entry":"working with dates","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/end-point-dates\", (header, body) -> {\n    LocalDate expectedDate = LocalDate.of(2018, 6, 12);\n    ZonedDateTime expectedTime = ZonedDateTime.of(expectedDate,\n            LocalTime.of(9, 0, 0),\n            ZoneId.of(\"UTC\"));\n\n    body.get(\"tradeDate\").should(equal(expectedDate));\n    body.get(\"transactionTime\").should(equal(expectedTime));\n    body.get(\"transactionTime\").shouldBe(greaterThanOrEqual(expectedDate));\n\n    body.get(\"paymentSchedule\").should(contain(expectedDate));\n});","entry":"workingWithDates","bodyOnly":true,"excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"mixing-matchers","title":"Mixing Matchers","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use matchers in place of expected values to build a more complex expectation.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"title":"response","pathsFile":"doc-artifacts/end-point-mixing-matchers/paths.json","data":{"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"},"complexList":[{"id":"id1","k1":"v1","k2":100},{"id":"id2","k1":"v11","k2":200}]},"paths":["root.complexList[0].k1","root.complexList[0].k2","root.complexList[1].k1","root.complexList[1].k2","root.list[0]","root.list[1]","root.object.k1","root.object.k3"],"anchorId":"mixing-matchers-response","type":"Json"},{"meta":{"rightSide":true},"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/end-point-mixed\") {\n    list.should contain(lessThanOrEqual(2)) // lessThanOrEqual will be matched against each value\n\n    object.should == [k1: \"v1\", k3: ~/v\\d/] // regular expression match against k3\n\n    complexList[0].should == [k1: \"v1\", k2: lessThan(120)] // lessThen match against k2\n\n    complexList[1].should == [\n        k1: notEqual(\"v1\"), // any value but v1\n        k2: greaterThanOrEqual(120)]\n\n    complexList.should == [\"k1\"   | \"k2\"] {\n                          ___________________________\n                           ~/v\\d/ | lessThan(120)\n                            \"v11\" | greaterThan(150) } // using matchers as cell values\n}","entry":"matchers combo","bodyOnly":true,"commentsType":"inline","excludeRegexp":"doc.capture","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Pattern withNumber = Pattern.compile(\"v\\\\d\");\n\nhttp.get(\"/end-point-mixed\", (header, body) -> {\n    body.get(\"list\").should(contain(lessThanOrEqual(2))); // lessThanOrEqual will be matched against each value\n\n    body.get(\"object\").should(equal(map(\n            \"k1\", \"v1\",\n            \"k3\", withNumber))); // regular expression match against k3\n\n    body.get(\"complexList\").get(0).should(equal(map(\n            \"k1\", \"v1\",\n            \"k2\", lessThan(120)))); // lessThen match against k2\n\n    body.get(\"complexList\").get(1).should(equal(map(\n            \"k1\", notEqual(\"v1\"), // any value but v1\n            \"k2\", greaterThanOrEqual(120))));\n\n    TableData expected = table(\"k1\"        , \"k2\", // matching only specified fields, but number of entries must be exact\n                               ________________________________,\n                                withNumber , lessThan(120),\n                                \"v11\"      , greaterThan(150));\n\n    body.get(\"complexList\").should(equal(expected));\n});","entry":"matchersCombo","bodyOnly":true,"commentsType":"inline","excludeRegexp":"doc.capture","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Matchers","pageMeta":{"type":["two-sides"]},"dirName":"HTTP","fileName":"matchers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Response Mapping","id":"response-mapping"},{"title":"Should and Should Not","id":"should-and-should-not"},{"title":"Equality","id":"equality"},{"title":"Greater/Less/Equal","id":"greater-less-equal"},{"title":"Contain","id":"contain"},{"title":"Contain Table","id":"contain-table"},{"title":"Contain All","id":"contain-all"},{"title":"Nested Contain All","id":"nested-contain-all"},{"title":"Date and Time","id":"date-and-time"},{"title":"Mixing Matchers","id":"mixing-matchers"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Here we cover essential configuration for HTTP testing.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To learn basics about configuration, head over to ","type":"SimpleText"},{"url":"/webtau/getting-started/configuration","isFile":false,"type":"Link","content":[{"text":"Configuration Getting Started","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"type":"HardLineBreak"},{"text":"To learn about all configuration capabilities, head over to ","type":"SimpleText"},{"url":"/webtau/configuration/groovy-config-file","isFile":false,"type":"Link","content":[{"text":"Configuration page","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"style":"api","id":"base-url","title":"Base URL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"url","type":"InlinedCode"},{"text":" to set base url for your tests.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"url = \"http://localhost:8080\"","title":"webtau.cfg.groovy","includeRegexp":"localhost","anchorId":"base-url-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: WebTau treats groovy config file as code","type":"SimpleText"}]}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"When you use JUnit like runners, e.g. ","type":"SimpleText"},{"url":"/webtau/getting-started/installation#junit5","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]},{"text":", WebTau expects file named","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"webtau.properties","type":"InlinedCode"},{"text":" to be present in test classpath, e.g. test resources:","type":"SimpleText"}]},{"lang":"properties","snippet":"url = http://localhost:8080","title":"src/test/resources/webtau.properties","includeRegexp":"localhost","anchorId":"base-url-src-test-resources-webtau-properties","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To set base url using environment variables use","type":"SimpleText"}]},{"lang":"","snippet":"export WEBTAU_URL=http://another-server\n","lineNumber":"","type":"Snippet"}]},{"style":"api","id":"proxy","title":"Proxy","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"httpProxy","type":"InlinedCode"},{"text":" to set proxy for the HTTP calls performed through ","type":"SimpleText"},{"code":"http.get","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"http.post","type":"InlinedCode"},{"text":", etc","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"httpProxy = 'my-proxy-server-to-use.com:3873'","title":"webtau.cfg.groovy","anchorId":"proxy-webtau-cfg-groovy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"httpProxy = my_proxy_server_to_use.com:3873\n","lineNumber":"","title":"src/test/resources/webtau.properties","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Configuration","pageMeta":{},"dirName":"HTTP","fileName":"configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Base URL","id":"base-url","style":"api"},{"title":"Proxy","id":"proxy","style":"api"}]}},{"type":"Page","content":[{"id":"single-dsl-import","title":"Single DSL Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use multiple WebTau features you can single static import to have all core features available for autocomplete.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It also requires a single dependency to bring all the WebTau modules.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","title":"core import","includeRegexp":"WebTauGroovyDsl","anchorId":"single-dsl-import-core-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you use ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" then all the dependencies are already present.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauDsl.*;","title":"core import","includeRegexp":"WebTauDsl","anchorId":"single-dsl-import-core-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"http-specific-import","title":"HTTP Specific Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To only import ","type":"SimpleText"},{"code":"http","type":"InlinedCode"},{"text":" module use","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.http.Http.http","title":"http import","include":"http.Http.http","anchorId":"http-specific-import-http-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-http</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"http-specific-import-maven-dependency","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.http.Http.http;","title":"http import","include":"http.Http.http","anchorId":"http-specific-import-http-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-http</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"http-specific-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"HTTP","pageTitle":"Import And Dependencies","pageMeta":{},"dirName":"HTTP","fileName":"import-and-dependencies","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Single DSL Import","id":"single-dsl-import"},{"title":"HTTP Specific Import","id":"http-specific-import"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"graphql","type":"InlinedCode"},{"text":" module lets you exercise and validate a GraphQL API.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It provides a simplified way to access the JSON response of an end-point and provides a DSL to execute queries and mutations.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"lang":"groovy","snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    def query = \"{ weather { temperature } }\";\n    graphql.execute(query) {\n        weather.temperature.shouldBe < 100\n    }\n}","title":"GraphQL API test (Groovy specific runner)","anchorId":"graphql-api-test-groovy-specific-runner","type":"Snippet"},{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.graphql\n\n@RunWith(WebTauRunner.class)\nclass GraphQLWeatherGroovyIT {\n    @Test\n    void checkWeather() {\n        def query = \"{ weather { temperature } }\";\n        graphql.execute(query) {\n            weather.temperature.shouldBe < 100\n        }\n    }\n}","title":"GraphQL API test (JUnit4)","anchorId":"graphql-api-test-junit4","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"data":{"weather":{"temperature":88}}},"paths":[],"anchorId":"server-response","type":"Json"}]}],"config":{},"type":"Columns"}]},{"name":"Java","content":[{"columns":[{"content":[{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class GraphQLWeatherJavaIT {\n    @Test\n    public void checkWeather() {\n        String query = \"{ weather { temperature } }\";\n        graphql.execute(query, (header, body) -> {\n            body.get(\"data.weather.temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","title":"GraphQL API test (JUnit4 Java)","anchorId":"graphql-api-test-junit4-java","type":"Snippet"}]},{"content":[{"title":"Server Response","data":{"data":{"weather":{"temperature":88}}},"paths":[],"anchorId":"server-response-2","type":"Json"}]}],"config":{},"type":"Columns"}]}],"type":"Tabs"}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"GraphQL","pageTitle":"Introduction","pageMeta":{},"dirName":"GraphQL","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Before diving further into writing tests for your GraphQL server, please read through the HTTP testing documentation","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"starting with the ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node","isFile":false,"type":"Link","content":[{"text":"Data node page","type":"SimpleText"}]},{"text":" as much of the same core principles apply to GraphQL also.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The main GraphQL specific features are covered in the subsequent pages:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/GraphQL/queries-and-mutations","isFile":false,"type":"Link","content":[{"text":"Queries and Mutations","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/GraphQL/customized-graphql-urls","isFile":false,"type":"Link","content":[{"text":"Customized GraphQL URLs","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/GraphQL/report","isFile":false,"type":"Link","content":[{"text":"Report","type":"SimpleText"}]}]}]}]},{"id":"executing-queries-and-mutations","title":"Executing Queries and Mutations","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau follows GraphQL's ","type":"SimpleText"},{"url":"https://graphql.org/learn/serving-over-http/","isFile":false,"type":"Link","content":[{"text":"Serving over HTTP best practices","type":"SimpleText"}]},{"text":" when invoking","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"GraphQL servers over HTTP.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"It therefore assumes the server responds to requests to ","type":"SimpleText"},{"code":"/graphql","type":"InlinedCode"},{"text":" so you do not need to specify that in the URL in your configuration.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Requests allow providing:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"a query/mutation string","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"variables","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"an operation name","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"WebTau will default to issuing ","type":"SimpleText"},{"code":"POST","type":"InlinedCode"},{"text":" requests according to the ","type":"SimpleText"},{"url":"https://graphql.org/learn/serving-over-http/#post-request","isFile":false,"type":"Link","content":[{"text":"best practices","type":"SimpleText"}]},{"type":"SoftLineBreak"},{"text":"and will expect a 200 status code and a response with a ","type":"SimpleText"},{"code":"data","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"errors","type":"InlinedCode"},{"text":" field.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The following example demonstrates most of these query features:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.graphql\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef listAllQuery = '''\n{\n    allTasks(uncompletedOnly: false) {\n        id\n        description\n    }\n}\n'''\n\ndef taskByIdQuery = '''\nquery taskById($id: ID!) {\n    taskById(id: $id) {\n        id\n        description\n        completed\n    }\n}\n'''\n\ndef completeMutation = '''\nmutation complete($id: ID!) {\n    complete(id: $id)\n}\n'''\n\nscenario(\"list all tasks\") {\n    graphql.execute(listAllQuery) { // Execute a simple query with no variables\n        errors.should == null // Validate there were no errors\n        body.data.allTasks.id.should == [\"a\", \"b\", \"c\"] // Access response data with the full path\n        allTasks.id.should == [\"a\", \"b\", \"c\"] // Access response data via a shortcut allowing omitting of `body.data`\n        id.should == [\"a\", \"b\", \"c\"] // For single query requests, access response data via a shortcut allowing omitting of `body.data` and the query name\n    }\n}\n\nscenario(\"complete a task\") {\n    graphql.execute(completeMutation, [id: \"a\"]) { // Execute a mutation with a variables map\n        errors.should == null\n        complete.should == true\n    }\n\n    graphql.execute(taskByIdQuery, [id: \"a\"]) {\n        errors.should == null\n        taskById.id.should == \"a\"\n        taskById.completed.should == true\n    }\n}\n\nscenario(\"cannot complete a completed task\") {\n    graphql.execute(completeMutation, [id: \"b\"]) { // Execute a mutation with a variables map\n        errors.should == null\n        complete.should == true\n    }\n    graphql.execute(completeMutation, [id: \"b\"]) { // force an error\n        errors[0].message.shouldNot == null\n        complete.should == null\n    }\n}","title":"GraphQL example with a query, a mutation and variables","commentsType":"inline","anchorId":"executing-queries-and-mutations-graphql-example-with-a-query-a-mutation-and-variables","type":"Snippet"}]},{"id":"response-assertions","title":"Response Assertions","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Response assertions follow a similar pattern to REST APIs.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For Groovy specifically, there are shortcuts for accessing data in the response directly as demonstrated in the example above.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You may access errors directly via ","type":"SimpleText"},{"code":"errors","type":"InlinedCode"},{"text":" or fields in the response directly with the field names, omitting the ","type":"SimpleText"},{"code":"data","type":"InlinedCode"},{"text":" field.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"GraphQL","pageTitle":"Queries And Mutations","pageMeta":{},"dirName":"GraphQL","fileName":"queries-and-mutations","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Executing Queries and Mutations","id":"executing-queries-and-mutations"},{"title":"Response Assertions","id":"response-assertions"}]}},{"type":"Page","content":[{"id":"customizing-the-graphql-endpoint","title":"Customizing the GraphQL Endpoint","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau assumes that all requests are made to a ","type":"SimpleText"},{"code":"/graphql","type":"InlinedCode"},{"text":" endpoint. The config value ","type":"SimpleText"},{"code":"graphQLEndpoint","type":"InlinedCode"},{"text":" can be set to use a non-standard endpoint, e.g. ","type":"SimpleText"},{"code":"graphQLEndpoint=/api/graphql","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau also decorates the query with a (typically ignored) query parameter that contains the request's ","type":"SimpleText"},{"code":"operationName","type":"InlinedCode"},{"text":", e.g. ","type":"SimpleText"},{"code":"/graphql?operation=myOperation","type":"InlinedCode"},{"text":". This makes execution logs as well as WebTau's step reports easier to read and debug, especially since the operation's name is part of the request's payload and is usually not logged by request loggers.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"If you want to turn this feature off, set the config value for ","type":"SimpleText"},{"code":"graphQLShowOperationAsQueryParam","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"false","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In order to customize the graphQL URL in different ways, you need to implement a ","type":"SimpleText"},{"code":"GraphQLHttpConfiguration","type":"InlinedCode"},{"text":" and ensure it gets loaded at runtime via the Java ServiceLoader.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is an example in groovy:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package org.testingisdocumenting.webtau.graphql\n\nimport org.testingisdocumenting.webtau.graphql.config.GraphQLHttpConfiguration\nimport org.testingisdocumenting.webtau.graphql.model.GraphQLRequest\n\nclass CustomGraphQLHttpConfiguration implements GraphQLHttpConfiguration {\n    // Note: our test server requires the graphql endpoint to start with \"graphql\"\n    public static final CUSTOM_GRAPHQL_ENDPOINT = 'graphql-custom'\n\n    @Override\n    String requestUrl(String url, GraphQLRequest graphQLRequest) {\n        if (null != graphQLRequest.operationName && !graphQLRequest.operationName.isEmpty()) {\n            return \"${CUSTOM_GRAPHQL_ENDPOINT}?operation=${graphQLRequest.operationName}\"\n        }\n        return url\n    }\n}","title":"Customized GraphQLHttpConfiguration adding the operation to the URL","anchorId":"customizing-the-graphql-endpoint-customized-graphqlhttpconfiguration-adding-the-operation-to-the-url","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"GraphQL","pageTitle":"Customized Graphql Urls","pageMeta":{},"dirName":"GraphQL","fileName":"customized-graphql-urls","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Customizing the GraphQL Endpoint","id":"customizing-the-graphql-endpoint"}]}},{"type":"Page","content":[{"id":"additional-reports","title":"Additional Reports","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To generate a ","type":"SimpleText"},{"url":"/webtau/report/custom-reports","isFile":false,"type":"Link","content":[{"text":"custom report","type":"SimpleText"}]},{"text":" or upload report data to your server, specify a ","type":"SimpleText"},{"code":"reportGenerator","type":"InlinedCode"},{"text":" config property.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.graphql\n\nurl = \"http://localhost:8180\"\n\ngraphQLIgnoreIntrospectionFailures = false\n\nreportGenerator = Report.&generateReport","title":"webtau.cfg.groovy","anchorId":"additional-reports-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Report.&generateReport","type":"InlinedCode"},{"text":" is implemented as follows:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.graphql\n\n\nimport org.testingisdocumenting.webtau.console.ConsoleOutputs\nimport org.testingisdocumenting.webtau.console.ansi.Color\nimport org.testingisdocumenting.webtau.reporter.WebTauReport\nimport org.testingisdocumenting.webtau.utils.JsonUtils\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.cfg\n\nclass Report {\n    static void generateReport(WebTauReport report) {\n        def additionalData = [:]\n        report.customDataStream.each { additionalData.putAll(it.toMap()) }\n\n        def reportData = [:]\n        reportData.graphQLSkippedQueries = additionalData.graphQLSkippedQueries // All queries present in the GraphQL schema but not tested\n        reportData.graphQLCoveredQueries = additionalData.graphQLCoveredQueries // All queries present in the GraphQL schema and tested\n        reportData.graphQLCoverageSummary = additionalData.graphQLCoverageSummary // Summary of test coverage compared to the GraphQL schema\n        reportData.graphQLQueryTimeStatistics = additionalData.graphQLQueryTimeStatistics // Summary of timing by query\n        reportData.graphQLCoveredSuccessBranches = additionalData.graphQLCoveredSuccessBranches // All queries present in the GraphQL schema that were hit with a success result\n        reportData.graphQLSkippedSuccessBranches = additionalData.graphQLSkippedSuccessBranches // All queries present in the GraphQL schema but not hit with a success result\n        reportData.graphQLCoveredErrorBranches = additionalData.graphQLCoveredErrorBranches // All queries present in the GraphQL schema that were hit with an error result\n        reportData.graphQLSkippedErrorBranches = additionalData.graphQLSkippedErrorBranches // All queries present in the GraphQL schema but not hit with an error result\n\n        def reportPath = cfg.workingDir.resolve('webtau.graphql-report.json')\n        ConsoleOutputs.out('generating report: ', Color.PURPLE, reportPath)\n\n        reportPath.toFile().text = JsonUtils.serializePrettyPrint(reportData)\n    }\n}","title":"scenarios/graphql/Report.groovy","commentsType":"inline","anchorId":"additional-reports-scenarios-graphql-report-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"The output looks as follows:","type":"SimpleText"}]},{"lang":"json","snippet":"{\n  \"graphQLSkippedQueries\" : [ {\n    \"name\" : \"taskById\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"allTasks\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"uncomplete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"complete\",\n    \"type\" : \"mutation\"\n  } ],\n  \"graphQLCoveredQueries\" : [ {\n    \"name\" : \"weather\",\n    \"type\" : \"query\"\n  } ],\n  \"graphQLCoverageSummary\" : {\n    \"coverage\" : 0.2,\n    \"branchCoverage\" : 0.1,\n    \"types\" : {\n      \"mutation\" : {\n        \"coverage\" : 0.0,\n        \"declaredQueries\" : 2,\n        \"coveredQueries\" : 0.0\n      },\n      \"query\" : {\n        \"coverage\" : 0.3333333333333333,\n        \"declaredQueries\" : 3,\n        \"coveredQueries\" : 1.0\n      }\n    },\n    \"successBranchCoverage\" : 0.2,\n    \"errorBranchCoverage\" : 0.0,\n    \"totalDeclaredQueries\" : 5.0,\n    \"totalCoveredQueries\" : 1.0\n  },\n  \"graphQLQueryTimeStatistics\" : [ {\n    \"name\" : \"weather\",\n    \"type\" : \"query\",\n    \"statistics\" : {\n      \"mean\" : 25.0,\n      \"min\" : 25,\n      \"max\" : 25,\n      \"count\" : 1,\n      \"p95\" : 25.0,\n      \"p99\" : 25.0\n    }\n  } ],\n  \"graphQLCoveredSuccessBranches\" : [ {\n    \"name\" : \"weather\",\n    \"type\" : \"query\"\n  } ],\n  \"graphQLSkippedSuccessBranches\" : [ {\n    \"name\" : \"taskById\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"allTasks\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"uncomplete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"complete\",\n    \"type\" : \"mutation\"\n  } ],\n  \"graphQLCoveredErrorBranches\" : [ ],\n  \"graphQLSkippedErrorBranches\" : [ {\n    \"name\" : \"taskById\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"allTasks\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"weather\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"uncomplete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"complete\",\n    \"type\" : \"mutation\"\n  } ]\n}","title":"webtau.graphql-report.json","anchorId":"additional-reports-webtau-graphql-report-json","type":"Snippet"},{"id":"additional-reports-coverage-and-timing-statistics","level":2,"title":"Coverage and Timing Statistics","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"WebTau will implicitly invoke your GraphQL server's introspection queries in order to fetch a subset of the schema.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It uses this schema in conjunction with the requests in tests to compute:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"query coverage - which queries were invoked by tests and which were not as well as an overall summary of coverage","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"timing information - http call timing statistics by query","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"GraphQL","pageTitle":"Report","pageMeta":{},"dirName":"GraphQL","fileName":"report","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Additional Reports","id":"additional-reports"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"websocket","type":"InlinedCode"},{"text":" module lets your send, receive and validate websocket messages in a convenient synchronous manner.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def wsSession = websocket.connect(\"/prices\")\nwsSession.send([symbol: \"IBM\"])\n\nwsSession.received.waitTo == [\n        price: greaterThan(100),\n        symbol: \"IBM\"]\nwsSession.close()","title":"connect, send and wait example","surroundedBy":"connect-send-wait","anchorId":"connect-send-and-wait-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var wsSession = websocket.connect(\"/prices\");\nwsSession.send(map(\"symbol\", \"IBM\"));\n\nwsSession.received.waitTo(equal(map(\n        \"price\", greaterThan(100),\n        \"symbol\", \"IBM\")));\nwsSession.close();","title":"connect, send and wait example","surroundedBy":"connect-send-wait","anchorId":"connect-send-and-wait-example-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"waitUntilReceiveMessageNoPath","lines":["\u001B[33m> \u001B[34mconnecting \u001B[33mto \u001B[36mwebsocket \u001B[35m/prices\u001B[0m","\u001B[32m. \u001B[34mconnected \u001B[33mto \u001B[36mwebsocket \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m13ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34msending \u001B[36mtext \u001B[34mmessage \u001B[33mto \u001B[35mws://localhost:38809/prices\u001B[0m","  \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[0m","\u001B[32m. \u001B[34msent \u001B[36mtext \u001B[34mmessage \u001B[33mto \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices \u001B[0m\u001B[34mto equal \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m100\u001B[33m>\u001B[33m, \u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[0m","  \u001B[33m> \u001B[36m[1/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m77\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[25/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m101\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[25/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices \u001B[0m\u001B[34mequals \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m100\u001B[33m>\u001B[33m, \u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[33m (\u001B[32m224ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mclosing \u001B[36mwebsocket \u001B[35mws://localhost:38809/prices\u001B[0m","\u001B[32m. \u001B[34mclosed \u001B[36mwebsocket \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"console-output","type":"CliOutput"}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Web Socket","pageTitle":"Introduction","pageMeta":{},"dirName":"web-socket","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"asynchronous-to-synchronous","title":"Asynchronous To Synchronous","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebSocket messages are asynchronous in nature. To make writing tests easier, WebTau receives and stores all messages behind the scene. Messages are exposed via ","type":"SimpleText"},{"code":"session.received","type":"InlinedCode"},{"text":" special value. You can validate, wait on or poll from in a synchronous manner.","type":"SimpleText"}]}]},{"id":"wait-for-a-specific-message","title":"Wait For A Specific Message","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"wsSession.received","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" to make sure a specific message was received. WebTau will comb through and discard all the received messages that do not match a criteria.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Messages are processed in receive order.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def wsSession = websocket.connect(\"/prices\")\n\nwsSession.received.waitTo == [\n        price: greaterThan(100),\n        symbol: \"IBM\"]","title":"connect, send and wait example","surroundedBy":"connect-send-wait","exclude":[".send",".close"],"anchorId":"wait-for-a-specific-message-connect-send-and-wait-example","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/web-socket/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"var wsSession = websocket.connect(\"/prices\");\n\nwsSession.received.waitTo(equal(map(\n        \"price\", greaterThan(100),\n        \"symbol\", \"IBM\")));","title":"connect, send and wait example","surroundedBy":"connect-send-wait","exclude":[".send",".close"],"anchorId":"wait-for-a-specific-message-connect-send-and-wait-example-2","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/web-socket/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"wait until receive message","startLine":"waiting","endLine":"received","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:46071/prices \u001B[0m\u001B[34mto equal \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m100\u001B[33m>\u001B[33m, \u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[0m","  \u001B[33m> \u001B[36m[1/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m77\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m53ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[25/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m101\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[25/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:46071/prices \u001B[0m\u001B[34mequals \u001B[33m{\u001B[35m\"price\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m100\u001B[33m>\u001B[33m, \u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m}\u001B[33m (\u001B[32m1s 97ms\u001B[33m)\u001B[0m"],"anchorId":"wait-for-a-specific-message-console-output","type":"CliOutput"}]},{"id":"wait-for-a-specific-message-using-value-path","title":"Wait For A Specific Message Using Value Path","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"get(path)","type":"InlinedCode"},{"text":" to narrow to a specific response value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"wsSession.received.price.waitToBe > 100","title":"wait on specific response value","surroundedBy":"received-get","anchorId":"wait-for-a-specific-message-using-value-path-wait-on-specific-response-value","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: Groovy dynamic nature allows you bypass explicit ","type":"SimpleText"},{"code":"get","type":"InlinedCode"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"wsSession.received.get(\"price\").waitToBe(greaterThan(100));","title":"wait on specific response value","surroundedBy":"received-get","anchorId":"wait-for-a-specific-message-using-value-path-wait-on-specific-response-value-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"wait until receive message using path","startLine":"waiting","endLine":"received","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[0m\u001B[1mreceived.price \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:46071/prices \u001B[0m\u001B[34mto be greater than \u001B[34m100\u001B[0m","  \u001B[33m> \u001B[36m[1/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m77\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[1/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[36m[25/25] \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m101\u001B[33m}\u001B[0m","  \u001B[32m. \u001B[36m[25/25] \u001B[34mpolled new message\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[0m\u001B[1mreceived.price \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:46071/prices \u001B[0m\u001B[34mgreater than \u001B[34m100\u001B[33m (\u001B[32m1s 9ms\u001B[33m)\u001B[0m"],"anchorId":"wait-for-a-specific-message-using-value-path-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"[idx]","type":"InlinedCode"},{"text":" To deal with a list response:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"wsSession.received[2].price.waitToBe > 30","title":"wait on specific response value within list","surroundedBy":"received-list","anchorId":"wait-for-a-specific-message-using-value-path-wait-on-specific-response-value-within-list","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"wsSession.received.get(\"[2].price\").waitToBe(greaterThan(30));","title":"wait on specific response value within list","surroundedBy":"received-list","anchorId":"wait-for-a-specific-message-using-value-path-wait-on-specific-response-value-within-list-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"wait until receive message using path list","startLine":"waiting","endLine":"received","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[0m\u001B[1mreceived[2].price \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:46071/prices \u001B[0m\u001B[34mto be greater than \u001B[34m30\u001B[0m","  \u001B[33m> \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","    \u001B[33m[\u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m20\u001B[33m}\u001B[33m, \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m30\u001B[33m}\u001B[33m, \u001B[33m{\u001B[35m\"symbol\"\u001B[33m: \u001B[32m\"IBM\"\u001B[33m, \u001B[35m\"price\"\u001B[33m: \u001B[34m33\u001B[33m}\u001B[33m]\u001B[0m","  \u001B[32m. \u001B[34mpolled new message\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[0m\u001B[1mreceived[2].price \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:46071/prices \u001B[0m\u001B[34mgreater than \u001B[34m30\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m"],"anchorId":"wait-for-a-specific-message-using-value-path-console-output-2","type":"CliOutput"}]},{"id":"poll-message-as-text","title":"Poll Message As Text","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau receives and stores asynchronous messages behind the scene. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Use ","type":"SimpleText"},{"code":"pollAsText","type":"InlinedCode"},{"text":" to access messages in a synchronous manner. If message is not yet received, ","type":"SimpleText"},{"code":"pollAsText","type":"InlinedCode"},{"text":" will wait for a configured (","type":"SimpleText"},{"code":"webSocketPollTimeout","type":"InlinedCode"},{"text":") milliseconds (default 5 seconds).","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In example above, we wait until the price becomes greater than 100. All the messages including the matched one are discarded after ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"code":"received.pollAsText","type":"InlinedCode"},{"text":" returns next received message or wait for the message to come:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def nextMessage = wsSession.received.pollAsText()\nnextMessage.should == \"{\\\"symbol\\\":\\\"IBM\\\",\\\"price\\\":102}\"\n\ndef nextNextMessage = wsSession.received.pollAsText(100) // explicit timeout in milliseconds for new message to arrive\nnextNextMessage.should == \"{\\\"symbol\\\":\\\"IBM\\\",\\\"price\\\":103}\"","title":"poll message","surroundedBy":"poll-after-wait","commentsType":"inline","anchorId":"poll-message-as-text-poll-message","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String nextMessage = wsSession.received.pollAsText();\nactual(nextMessage).should(equal(\"{\\\"symbol\\\":\\\"IBM\\\",\\\"price\\\":102}\"));\n\nString nextNextMessage = wsSession.received.pollAsText(100); // explicit timeout in milliseconds for new message to arrive\nactual(nextNextMessage).should(equal(\"{\\\"symbol\\\":\\\"IBM\\\",\\\"price\\\":103}\"));","title":"poll message","surroundedBy":"poll-after-wait","commentsType":"inline","anchorId":"poll-message-as-text-poll-message-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: if there are no already received messages, and no new message arrives within a wait time, ","type":"SimpleText"},{"code":"null","type":"InlinedCode"},{"text":" will be returned.","type":"SimpleText"}]}]},{"id":"poll-message-as-object","title":"Poll Message As Object","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"received.poll","type":"InlinedCode"},{"text":" to convert JSON message to a list or a map.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def message = wsSession.received.poll()\nmessage.symbol.should == \"IBM\"","title":"poll message as map","surroundedBy":"poll-as-map","anchorId":"poll-message-as-object-poll-message-as-map","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Map<String, ?> message = wsSession.received.poll();\nactual(message.get(\"symbol\")).should(equal(\"IBM\"));","title":"poll message as map","surroundedBy":"poll-as-map","anchorId":"poll-message-as-object-poll-message-as-map-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"max-number-of-messages","title":"Max Number Of Messages","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau keeps only 1000 messages. If new messages arrive, the old ones get discarded.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Use ","type":"SimpleText"},{"code":"webSocketMaxMessages","type":"InlinedCode"},{"text":" config value to change number of messages to keep.","type":"SimpleText"}]}]},{"id":"number-of-received-messages","title":"Number Of Received Messages","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"received.count","type":"InlinedCode"},{"text":" to wait for a certain number of messages:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"wsSession.received.count.waitTo == 53","title":"poll message","include":"received.count","anchorId":"number-of-received-messages-poll-message","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"wsSession.received.count.waitTo(equal(53));","title":"poll message","include":"received.count","anchorId":"number-of-received-messages-poll-message-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","startLine":"count","endLine":"count","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mcount \u001B[33mof \u001B[36mmessages \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices \u001B[0m\u001B[34mto equal \u001B[34m53\u001B[0m","\u001B[32m. \u001B[36mcount \u001B[33mof \u001B[36mmessages \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices \u001B[0m\u001B[34mequals \u001B[34m53\u001B[33m (\u001B[32m133ms\u001B[33m)\u001B[0m"],"anchorId":"number-of-received-messages-console-output","type":"CliOutput"}]},{"id":"discard-messages","title":"Discard Messages","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"received.discard","type":"InlinedCode"},{"text":" to remove all already received messages.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Next ","type":"SimpleText"},{"code":"received.pollAsText","type":"InlinedCode"},{"text":" will wait for a new message to arrive as all the received messages will be discarded.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"wsSession.received.discard()\n\ndef nextMessage = wsSession.received.pollAsText(1)\nnextMessage.should == null","title":"discard messages","surroundedBy":"discard-poll","anchorId":"discard-messages-discard-messages","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"wsSession.received.discard();\n\nString nextMessage = wsSession.received.pollAsText(1);\nactual(nextMessage).should(equal(null));","title":"discard messages","surroundedBy":"discard-poll","anchorId":"discard-messages-discard-messages-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","startLine":"discarded","endLine":"no new message is polled","lines":["\u001B[32m. \u001B[34mdiscarded all \u001B[36mmessages \u001B[0m\u001B[1mreceived \u001B[0m\u001B[33mfrom \u001B[35mws://localhost:38809/prices\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mpolling \u001B[36mwebsocket message\u001B[0m","\u001B[32m. \u001B[34mno new message is polled\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"anchorId":"discard-messages-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Web Socket","pageTitle":"Received Messages","pageMeta":{"identifier":["{validationPath: [\"com/example/tests/junit5/WebSocketSpringBootTest.java\", \"org/testingisdocumenting/webtau/websocket/WebSocketConfig.java\"]}"]},"dirName":"web-socket","fileName":"received-messages","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Asynchronous To Synchronous","id":"asynchronous-to-synchronous"},{"title":"Wait For A Specific Message","id":"wait-for-a-specific-message"},{"title":"Wait For A Specific Message Using Value Path","id":"wait-for-a-specific-message-using-value-path"},{"title":"Poll Message As Text","id":"poll-message-as-text"},{"title":"Poll Message As Object","id":"poll-message-as-object"},{"title":"Max Number Of Messages","id":"max-number-of-messages"},{"title":"Number Of Received Messages","id":"number-of-received-messages"},{"title":"Discard Messages","id":"discard-messages"}]}},{"type":"Page","content":[{"id":"connection-header","title":"Connection Header","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"websocket.header","type":"InlinedCode"},{"text":" as a parameter to ","type":"SimpleText"},{"code":"websocket.connect","type":"InlinedCode"},{"text":" to pass connection header:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def wsSession = websocket.connect(\"/prices\",\n        websocket.header([\"x-extra\": \"1\"]))","title":"poll message as map","surroundedBy":"connect-header","anchorId":"connection-header-poll-message-as-map","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/web-socket/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"var wsSession = websocket.connect(\"/prices\",\n        websocket.header(\"x-extra\", \"1\"));","title":"poll message as map","surroundedBy":"connect-header","anchorId":"connection-header-poll-message-as-map-2","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/web-socket/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Web Socket","pageTitle":"Header","pageMeta":{"identifier":["{validationPath: [\"com/example/tests/junit5/WebSocketSpringBootTest.java\", \"org/testingisdocumenting/webtau/websocket/WebSocketConfig.java\"]}"]},"dirName":"web-socket","fileName":"header","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Connection Header","id":"connection-header"}]}},{"type":"Page","content":[{"id":"single-dsl-import","title":"Single DSL Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use multiple WebTau features you can single static import to have all core features available for autocomplete.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It also requires a single dependency to bring all the WebTau modules.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","title":"core import","includeRegexp":"WebTauGroovyDsl","anchorId":"single-dsl-import-core-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you use ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" then all the dependencies are already present.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauDsl.*;","title":"core import","includeRegexp":"WebTauDsl","anchorId":"single-dsl-import-core-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"websocket-specific-import","title":"WebSocket Specific Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To only import ","type":"SimpleText"},{"code":"websocket","type":"InlinedCode"},{"text":" module use","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.websocket.WebSocket.websocket","title":"websocket import","includeRegexp":"websocket.WebSocket.websocket","replace":[";",""],"anchorId":"websocket-specific-import-websocket-import","type":"Snippet"},{"lang":"xml","snippet":"<!--\n  ~ Copyright 2023 webtau maintainers\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ You may obtain a copy of the License at\n  ~\n  ~ http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-websocket</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"websocket-specific-import-maven-dependency","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.websocket.WebSocket.websocket;","title":"websocket import","includeRegexp":"websocket.WebSocket.websocket","anchorId":"websocket-specific-import-websocket-import-2","type":"Snippet"},{"lang":"xml","snippet":"<!--\n  ~ Copyright 2023 webtau maintainers\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ You may obtain a copy of the License at\n  ~\n  ~ http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-websocket</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"websocket-specific-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Web Socket","pageTitle":"Import And Dependencies","pageMeta":{},"dirName":"web-socket","fileName":"import-and-dependencies","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Single DSL Import","id":"single-dsl-import"},{"title":"WebSocket Specific Import","id":"websocket-specific-import"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"browser","type":"InlinedCode"},{"text":" module lets you interact with a browser.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"High level abstractions streamline location, assertion and async logic.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau leverages ","type":"SimpleText"},{"url":"https://www.selenium.dev","isFile":false,"type":"Link","content":[{"text":"Selenium WebDriver","type":"SimpleText"}]},{"text":" to do the heavy lifting.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.waitToBe > 1\n}","title":"browser test (groovy script)","anchorId":"browser-test-groovy-script","type":"Snippet"},{"lang":"groovy","snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def header = $(\"#header\")\n    def welcomeMessage = $(\"#welcome\")\n    def searchMessage = $(\"#message\")\n    def box = $(\"#search-box\")\n\n    def resultsArea = $(\"#results\")\n    def results = $(\"#results .result\")\n    def numberOfResults = results.count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(browser.keys.enter)\n    }\n}","title":"SearchPage.groovy","type":"Snippet"},{"lang":"groovy","snippet":"package pages\n\nclass Pages {\n    static final def search = new SearchPage()\n}","title":"Pages.groovy","excludeRegexp":["calculation","form","payments"],"anchorId":"pages-groovy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static com.example.tests.junit5.pages.Pages.*;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WebSearchJavaTest {\n    @Test\n    public void searchByQuery() {\n        search.submit(\"search this\");\n        search.numberOfResults.waitToBe(greaterThan(1));\n    }\n}","title":"browser test (JUnit 5)","anchorId":"browser-test-junit-5","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5.pages;\n\nimport org.testingisdocumenting.webtau.browser.page.PageElement;\nimport org.testingisdocumenting.webtau.browser.page.PageElementValue;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class SearchPage {\n    private final PageElement box = $(\"#search-box\");\n    private final PageElement results = $(\"#results .result\");\n    public final PageElementValue<Integer> numberOfResults = results.count;\n\n    public void submit(String query) {\n        browser.open(\"/search\");\n\n        box.setValue(query);\n        box.sendKeys(browser.keys.enter);\n    }\n}","title":"SearchPage.java","anchorId":"searchpage-java","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5.pages;\n\npublic class Pages {\n    public static SearchPage search = new SearchPage();\n}","title":"Pages.java","anchorId":"pages-java","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","surroundedBy":"searchByQuery","lines":["\u001B[33m> \u001B[34minitializing \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[0m","\u001B[32m. \u001B[34minitialized \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[33m (\u001B[32m582ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mopening \u001B[35mhttp://localhost:45947/search\u001B[0m","\u001B[32m. \u001B[34mopened \u001B[35mhttp://localhost:45947/search\u001B[33m (\u001B[32m87ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34msetting value \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","  \u001B[33m> \u001B[34mclearing \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","  \u001B[32m. \u001B[34mcleared \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m58ms\u001B[33m)\u001B[0m","  \u001B[33m> \u001B[34msending keys \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","  \u001B[32m. \u001B[34msent keys \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m84ms\u001B[33m)\u001B[0m","\u001B[32m. \u001B[34mset value \u001B[32msearch this \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m175ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34msending keys \u001B[32m<enter> \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[0m","\u001B[32m. \u001B[34msent keys \u001B[32m<enter> \u001B[33mto \u001B[35mby css \u001B[1m\u001B[35m#search-box\u001B[33m (\u001B[32m43ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mcount \u001B[33mof \u001B[35mby css \u001B[1m\u001B[35m#results .result \u001B[0m\u001B[0m\u001B[34mto be greater than \u001B[34m1\u001B[0m","\u001B[32m. \u001B[36mcount \u001B[33mof \u001B[35mby css \u001B[1m\u001B[35m#results .result \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m1\u001B[33m (\u001B[32m21ms\u001B[33m)\u001B[0m"],"anchorId":"console-output","type":"CliOutput"}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Introduction","pageMeta":{},"dirName":"browser","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"base-url","title":"Base URL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau provides configuration option to set base url for your browser ","type":"SimpleText"},{"code":"open","type":"InlinedCode"},{"text":" commands.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This way you can run your tests in different environments without modifying code base.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('simple open') {\n    browser.open(\"/search\")\n    $('#welcome').should == 'welcome to super search'\n}","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Define base URL either inside a ","type":"SimpleText"},{"code":"webtau.cfg.groovy","type":"InlinedCode"},{"text":" file","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8180\"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"or pass as a command line argument ","type":"SimpleText"},{"code":"--url=http://...","type":"InlinedCode"}]}]},{"id":"browser-only-base-url","title":"Browser Only Base URL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use ","type":"SimpleText"},{"code":"url","type":"InlinedCode"},{"text":" parameter you set base url for both ","type":"SimpleText"},{"code":"REST","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"UI","type":"InlinedCode"},{"text":" testing.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browserUrl","type":"InlinedCode"},{"text":" to specify ","type":"SimpleText"},{"code":"UI","type":"InlinedCode"},{"text":" only base url. This can be handy when your backend and frontend live separately.","type":"SimpleText"}]}]},{"id":"browser-id","title":"Browser Id","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browserId","type":"InlinedCode"},{"text":" via command line, or a config file parameter to specify which browser to use.","type":"SimpleText"}]},{"command":"webtau --browserId=firefox","paramsToHighlight":[],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Note: Default ","type":"SimpleText"},{"code":"browserId","type":"InlinedCode"},{"text":" is ","type":"SimpleText"},{"code":"chrome","type":"InlinedCode"}]}]},{"id":"access-to-base-url","title":"Access To Base Url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To access base url or port use:","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.getBaseUrl()\nbrowser.getBaseUrlPort()","surroundedBy":["base-url","base-port"],"type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Basic Configuration","pageMeta":{},"dirName":"browser","fileName":"basic-configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Base URL","id":"base-url"},{"title":"Browser Only Base URL","id":"browser-only-base-url"},{"title":"Browser Id","id":"browser-id"},{"title":"Access To Base Url","id":"access-to-base-url"}]}},{"type":"Page","content":[{"id":"page-element-declaration","title":"Page Element Declaration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"$(\"css-selector\")","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"browser.element(\"css-selector\")","type":"InlinedCode"},{"text":" to lazily declare a page element:","type":"SimpleText"}]},{"lang":"groovy","snippet":"$(\"#element-id\")\n","lineNumber":"","title":"select by id","type":"Snippet"},{"lang":"groovy","snippet":"$(\".label\")\n","lineNumber":"","title":"select by class","type":"Snippet"},{"lang":"groovy","snippet":"$(\"[data-test-id='my-id']\")\n","lineNumber":"","title":"select by attribute","type":"Snippet"},{"type":"Paragraph","content":[{"url":"/webtau/browser/finders-and-filters","isFile":false,"type":"Link","content":[{"text":"Read Finders And Filters","type":"SimpleText"}]},{"text":" to learn how to select elements using more advanced techniques.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"url":"https://www.w3schools.com/cssref/css_selectors.asp","isFile":false,"type":"Link","content":[{"text":"Read W3Schools CSS selectors","type":"SimpleText"}]},{"text":" to learn all kind of CSS selection techniques.","type":"SimpleText"}]}]},{"id":"lazy-element","title":"Lazy Element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use ","type":"SimpleText"},{"code":"$(\"css-selector\")","type":"InlinedCode"},{"text":" you create an instance of ","type":"SimpleText"},{"code":"PageElement","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"code":"PageElement","type":"InlinedCode"},{"text":" encapsulates actions that can be performed on a web page. It also represents values on a page.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It is safe to declare ","type":"SimpleText"},{"code":"PageElement","type":"InlinedCode"},{"text":" before element is actually present on a page.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau will try to locate element only when you query or action on it:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef welcomeMessage = $(\"#welcome\")\n\nscenario(\"simple open\") {\n    browser.open(\"/search\")\n    welcomeMessage.should == \"welcome to super search\"\n}","type":"Snippet"}]},{"id":"lazy-value","title":"Lazy Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Consider a simple search page. Enter value, hit enter, see results:","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('search by specific query') {\n    browser.open('/search')\n\n    $('#search-box').setValue('search this')\n    $('#search-box').sendKeys(\"\\n\")\n\n    $('#results .result').count.shouldBe > 1\n}","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In the example ","type":"SimpleText"},{"code":"$(\"#results .result\").count","type":"InlinedCode"},{"text":" represents the number of elements matching the css selector.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Let's extract it.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef searchBox = $(\"#search-box\")\ndef numberOfResults = searchBox.count\n\nscenario(\"search by specific query\") {\n    browser.open(\"/search\")\n\n    searchBox.setValue(\"search this\")\n    searchBox.sendKeys(\"\\n\")\n\n    numberOfResults.shouldBe > 1\n}","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Page Element And Value","pageMeta":{},"dirName":"browser","fileName":"page-element-and-value","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Page Element Declaration","id":"page-element-declaration"},{"title":"Lazy Element","id":"lazy-element"},{"title":"Lazy Value","id":"lazy-value"}]}},{"type":"Page","content":[{"id":"test-encapsulation","title":"Test Encapsulation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Robust tests should not depend on implementation details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"UI has plenty of those:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"UI Elements placement","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Actions","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"UI test should not depend on any of them.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Move elements placement and available actions outside of UI test.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Multiple tests can then reuse that information.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And more importantly you will have only one place to change if UI changes.","type":"SimpleText"}]}]},{"id":"definition","title":"Definition","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To define ","type":"SimpleText"},{"code":"PageObject","type":"InlinedCode"},{"text":" create a class.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def header = $(\"#header\")\n    def welcomeMessage = $(\"#welcome\")\n    def searchMessage = $(\"#message\")\n    def box = $(\"#search-box\")\n\n    def resultsArea = $(\"#results\")\n    def results = $(\"#results .result\")\n    def numberOfResults = results.count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(browser.keys.enter)\n    }\n}","type":"Snippet"}]},{"id":"grouping","title":"Grouping","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To make it easier to refer ","type":"SimpleText"},{"code":"PageObjects","type":"InlinedCode"},{"text":" from different tests combine them in one file","type":"SimpleText"}]},{"lang":"groovy","snippet":"package pages\n\nclass Pages {\n    static final def search = new SearchPage()\n    static final def calculation = new CalculationPage()\n    static final def form = new FormPage()\n    static final def payments = new PaymentsPage()\n}","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use static import to have seamless access to all of them","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.should == 2\n}","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Page Object","pageMeta":{},"dirName":"browser","fileName":"page-object","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Test Encapsulation","id":"test-encapsulation"},{"title":"Definition","id":"definition"},{"title":"Grouping","id":"grouping"}]}},{"type":"Page","content":[{"id":"clicks","title":"Clicks","type":"Section","content":[{"lang":"groovy","snippet":"payments.confirmation.click()","title":"click","anchorId":"clicks-click","type":"Snippet"},{"lang":"groovy","snippet":"expandArea.doubleClick()","title":"double click","anchorId":"clicks-double-click","type":"Snippet"},{"lang":"groovy","snippet":"paymentsTable.rightClick()","title":"right click","anchorId":"clicks-right-click","type":"Snippet"},{"lang":"groovy","snippet":"payments.confirmation.shiftClick()","title":"shift click","anchorId":"clicks-shift-click","type":"Snippet"},{"lang":"groovy","snippet":"payments.confirmation.altClick()","title":"alt click","anchorId":"clicks-alt-click","type":"Snippet"},{"lang":"groovy","snippet":"payments.confirmation.controlClick()","title":"control click","anchorId":"clicks-control-click","type":"Snippet"},{"lang":"groovy","snippet":"payments.confirmation.commandOrControlClick()","title":"command click","anchorId":"clicks-command-click","type":"Snippet"},{"lang":"groovy","snippet":"payments.confirmation.commandOrControlClick()","title":"command or control click","anchorId":"clicks-command-or-control-click","type":"Snippet"}]},{"id":"modifications","title":"Modifications","type":"Section","content":[{"lang":"groovy","snippet":"payments.dollarAmount.clear()","title":"clear","anchorId":"modifications-clear","type":"Snippet"},{"lang":"groovy","snippet":"payments.dollarAmount.sendKeys(\"104.5\")","title":"send keys","anchorId":"modifications-send-keys","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Generic way to set a form element value. Will be covered more in ","type":"SimpleText"},{"url":"/webtau/browser/forms","isFile":false,"type":"Link","content":[{"text":"forms","type":"SimpleText"}]}]},{"lang":"groovy","snippet":"payments.dollarAmount.setValue(\"104.5\")","title":"set value","anchorId":"modifications-set-value","type":"Snippet"}]},{"id":"modifications-no-log","title":"Modifications No Log","type":"Section","content":[{"lang":"groovy","snippet":"payments.secret.sendKeysNoLog(\"my secret token\")","title":"send keys without logging","anchorId":"modifications-no-log-send-keys-without-logging","type":"Snippet"},{"lang":"groovy","snippet":"payments.secret.setValueNoLog(\"my secret token\")","title":"set value without logging","anchorId":"modifications-no-log-set-value-without-logging","type":"Snippet"}]},{"id":"move-over","title":"Move over","type":"Section","content":[{"lang":"groovy","snippet":"menu.hover()","title":"hover","anchorId":"move-over-hover","type":"Snippet"}]},{"id":"drag-and-drop","title":"Drag And Drop","type":"Section","content":[{"lang":"groovy","snippet":"def draggable = $(\"#draggable\")\ndef dropZone = $(\"#drop-zone\")\n\ndraggable.dragAndDropOver(dropZone)","title":"drag element over element","surroundedBy":"// drag-and-drop-over","anchorId":"drag-and-drop-drag-element-over-element","type":"Snippet"},{"lang":"groovy","snippet":"def draggable = $(\"#draggable\")\ndraggable.dragAndDropBy(50, 50)","title":"drag element by offset","surroundedBy":"// drag-and-drop-by","anchorId":"drag-and-drop-drag-element-by-offset","type":"Snippet"}]},{"id":"scrolling","title":"Scrolling","type":"Section","content":[{"lang":"groovy","snippet":"sectionTwo.scrollIntoView()","title":"scroll into view","startLine":"// scrollIntoView-example","endLine":"// scrollIntoView-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-into-view","type":"Snippet"},{"lang":"groovy","snippet":"container.scrollToBottom()","title":"scroll to bottom","startLine":"// scrollToBottom-example","endLine":"// scrollToBottom-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-to-bottom","type":"Snippet"},{"lang":"groovy","snippet":"container.scrollToTop()","title":"scroll to top","startLine":"// scrollToTop-example","endLine":"// scrollToTop-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-to-top","type":"Snippet"},{"lang":"groovy","snippet":"container.scrollToRight()","title":"scroll to right","startLine":"// scrollToRight-example","endLine":"// scrollToRight-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-to-right","type":"Snippet"},{"lang":"groovy","snippet":"container.scrollToRight()","title":"scroll to right","startLine":"// scrollToRight-example","endLine":"// scrollToRight-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-to-right-2","type":"Snippet"},{"lang":"groovy","snippet":"container.scrollToLeft()","title":"scroll to left","startLine":"// scrollToLeft-example","endLine":"// scrollToLeft-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-to-left","type":"Snippet"},{"lang":"groovy","snippet":"container.scrollTo(100, 50)","title":"scroll to x, y","startLine":"// scrollTo-example","endLine":"// scrollTo-example","excludeStartEnd":true,"anchorId":"scrolling-scroll-to-x-y","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Element Actions Reference","pageMeta":{},"dirName":"browser","fileName":"element-actions-reference","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Clicks","id":"clicks"},{"title":"Modifications","id":"modifications"},{"title":"Modifications No Log","id":"modifications-no-log"},{"title":"Move over","id":"move-over"},{"title":"Drag And Drop","id":"drag-and-drop"},{"title":"Scrolling","id":"scrolling"}]}},{"type":"Page","content":[{"id":"wait-and-should","title":"Wait And Should","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" to wait on a condition, and ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" to assert right away.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"All the code below you can freely swap between ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"id":"text-value","title":"Text Value","type":"Section","content":[{"lang":"groovy","snippet":"header.should(equal(\"super search\"))","surroundedBy":"text-validation","type":"Snippet"},{"title":"console output","surroundedBy":"check page element value","startLine":"expecting","lines":["\u001B[33m> \u001B[34mexpecting \u001B[35mby css \u001B[1m\u001B[35m#header \u001B[0m\u001B[0m\u001B[34mto equal \u001B[32m\"super search\"\u001B[0m","\u001B[32m. \u001B[35mby css \u001B[1m\u001B[35m#header \u001B[0m\u001B[0m\u001B[34mequals \u001B[32m\"super search\"\u001B[33m (\u001B[32m81ms\u001B[33m)\u001B[0m"],"anchorId":"text-value-console-output","type":"CliOutput"}]},{"id":"attribute-value","title":"Attribute Value","type":"Section","content":[{"lang":"groovy","snippet":"pageElement.attribute(\"class\").waitTo(equal(~/\\bfancy\\b/))","surroundedBy":"attribute-validation","type":"Snippet"},{"title":"console output","surroundedBy":"check attribute class value","startLine":"waiting","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mattribute \"class\" \u001B[33mof \u001B[35mby css \u001B[1m\u001B[35m#table-wrapper \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m~/\u001B[32m\\bfancy\\b\u001B[33m/\u001B[0m","\u001B[32m. \u001B[36mattribute \"class\" \u001B[33mof \u001B[35mby css \u001B[1m\u001B[35m#table-wrapper \u001B[0m\u001B[0m\u001B[34mequals \u001B[33m~/\u001B[32m\\bfancy\\b\u001B[33m/\u001B[33m (\u001B[32m22ms\u001B[33m)\u001B[0m"],"anchorId":"attribute-value-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Element Values Reference","pageMeta":{},"dirName":"browser","fileName":"element-values-reference","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Wait And Should","id":"wait-and-should"},{"title":"Text Value","id":"text-value"},{"title":"Attribute Value","id":"attribute-value"}]}},{"type":"Page","content":[{"id":"universal-set-value","title":"Universal Set Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" on a declared page element to set its value.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It will work on all the standard input types out of the box.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Define all the input fields inside a page object. In combination with universal ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" it will make your tests robust.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Given a html snippet","type":"SimpleText"}]},{"lang":"html","snippet":"<html>\n<body>\n<div id=\"form\">\n  <input id=\"name\" />\n  <input id=\"startDate\" type=\"date\" />\n  <input id=\"confirmation\" type=\"checkbox\" />\n  <div id=\"choice-group\" class=\"radio-group\">\n    <div>\n      <input type=\"radio\" id=\"one\" name=\"choice\" value=\"value-one\"/>\n      <label for=\"one\">one</label>\n    </div>\n    <div>\n      <input type=\"radio\" id=\"two\" name=\"choice\" value=\"value-two\"/>\n      <label for=\"two\">two</label>\n    </div>\n    <div>\n      <input type=\"radio\" id=\"three\" name=\"choice\" value=\"value-three\"/>\n      <label for=\"three\">three</label>\n    </div>\n  </div>\n  <select id=\"rank\">\n    <option />\n    <option value=\"A\">Full A</option>\n    <option value=\"B\">Full B</option>\n    <option value=\"C\">Full C</option>\n    <option value=\"D\">Full D</option>\n    <option value=\"E\">Full E</option>\n  </select>\n</div>\n</body>\n</html>","title":"HTML form","anchorId":"universal-set-value-html-form","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Page object can be defined as","type":"SimpleText"}]},{"lang":"groovy","snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass FormPage {\n    def name = $('#name')\n    def rank = $('#rank')\n    def confirmation = $('#confirmation')\n    def choice = $('[name=\"choice\"]')\n    def startDate = $('#startDate')\n}","title":"Form page object","anchorId":"universal-set-value-form-page-object","type":"Snippet"}]},{"id":"default-input","title":"Default Input","type":"Section","content":[{"lang":"groovy","snippet":"form.name.setValue('Full Automation')","title":"set value to input","anchorId":"default-input-set-value-to-input","type":"Snippet"}]},{"id":"date-input","title":"Date Input","type":"Section","content":[{"lang":"groovy","snippet":"form.startDate.setValue('2016-06-21')","title":"set value to date input","anchorId":"date-input-set-value-to-date-input","type":"Snippet"}]},{"id":"select","title":"Select","type":"Section","content":[{"lang":"groovy","snippet":"form.rank.setValue('B')","title":"set value to select by value","anchorId":"select-set-value-to-select-by-value","type":"Snippet"},{"lang":"groovy","snippet":"form.rank.setValue('Full B')","title":"set value to select by visible text","anchorId":"select-set-value-to-select-by-visible-text","type":"Snippet"}]},{"id":"checkbox","title":"CheckBox","type":"Section","content":[{"lang":"groovy","snippet":"form.confirmation.setValue(true)","title":"set value to checkbox","anchorId":"checkbox-set-value-to-checkbox","type":"Snippet"}]},{"id":"radio-button","title":"Radio Button","type":"Section","content":[{"lang":"groovy","snippet":"form.choice.setValue('value-two')","title":"set value to radio button","anchorId":"radio-button-set-value-to-radio-button","type":"Snippet"}]},{"id":"universal-assert","title":"Universal Assert","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Form element value can be asserted the same way as any regular element.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Underlying value will be extracted based on the element type","type":"SimpleText"}]},{"lang":"groovy","snippet":"form.name.should == 'Full Automation'\nform.rank.should == 'Full B'\nform.confirmation.should == true\nform.choice.should == 'value-two'\nform.startDate.should == '2016-06-21'","title":"universal assert","anchorId":"universal-assert-universal-assert","type":"Snippet"}]},{"id":"custom-form-elements","title":"Custom Form Elements","type":"Section","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of universal ","type":"SimpleText"},{"code":"set","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"assert","type":"InlinedCode"},{"text":" is that your test is focused on the data and not implementation details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But what if you decided to use a custom component to enter the data?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To hide implementation details from your test you should define a custom input handler for your UI component.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's consider a form component that you can start interacting with only after you clicked it. And after the value","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is entered, the input box disappears again.","type":"SimpleText"}]},{"lang":"html","snippet":"<div id=\"answer\" class=\"special-selector\" onclick=\"activate('answer')\">\n <div class=\"current-value\">\n  current value\n </div><input class=\"value-input\" value=\"\" onblur=\"valueEntered('answer')\">\n</div>","title":"Custom input","anchorId":"custom-form-elements-custom-input","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Our test should still be written in terms of data entering and validation.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def customFormElement = $('#answer')\n\ncustomFormElement.setValue('hello')\ncustomFormElement.should == 'hello'","title":"set value to custom component","anchorId":"custom-form-elements-set-value-to-custom-component","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In order to achieve this we need to register a custom handler.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('open forms') {\n    browser.open('/special-forms')\n}\n\nscenario('get set custom based on registered handler') {\n    def customFormElement = $('#answer')\n\n    customFormElement.setValue('hello')\n    customFormElement.should == 'hello'\n}","title":"webtau.cfg.groovy","anchorId":"custom-form-elements-webtau-cfg-groovy","type":"Snippet"},{"lang":"groovy","snippet":"package formHandlers\n\nimport org.testingisdocumenting.webtau.browser.page.HtmlNodeAndWebElementList\nimport org.testingisdocumenting.webtau.browser.page.PageElement\nimport org.testingisdocumenting.webtau.browser.page.PageElementStepExecutor\nimport org.testingisdocumenting.webtau.browser.handlers.PageElementGetSetValueHandler\nimport org.testingisdocumenting.webtau.reporter.TokenizedMessage\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.browser\n\nclass CustomInput implements PageElementGetSetValueHandler {\n    @Override\n    boolean handles(HtmlNodeAndWebElementList htmlNodeAndWebElements, PageElement pageElement) {\n        def htmlNode = htmlNodeAndWebElements.firstHtmlNode()\n        return htmlNode.attributes().class =~ /special-selector/\n    }\n\n    @Override\n    void setValue(PageElementStepExecutor stepExecutor,\n                  TokenizedMessage pathDescription,\n                  HtmlNodeAndWebElementList htmlNodeAndWebElements,\n                  PageElement pageElement,\n                  Object value,\n                  boolean noLog) {\n        pageElement.click()\n        pageElement.find('input').sendKeys(\"${value}\" + browser.keys.tab)\n    }\n\n    @Override\n    Object getValue(HtmlNodeAndWebElementList htmlNodeAndWebElements, PageElement pageElement, int idx) {\n        return pageElement.find('.current-value').extractSingleValue()\n    }\n}","title":"Custom input handler","anchorId":"custom-form-elements-custom-input-handler","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Forms","pageMeta":{},"dirName":"browser","fileName":"forms","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Universal Set Value","id":"universal-set-value"},{"title":"Default Input","id":"default-input"},{"title":"Date Input","id":"date-input"},{"title":"Select","id":"select"},{"title":"CheckBox","id":"checkbox"},{"title":"Radio Button","id":"radio-button"},{"title":"Universal Assert","id":"universal-assert"},{"title":"Custom Form Elements","id":"custom-form-elements"}]}},{"type":"Page","content":[{"id":"validating-table-data","title":"Validating Table Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.table","type":"InlinedCode"},{"text":" to define a table on your page that you want to interact with.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Once table is defined, you can validate it using ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def summaryTable = browser.table(\"#summary\")\n\nsummaryTable.should == [ \"column A\" | \"column B\" | \"column C\"] {\n                       _______________________________________\n                              \"A-1\" |      \"B-1\" | \"C-1\"\n                              \"A-2\" |      \"B-2\" | \"C-2\" }","title":"table validation","surroundedBy":"table-data-validation","anchorId":"validating-table-data-table-validation","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var summaryTable = browser.table(\"#summary\");\n\nsummaryTable.should(equal(table(\"column A\", \"column B\", \"column C\",\n                               ____________________________________,\n                                    \"A-1\" ,      \"B-1\", \"C-1\",\n                                    \"A-2\" ,      \"B-2\", \"C-2\" )));","title":"table validation","surroundedBy":"table-data-validation","anchorId":"validating-table-data-table-validation-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"More details in ","type":"SimpleText"},{"url":"/webtau/matchers/tables","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]}]}]},{"id":"extracting-table-data","title":"Extracting Table Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"extractTableData","type":"InlinedCode"},{"text":" to extract ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" for further processing, e.g. saving to a disk:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def summaryTable = browser.table(\"#summary\")\ndef tableData = summaryTable.extractTableData()\n\ndata.csv.write(\"table-data.csv\", tableData)","title":"table data extraction","surroundedBy":"extract-single-table-data","anchorId":"extracting-table-data-table-data-extraction","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var summaryTable = browser.table(\"#summary\");\nvar tableData = summaryTable.extractTableData();\n\ndata.csv.write(\"table-data.csv\", tableData);","title":"table data extraction","surroundedBy":"extract-single-table-data","anchorId":"extracting-table-data-table-data-extraction-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"extractAndMergeTableData","type":"InlinedCode"},{"text":" to extract ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from multiple tables matching the selector:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def tablesList = browser.table(\"table\")\ndef combinedTableData = tablesList.extractAndMergeTableData()\n\ndata.csv.write(\"combined-table-data.csv\", combinedTableData)","title":"multiple tables data extraction","surroundedBy":"extract-all-table-data","anchorId":"extracting-table-data-multiple-tables-data-extraction","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var tablesList = browser.table(\"table\");\nvar combinedTableData = tablesList.extractAndMergeTableData();\n\ndata.csv.write(\"combined-table-data.csv\", combinedTableData);","title":"multiple tables data extraction","surroundedBy":"extract-all-table-data","anchorId":"extracting-table-data-multiple-tables-data-extraction-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: Only first table columns will be used","type":"SimpleText"}]}]},{"id":"supported-tables-flavor","title":"Supported Tables Flavor","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau supports standard HTML tables and ","type":"SimpleText"},{"url":"https://www.ag-grid.com","isFile":false,"type":"Link","content":[{"text":"AG Grid","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"There is a mechanism to register new parsers. If you are interested in contributing a parser or learn how to do it, please ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/webtau/issues","isFile":false,"type":"Link","content":[{"text":"create a ticket","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Tables","pageMeta":{"identifier":["{validationPath: \"examples/scenarios/ui/tables.groovy\"}"]},"dirName":"browser","fileName":"tables","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Validating Table Data","id":"validating-table-data"},{"title":"Extracting Table Data","id":"extracting-table-data"},{"title":"Supported Tables Flavor","id":"supported-tables-flavor"}]}},{"type":"Page","content":[{"id":"synchronization","title":"Synchronization","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Many actions in a modern web page are asynchronous. User presses a button and a moment later a result appears.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In modern web pages there is no full page reload and only a portion of a page will be changed.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"If a test will try to assert a value after a user action, chances are assertion will fail since it will take time","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"for a result to appear on a page.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Question: How do users know that their action is done and they can move on?","type":"SimpleText"}]}]},{"id":"visible-hidden-element","title":"Visible/Hidden Element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"One way to deal with asynchronous pages is to wait for a feedback to appear or disappear.","type":"SimpleText"}]},{"lang":"groovy","snippet":"calculation.start()\n\ncalculation.feedback.waitToBe visible\ncalculation.results.should == [100, 230]","title":"visible matcher","anchorId":"visible-hidden-element-visible-matcher","type":"Snippet"}]},{"id":"enabled-disabled-element","title":"Enabled/Disabled Element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Disabled input box and buttons can be used as a user feedback as well.","type":"SimpleText"}]},{"lang":"groovy","snippet":"calculation.open()\n\ncalculation.input.waitToBe enabled\ncalculation.input.setValue(100)","title":"enabled matcher","anchorId":"enabled-disabled-element-enabled-matcher","type":"Snippet"}]},{"id":"wait-to-match","title":"Wait to match","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If presence/absence of an element is not important, you can directly to wait for a matcher to match.","type":"SimpleText"}]},{"lang":"groovy","snippet":"calculation.start()\ncalculation.results.waitTo == [100, 230]","title":"waitTo any matcher","anchorId":"wait-to-match-waitto-any-matcher","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: any matcher that you can use with ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"},{"text":" can be used with ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitToNot","type":"InlinedCode"}]}]},{"id":"wait-on-url","title":"Wait on url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Another cue to use could be a url change after an action.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.open('/resource-creation')\n\n$('#new').click()\nbrowser.url.ref.waitTo == 'created-id'","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: url exposes other parts that you can ","type":"SimpleText"},{"url":"/webtau/browser/navigation#assert-url","isFile":false,"type":"Link","content":[{"text":"read more about here","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Asynchronous Page","pageMeta":{},"dirName":"browser","fileName":"asynchronous-page","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Synchronization","id":"synchronization"},{"title":"Visible/Hidden Element","id":"visible-hidden-element"},{"title":"Enabled/Disabled Element","id":"enabled-disabled-element"},{"title":"Wait to match","id":"wait-to-match"},{"title":"Wait on url","id":"wait-on-url"}]}},{"type":"Page","content":[{"id":"usage-scenarios","title":"Usage Scenarios","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To document how to use a User Interface we often take screenshots and annotate them.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"At the same time we need to make sure that the documented scenario works as advertised.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"With UI testing we can validate scenarios and at the same time capture screenshots with automatically placed annotations.","type":"SimpleText"}]}]},{"id":"capturing-screenshots-with-annotations","title":"Capturing Screenshots With Annotations","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To capture screenshots use ","type":"SimpleText"},{"code":"browser.doc[.withAnnotations][.withRoot].capture","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(\n        browser.doc.badge(search.box),\n        browser.doc.badge(search.results)).capture(\"search\")","title":"screenshot capture with badge annotations","anchorId":"capturing-screenshots-with-annotations-screenshot-capture-with-badge-annotations","type":"Snippet"},{"type":"Paragraph","content":[{"text":"The result of the ","type":"SimpleText"},{"code":"capture","type":"InlinedCode"},{"text":" command is two files:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"captured screenshot","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"search.json","type":"InlinedCode"}]}]}]},{"lang":"json","snippet":"{\n  \"shapes\" : [ {\n    \"type\" : \"badge\",\n    \"text\" : \"1\",\n    \"x\" : 111,\n    \"y\" : 78,\n    \"align\" : \"Center\"\n  }, {\n    \"type\" : \"badge\",\n    \"text\" : \"2\",\n    \"x\" : 450,\n    \"y\" : 166,\n    \"align\" : \"Center\"\n  } ],\n  \"pixelRatio\" : 1\n}","title":"search.json","anchorId":"capturing-screenshots-with-annotations-search-json","type":"Snippet"},{"type":"Paragraph","content":[{"url":"https://testingisdocumenting.org/webtau","isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}]},{"text":" documentation site is generated using ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/znai","isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It has ","type":"SimpleText"},{"code":"include-image","type":"InlinedCode"},{"text":" plugin that supports annotations format generated by ","type":"SimpleText"},{"code":"capture","type":"InlinedCode"},{"text":" command.","type":"SimpleText"}]},{"lang":"","snippet":":include-image: doc-artifacts/search.png {fit: true, annotate: true}\n","lineNumber":"","type":"Snippet"},{"fit":true,"annotate":true,"imageSrc":"/webtau/doc-artifacts/search.png","timestamp":1692272303449,"shapes":[{"type":"badge","text":"1","x":111,"y":78,"align":"Center","invertedColors":false},{"type":"badge","text":"2","x":450,"y":166,"align":"Center","invertedColors":false}],"width":900.0,"height":355.0,"type":"AnnotatedImage"}]},{"id":"badge-shortcut","title":"Badge Shortcut","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Badge annotation is an easy-to-use one to tell a story. Numeric values help to bring the focus and explain a user a","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"sequence of events.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"When annotation type is not specified, badge is used as the default.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(search.box, search.results).capture(\"search-with-shortcut\")","title":"default badge annotation type","anchorId":"badge-shortcut-default-badge-annotation-type","type":"Snippet"}]},{"id":"annotation-types","title":"Annotation Types","type":"Section","content":[{"lang":"groovy","snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(\n        browser.doc.badge(search.box),\n        browser.doc.badge(search.results)).capture(\"search\")","title":"badges","anchorId":"annotation-types-badges","type":"Snippet"},{"annotate":true,"imageSrc":"/webtau/doc-artifacts/search.png","timestamp":1692272303449,"shapes":[{"type":"badge","text":"1","x":111,"y":78,"align":"Center","invertedColors":false},{"type":"badge","text":"2","x":450,"y":166,"align":"Center","invertedColors":false}],"width":900.0,"height":355.0,"type":"AnnotatedImage"},{"lang":"groovy","snippet":"browser.doc.withAnnotations(\n        browser.doc.rect(search.box),\n        browser.doc.rect(search.results, \"covering text\")).capture(\"search-rectangles\")","title":"rectangles","anchorId":"annotation-types-rectangles","type":"Snippet"},{"annotate":true,"imageSrc":"/webtau/doc-artifacts/search-rectangles.png","timestamp":1692272304249,"shapes":[{"type":"rectangle","text":"","beginX":16,"beginY":67,"endX":206,"endY":90,"invertedColors":false},{"type":"rectangle","text":"covering text","beginX":20,"beginY":148,"endX":880,"endY":185,"invertedColors":false,"tooltip":[{"type":"Paragraph","content":[{"text":"covering text","type":"SimpleText"}]}]}],"width":900.0,"height":355.0,"type":"AnnotatedImage"},{"lang":"groovy","snippet":"browser.doc.withAnnotations(\n        browser.doc.arrow(search.box, search.results, \"search result\")).capture(\"search-arrow\")","title":"arrow","anchorId":"annotation-types-arrow","type":"Snippet"},{"annotate":true,"imageSrc":"/webtau/doc-artifacts/search-arrow.png","timestamp":1692272304385,"shapes":[{"type":"arrow","text":"search result","beginX":111,"beginY":78,"endX":450,"endY":166,"invertedColors":false,"tooltip":[{"type":"Paragraph","content":[{"text":"search result","type":"SimpleText"}]}]}],"width":900.0,"height":355.0,"type":"AnnotatedImage"}]},{"id":"annotation-placement","title":"Annotation Placement","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"above","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"below","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"toTheLeft","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"toTheRight","type":"InlinedCode"},{"text":" to put an annotation outside of element center.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.doc.withAnnotations(\n        browser.doc.badge(search.box).toTheRight(),\n        browser.doc.badge(search.results).above()).capture(\"search-diff-placement\")","title":"badge placement","endLine":"example-end","excludeStartEnd":true,"anchorId":"annotation-placement-badge-placement","type":"Snippet"},{"annotationsPath":"doc-artifacts/search-diff-placement.json","imageSrc":"/webtau/doc-artifacts/search.png","timestamp":1692272303449,"shapes":[{"type":"badge","text":"1","x":206,"y":78,"align":"ToTheRight","invertedColors":false},{"type":"badge","text":"2","x":450,"y":148,"align":"Above","invertedColors":false}],"width":900.0,"height":355.0,"type":"AnnotatedImage"}]},{"id":"screenshot-of-a-specific-element","title":"Screenshot Of A Specific Element","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"withRoot","type":"InlinedCode"},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to limit screenshot to a specific element","type":"SimpleText"}]},{"annotationsPath":"doc-artifacts/search-results-area.json","imageSrc":"/webtau/doc-artifacts/search-results-area.png","timestamp":1692272303825,"shapes":[{"type":"badge","text":"1","x":434,"y":18,"align":"Center","invertedColors":false}],"width":868.0,"height":207.0,"type":"AnnotatedImage"},{"lang":"groovy","snippet":"search.submit(\"search this\")\n\nbrowser.doc.withRoot(search.resultsArea)\n        .withAnnotations(browser.doc.badge(search.results))\n        .capture(\"search-results-area\")","title":"specific element","anchorId":"screenshot-of-a-specific-element-specific-element","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Documentation Artifacts","pageMeta":{},"dirName":"browser","fileName":"documentation-artifacts","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Usage Scenarios","id":"usage-scenarios"},{"title":"Capturing Screenshots With Annotations","id":"capturing-screenshots-with-annotations"},{"title":"Badge Shortcut","id":"badge-shortcut"},{"title":"Annotation Types","id":"annotation-types"},{"title":"Annotation Placement","id":"annotation-placement"},{"title":"Screenshot Of A Specific Element","id":"screenshot-of-a-specific-element"}]}},{"type":"Page","content":[{"id":"timeouts","title":"Timeouts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Default timeout in milliseconds for ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitToNot","type":"InlinedCode"}]},{"columns":[{"content":[{"lang":"","snippet":"waitTimeout = 25000\n","lineNumber":"","type":"Snippet"}]},{"content":[{"lang":"","snippet":"--waitTimeout=25000\n","lineNumber":"","type":"Snippet"}]}],"config":{},"type":"Columns"}]},{"id":"browser-size","title":"Browser Size","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Browser window size can be set using ","type":"SimpleText"},{"code":"browserWidth","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"browserHeight","type":"InlinedCode"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8180\"\n\nbrowserWidth = 1280\nbrowserHeight = 800","type":"Snippet"}]},{"id":"documentation-artifacts","title":"Documentation Artifacts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, all generated documentation artifacts (e.g. screenshots) are created in the current directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To override","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8180\"\n\ndocPath = \"screenshots\"","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Advanced Configuration","pageMeta":{},"dirName":"browser","fileName":"advanced-configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Timeouts","id":"timeouts"},{"title":"Browser Size","id":"browser-size"},{"title":"Documentation Artifacts","id":"documentation-artifacts"}]}},{"type":"Page","content":[{"id":"default-webdriver-creation","title":"Default WebDriver Creation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau creates ","type":"SimpleText"},{"url":"https://www.selenium.dev","isFile":false,"type":"Link","content":[{"text":"Selenium WebDriver","type":"SimpleText"}]},{"text":" by pointing to a local browser. WebTau also downloads a driver using ","type":"SimpleText"},{"url":"https://github.com/bonigarcia/webdrivermanager","isFile":false,"type":"Link","content":[{"text":"WebDriver Manager","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To handle scenarios where local browsers are not an option, WebTau provides an integration with ","type":"SimpleText"},{"url":"https://www.testcontainers.org","isFile":false,"type":"Link","content":[{"text":"Test Containers","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]}]},{"id":"explicit-selenium-test-containers","title":"Explicit Selenium Test Containers","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To support ","type":"SimpleText"},{"url":"https://www.testcontainers.org","isFile":false,"type":"Link","content":[{"text":"Test Containers","type":"SimpleText"}]},{"text":" explicitly, WebTau expose ","type":"SimpleText"},{"code":"browser.setDriver","type":"InlinedCode"},{"text":" to force a specific driver to use:","type":"SimpleText"}]},{"lang":"java","snippet":"@WebTau\npublic class BrowserTestContainerJavaTest {\n    private final PageElement box = $(\"#search-box\");\n    private final PageElement results = $(\"#results .result\");\n    private final PageElementValue<Integer> numberOfResults = results.count;\n\n    private static BrowserWebDriverContainer<?> seleniumContainer;\n\n    @BeforeAll\n    public static void setupDriverUsingTestContainer() {\n        step(\"preparing selenium test container\", () -> {\n            Testcontainers.exposeHostPorts(browser.getBaseUrlPort());\n            FirefoxOptions firefox = new FirefoxOptions();\n            seleniumContainer = new BrowserWebDriverContainer<>()\n                    .withCapabilities(firefox);\n\n            seleniumContainer.start();\n            browser.setDriver(new RemoteWebDriver(seleniumContainer.getSeleniumAddress(), firefox));\n        });\n    }\n\n    @AfterAll\n    public static void shutdownContainer() {\n        seleniumContainer.stop();\n    }\n\n    @Test\n    public void search() {\n        browser.open(\"/search\");\n\n        box.setValue(\"search this\");\n        box.sendKeys(browser.keys.enter);\n\n        numberOfResults.waitToBe(greaterThan(1));\n    }\n}","title":"manually start selenium test container","entry":"BrowserTestContainerJavaTest","highlight":[17],"anchorId":"explicit-selenium-test-containers-manually-start-selenium-test-container","type":"Snippet"}]},{"id":"implicit-selenium-test-container","title":"Implicit Selenium Test Container","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau provides an option to simplify running tests using both local and ","type":"SimpleText"},{"url":"https://www.testcontainers.org","isFile":false,"type":"Link","content":[{"text":"Test Containers","type":"SimpleText"}]},{"text":" based browser:","type":"SimpleText"}]},{"lang":"properties","snippet":"browserId=firefox\nbrowserUrl=http://host.testcontainers.internal:8080\nbrowserTestcontainersEnabled=true","title":"src/test/resources/webtau.properties","highlight":[2],"anchorId":"implicit-selenium-test-container-src-test-resources-webtau-properties","type":"Snippet"},{"lang":"java","snippet":"@WebTau\npublic class BrowserImplicitTestContainerJavaTest {\n    private final PageElement box = $(\"#search-box\");\n    private final PageElement results = $(\"#results .result\");\n    private final PageElementValue<Integer> numberOfResults = results.count;\n\n    @Test\n    public void search() {\n        browser.open(\"/search\");\n\n        box.setValue(\"search this\");\n        box.sendKeys(browser.keys.enter);\n\n        numberOfResults.waitToBe(greaterThan(1));\n    }\n}","title":"implicitly start selenium test container","entry":"BrowserImplicitTestContainerJavaTest","anchorId":"implicit-selenium-test-container-implicitly-start-selenium-test-container","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Read ","type":"SimpleText"},{"url":"/webtau/getting-started/configuration","isFile":false,"type":"Link","content":[{"text":"Configuration","type":"SimpleText"}]},{"text":" page to learn about how to override config values using different environments, system properties or environment variables.","type":"SimpleText"}]}]},{"id":"dependency","title":"Dependency","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau includes ","type":"SimpleText"},{"url":"https://www.testcontainers.org","isFile":false,"type":"Link","content":[{"text":"Test Containers","type":"SimpleText"}]},{"text":" into ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" and into single catch-all dependency","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"catch-all Groovy dependecy","anchorId":"dependency-catch-all-groovy-dependecy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"catch-all Java dependency","anchorId":"dependency-catch-all-java-dependency","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"If you cherry-pick WebTau dependencies, then you need to add this to your list:","type":"SimpleText"}]},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-browser-testcontainers</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"dependency-maven-dependency","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Test Containers","pageMeta":{},"dirName":"browser","fileName":"test-containers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Default WebDriver Creation","id":"default-webdriver-creation"},{"title":"Explicit Selenium Test Containers","id":"explicit-selenium-test-containers"},{"title":"Implicit Selenium Test Container","id":"implicit-selenium-test-container"},{"title":"Dependency","id":"dependency"}]}},{"type":"Page","content":[{"id":"access-local-storage","title":"Access Local Storage","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To access local storage use ","type":"SimpleText"},{"code":"browser.localStorage","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Lets consider a simple web page that displays a value from a local storage.","type":"SimpleText"}]},{"lang":"html","snippet":"<div id=\"favorite-color\">\n</div>\n<script>\n    const element = document.getElementById('favorite-color');\n    element.innerHTML = localStorage.getItem('favoriteColor');\n</script>","title":"Sample web page","anchorId":"access-local-storage-sample-web-page","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"local storage api\") {\n    browser.open('/local-storage')\n    browser.localStorage.setItem('favoriteColor', 'clean')\n\n    def color = $('#favorite-color')\n\n    browser.reopen('/local-storage')\n    color.should == 'clean'\n\n    browser.localStorage.clear()\n    browser.reopen('/local-storage')\n    color.should == ''\n}","title":"Setting storage after opening page","anchorId":"access-local-storage-setting-storage-after-opening-page","type":"Snippet"},{"lang":"java","snippet":"public String getItem(String key)\npublic void setItem(String key, String value)\npublic void removeItem(String key)\npublic void clear()\npublic int size()","entry":["getItem","setItem","removeItem","clear","size"],"title":"Local Storage methods","signatureOnly":true,"anchorId":"access-local-storage-local-storage-methods","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Local Storage","pageMeta":{},"dirName":"browser","fileName":"local-storage","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Access Local Storage","id":"access-local-storage"}]}},{"type":"Page","content":[{"id":"add-cookies","title":"Add Cookies","type":"Section","content":[{"lang":"groovy","snippet":"browser.cookies.add(\"cookie-a\", \"hello\")\nbrowser.cookies.add(\"cookie-b\", \"world\")","title":"add cookies","anchorId":"add-cookies-add-cookies","type":"Snippet"}]},{"id":"get-cookies","title":"Get Cookies","type":"Section","content":[{"lang":"groovy","snippet":"browser.cookies.get(\"cookie-a\").should == \"hello\"\nbrowser.cookies.get(\"cookie-b\").should == \"world\"\n\nbrowser.cookies.getAll().should == [\"cookie-a\": \"hello\", \"cookie-b\": \"world\"]","title":"get cookies","anchorId":"get-cookies-get-cookies","type":"Snippet"}]},{"id":"delete-cookies","title":"Delete Cookies","type":"Section","content":[{"lang":"groovy","snippet":"browser.cookies.delete(\"cookie-b\")","title":"delete cookie by name","anchorId":"delete-cookies-delete-cookie-by-name","type":"Snippet"},{"lang":"groovy","snippet":"browser.cookies.deleteAll()","title":"delete all cookies","anchorId":"delete-cookies-delete-all-cookies","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Cookies","pageMeta":{},"dirName":"browser","fileName":"cookies","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Add Cookies","id":"add-cookies"},{"title":"Get Cookies","id":"get-cookies"},{"title":"Delete Cookies","id":"delete-cookies"}]}},{"type":"Page","content":[{"id":"open","title":"Open","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To open a page use ","type":"SimpleText"},{"code":"browser.open","type":"InlinedCode"},{"text":". Browser will load a page only if the current url doesn't match the passed one.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit('query')\n\nbrowser.open(\"/search\") // page is not be ing refreshed\nsearch.searchMessage.should == 'searching for query'","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: relative url will be automatically expanded to the full url based on the ","type":"SimpleText"},{"url":"/webtau/browser/basic-configuration","isFile":false,"type":"Link","content":[{"text":"configuration","type":"SimpleText"}]}]}]},{"id":"reopen","title":"Reopen","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"brower.reopen","type":"InlinedCode"},{"text":" to force open the page even if the page url already matches the passed one.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit('name')\n\nbrowser.reopen(\"/search\") // page is going to be refreshed\nsearch.searchMessage.should == ''","commentsType":"inline","type":"Snippet"}]},{"id":"refresh","title":"Refresh","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.refresh","type":"InlinedCode"},{"text":" to refresh current page.","type":"SimpleText"}]},{"lang":"groovy","snippet":"search.submit('name')\n\nbrowser.reopen(\"/search\") // page is going to be refreshed\nsearch.searchMessage.should == ''","commentsType":"inline","type":"Snippet"}]},{"id":"restart","title":"Restart","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.restart","type":"InlinedCode"},{"text":" to restart a browser and open last opened url.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.open('/local-storage')\nbrowser.localStorage.setItem('favoriteColor', 'pretty')\n\nbrowser.refresh()\n$('#favorite-color').should == 'pretty'\n\nbrowser.restart()\n$('#favorite-color').should == ''","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: restarting creates a clean instance of a browser. Local storage is going to be reset.","type":"SimpleText"}]}]},{"id":"assert-url","title":"Assert URL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.url","type":"InlinedCode"},{"text":" to assert on or wait for url changes.","type":"SimpleText"}]},{"lang":"txt","snippet":"http://example.com/resource/id?type=full&debug=true#subId","title":"sample url","anchorId":"assert-url-sample-url","type":"Snippet"},{"lang":"groovy","snippet":"browser.url.path.should == '/resource/id'\nbrowser.url.path.should contain('/id')\nbrowser.url.query.should == 'type=full&debug=true'\nbrowser.url.ref.should == 'subId'","title":"asserting url parts","entry":"should expose url parts with should","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"browser.url.should == 'http://example.com/resource/id?type=full&debug=true#subId'\nbrowser.url.should contain('resource/id?type=')","title":"asserting full url","entry":"full part should be optional and default during assertion","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"browser.url.path.waitTo == '/resource/id'\nbrowser.url.query.waitTo == 'type=full&debug=true'\nbrowser.url.ref.waitTo == 'subId'","title":"waiting on url parts","entry":"should expose url parts with wait","bodyOnly":true,"type":"Snippet"}]},{"id":"persist-url","title":"Persist URL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.saveCurrentUrl","type":"InlinedCode"},{"text":" to save url in a local cache and ","type":"SimpleText"},{"code":"browser.openSavedUrl","type":"InlinedCode"},{"text":" to open a page later.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"It can be handy in multipart tests where first part creates an entity and the second part","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"updates the created entity.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.open('/resource-creation')\n\n$('#new').click()\nbrowser.saveCurrentUrl()","type":"Snippet"},{"type":"Paragraph","content":[{"text":"In order to simplify tests development of a second part you can run first part once, save URL,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and iterate on a second part by opening a page using saved URL.","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.openSavedUrl()\n// continue resource related manipulations","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: url is stored in a local cache file and will survive tests restart.","type":"SimpleText"}]}]},{"id":"assert-title","title":"Assert Title","type":"Section","content":[{"lang":"groovy","snippet":"browser.title.should == \"Super Search\"","title":"asserting title","includeRegexp":"title.should","type":"Snippet"},{"lang":"groovy","snippet":"browser.title.waitTo == \"Super Search\"","title":"waiting on title","includeRegexp":"title.waitTo","type":"Snippet"}]},{"id":"back-and-forward","title":"Back And Forward","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.back","type":"InlinedCode"},{"text":" and","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"browser.forward","type":"InlinedCode"},{"text":" to simulate","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"browser history ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Back","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Forward","type":"SimpleText"}]},{"text":" buttons","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.back()\nbrowser.forward()","title":"back and forward","includeRegexp":["back","forward"],"anchorId":"back-and-forward-back-and-forward","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Navigation","pageMeta":{},"dirName":"browser","fileName":"navigation","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Open","id":"open"},{"title":"Reopen","id":"reopen"},{"title":"Refresh","id":"refresh"},{"title":"Restart","id":"restart"},{"title":"Assert URL","id":"assert-url"},{"title":"Persist URL","id":"persist-url"},{"title":"Assert Title","id":"assert-title"},{"title":"Back And Forward","id":"back-and-forward"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.alert","type":"InlinedCode"},{"text":" to manipulate browser alerts.","type":"SimpleText"}]},{"id":"dismiss-alert","title":"Dismiss Alert","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To dismiss alert use:","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.alert.dismiss()","surroundedBy":"dismiss-alert","type":"Snippet"},{"title":"console output","surroundedBy":"dismiss alert","startLine":"dismissing","endLine":".","lines":["\u001B[33m> \u001B[34mdismissing \u001B[36malert\u001B[0m","    \u001B[35mdismissed alert text\u001B[33m: \u001B[0m_____\u001B[0m","                          \u001B[32mhello\u001B[0m","                          \u001B[32malert\u001B[0m","                          \u001B[0m_____\u001B[0m","\u001B[32m. \u001B[34mdismissed \u001B[36malert\u001B[33m (\u001B[32m47ms\u001B[33m)\u001B[0m"],"anchorId":"dismiss-alert-console-output","type":"CliOutput"}]},{"id":"accept-alert","title":"Accept Alert","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To accept alert use:","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.alert.accept()","surroundedBy":"accept-alert","type":"Snippet"},{"title":"console output","surroundedBy":"accept alert","startLine":"accepting","endLine":".","lines":["\u001B[33m> \u001B[34maccepting \u001B[36malert\u001B[0m","    \u001B[35maccepted alert text\u001B[33m: \u001B[0m_______\u001B[0m","                         \u001B[32mhello\u001B[0m","                         \u001B[32mconfirm\u001B[0m","                         \u001B[0m_______\u001B[0m","\u001B[32m. \u001B[34maccepted \u001B[36malert\u001B[33m (\u001B[32m24ms\u001B[33m)\u001B[0m"],"anchorId":"accept-alert-console-output","type":"CliOutput"}]},{"id":"alert-text","title":"Alert Text","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To wait on or validate alert text use:","type":"SimpleText"}]},{"lang":"groovy","snippet":"browser.alert.text.waitTo == \"hello delayed\\nalert\"\nbrowser.alert.accept()","surroundedBy":"wait-alert-text","type":"Snippet"},{"title":"console output","surroundedBy":"wait on alert text","startLine":"waiting","endLine":"accepting","excludeEnd":true,"lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[36mtext \u001B[33mof \u001B[0m\u001B[1mbrowser alert \u001B[0m\u001B[0m\u001B[34mto equal \u001B[0m_____________","                                             \u001B[32mhello delayed","                                             \u001B[32malert","                                             \u001B[0m_____________\u001B[0m","\u001B[32m. \u001B[36mtext \u001B[33mof \u001B[0m\u001B[1mbrowser alert \u001B[0m\u001B[0m\u001B[34mequals \u001B[0m_____________","                               \u001B[32mhello delayed","                               \u001B[32malert","                               \u001B[0m_____________\u001B[33m (\u001B[32m121ms\u001B[33m)\u001B[0m"],"anchorId":"alert-text-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Alerts","pageMeta":{},"dirName":"browser","fileName":"alerts","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Dismiss Alert","id":"dismiss-alert"},{"title":"Accept Alert","id":"accept-alert"},{"title":"Alert Text","id":"alert-text"}]}},{"type":"Page","content":[{"id":"implicit-page-open-logic","title":"Implicit Page Open Logic","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can register a custom callback that will be called implicitly every time a web page is opened.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"One of the typical use cases is to inject cookies or values into a local storage before tests logic begins.","type":"SimpleText"}]}]},{"id":"auto-login","title":"Auto Login","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To register an open handler you need to define ","type":"SimpleText"},{"code":"browserPageNavigationHandlerProvider","type":"InlinedCode"},{"text":" config value.","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8180\"\n\ndef userNameKey = 'userName'\nbrowserPageNavigationHandler = { passedUrl, fullUrl, currentUrl ->\n    if (browser.localStorage.getItem(userNameKey)) {\n        return\n    }\n\n    browser.localStorage.setItem(userNameKey, 'LoggedIn User')\n    browser.reopen(fullUrl)\n}","title":"webtau.cfg.groovy","anchorId":"auto-login-webtau-cfg-groovy","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"page open handlers\") {\n    browser.open('/logged-in-user')\n    $('#welcome').should == 'Welcome LoggedIn User'\n}\n\nscenario(\"page open handlers during re-open\") {\n    browser.localStorage.clear()\n\n    browser.reopen('/logged-in-user')\n    $('#welcome').should == 'Welcome LoggedIn User'\n}","title":"Handler will be called before first assertion","anchorId":"auto-login-handler-will-be-called-before-first-assertion","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: usage of ","type":"SimpleText"},{"code":"localStorage","type":"InlinedCode"},{"text":" is just an example. You can use ","type":"SimpleText"},{"code":"cookies","type":"InlinedCode"},{"text":", call external services using ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" or load","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"credentials from a file system.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Page Open Handlers","pageMeta":{},"dirName":"browser","fileName":"page-open-handlers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Implicit Page Open Logic","id":"implicit-page-open-logic"},{"title":"Auto Login","id":"auto-login"}]}},{"type":"Page","content":[{"id":"finders","title":"Finders","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Finders in WebTau is the initial web element selection that could select one or more elements.","type":"SimpleText"}]}]},{"id":"css-finder","title":"CSS Finder","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"$","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"browser.element","type":"InlinedCode"},{"text":" to select an element by a given ","type":"SimpleText"},{"code":"css","type":"InlinedCode"},{"text":" selector (","type":"SimpleText"},{"url":"https://www.w3schools.com/cssref/css_selectors.asp","isFile":false,"type":"Link","content":[{"text":"Read W3Schools CSS selectors","type":"SimpleText"}]},{"text":" to learn all kind of CSS selection techniques).","type":"SimpleText"}]},{"lang":"groovy","snippet":"def welcomeMessage = $(\"#welcome\")\nwelcomeMessage.should == \"hello\"","title":"example of selecting by id","anchorId":"css-finder-example-of-selecting-by-id","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If more than one element is matched, the first one will be used for actions and assertions.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def menu = $(\"ul li a\")\nmenu.should == \"book\"","title":"example of selecting by nested tags","anchorId":"css-finder-example-of-selecting-by-nested-tags","type":"Snippet"},{"type":"Paragraph","content":[{"text":"While ","type":"SimpleText"},{"code":"click","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"sendKeys","type":"InlinedCode"},{"text":" will always work on a first element only, the matchers can work with a list of things.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def menu = $(\"ul li a\")\nmenu.should == [\"book\", \"orders\", \"help\"]","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: declaring element this way will not trigger element search right away.","type":"SimpleText"}]},{"rightSide":true,"type":"Meta"},{"type":"EmptyBlock"},{"paths":["div"],"xmlAsJson":{"tagName":"div","attributes":[{"name":"id","value":"\"welcome\""}],"children":[{"tagName":"","text":"hello"}]},"type":"Xml"},{"paths":["ul.li[0].a"],"xmlAsJson":{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]},"type":"Xml"},{"paths":["ul.li[0].a","ul.li[1].a","ul.li[2].a"],"xmlAsJson":{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]},"type":"Xml"}]},{"id":"filters","title":"Filters","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use filters to narrow down elements selected by finders.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Filter comes in a way of ","type":"SimpleText"},{"code":"get","type":"InlinedCode"},{"text":" method. Parameter is one of the following","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element number","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element text","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element regexp","type":"SimpleText"}]}]}]},{"lang":"groovy","snippet":"def ordersMenu = $(\"ul li a\").get(2)\nordersMenu.should == \"orders\"","title":"Number","anchorId":"filters-number","type":"Snippet"},{"lang":"groovy","snippet":"def ordersMenu = $(\"ul li a\").get(\"orders\")\nordersMenu.should == \"orders\"","title":"Text","anchorId":"filters-text","type":"Snippet"},{"lang":"groovy","snippet":"def ordersMenu = $(\"ul li a\").get(~/ord/)\nordersMenu.should == \"orders\"","title":"Regexp","anchorId":"filters-regexp","type":"Snippet"},{"paths":["ul.li[1].a"],"meta":{"rightSide":true},"xmlAsJson":{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]},"type":"Xml"}]},{"id":"chaining","title":"Chaining","type":"Section","content":[{"type":"Paragraph","content":[{"text":"After you filtered, you can use finders again to find nested elements.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def ordersMenu = $(\"ul li\").get(2).find(\"a\")\nordersMenu.should == \"orders\"","title":"Nested css selector","anchorId":"chaining-nested-css-selector","type":"Snippet"},{"paths":["ul.li[1].a"],"meta":{"rightSide":true},"xmlAsJson":{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/book\""}],"children":[{"tagName":"","text":"book"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/orders\""}],"children":[{"tagName":"","text":"orders"}]}]},{"tagName":"li","attributes":[],"children":[{"tagName":"a","attributes":[{"name":"href","value":"\"/help\""}],"children":[{"tagName":"","text":"help"}]}]}]},"type":"Xml"}]},{"id":"parent-finder","title":"Parent Finder","type":"Section","content":[{"lang":"groovy","snippet":"def welcomeMessage = $(\"#welcome\")\ndef wrapper = welcomeMessage.parent()\n\nwrapper.attribute(\"class\").should == \"wrapper-class\"","title":"select immediate parent","highlight":[1],"anchorId":"parent-finder-select-immediate-parent","type":"Snippet"},{"rightSide":true,"type":"Meta"},{"type":"EmptyBlock"},{"xmlAsJson":{"tagName":"div","attributes":[{"name":"id","value":"\"welcome-wrapper\""},{"name":"class","value":"\"wrapper-class\""}],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"welcome\""}],"children":[{"tagName":"","text":"hello"}]}]},"paths":[],"type":"Xml"}]},{"id":"parent-finder-by-css","title":"Parent Finder By CSS","type":"Section","content":[{"lang":"groovy","snippet":"def welcomeMessage = $(\"#welcome\")\ndef mainWrapper = welcomeMessage.parent(\".top-section\")\n\nmainWrapper.attribute(\"class\").should == \"top-section\"","title":"select parent by css","highlight":[1],"anchorId":"parent-finder-by-css-select-parent-by-css","type":"Snippet"},{"rightSide":true,"type":"Meta"},{"type":"EmptyBlock"},{"xmlAsJson":{"tagName":"div","attributes":[{"name":"id","value":"\"welcome-top-wrapper\""},{"name":"class","value":"\"top-section\""}],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"welcome-wrapper\""},{"name":"class","value":"\"wrapper-class\""}],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"welcome\""}],"children":[{"tagName":"","text":"hello"}]}]}]},"paths":[],"type":"Xml"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Finders And Filters","pageMeta":{"type":["two-sides"]},"dirName":"browser","fileName":"finders-and-filters","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Finders","id":"finders"},{"title":"CSS Finder","id":"css-finder"},{"title":"Filters","id":"filters"},{"title":"Chaining","id":"chaining"},{"title":"Parent Finder","id":"parent-finder"},{"title":"Parent Finder By CSS","id":"parent-finder-by-css"}]}},{"type":"Page","content":[{"id":"text","title":"Text","type":"Section","content":[{"lang":"groovy","snippet":"def message = $(\"#message\")\nmessage.should == \"Select option\"","title":"exact text","anchorId":"text-exact-text","type":"Snippet"},{"lang":"groovy","snippet":"def message = $(\"#message\")\nmessage.should == ~/option/","title":"regexp text","anchorId":"text-regexp-text","type":"Snippet"},{"lang":"groovy","snippet":"def menu = $(\"#menu ul li\")\nmenu.should == [\"Hello\", \"Text\", \"World\"]","title":"list of text","anchorId":"text-list-of-text","type":"Snippet"},{"lang":"groovy","snippet":"def message = $(\"#message\")\nmessage.should contain(\"option\")","title":"contain text in the first matched element","anchorId":"text-contain-text-in-the-first-matched-element","type":"Snippet"},{"lang":"groovy","snippet":"def menu = $(\"#menu ul li\").all()\nmenu.should contain(\"Text\")","title":"contain exact text in list of elements","anchorId":"text-contain-exact-text-in-list-of-elements","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"all()","type":"InlinedCode"},{"text":" is used at element declaration time to disambiguate between contain text in the first element and in the list of elements.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It is not required when you do an explicit comparison with the list on the right, since then WebTau can deduce the desired outcome.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def menu = $(\"#menu ul li\")\nmenu.should == [\"Hello\", ~/T..t/, \"World\"]","title":"list of text and regexp","anchorId":"text-list-of-text-and-regexp","type":"Snippet"},{"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"message\""}],"children":[{"tagName":"","text":"Select option"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"menu\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"Hello"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"Text"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"World"}]}]}]}]},"paths":[],"type":"Xml"}]},{"id":"numbers","title":"Numbers","type":"Section","content":[{"lang":"groovy","snippet":"def total = $(\"#total\")\ntotal.should == 300.6","title":"exact number","anchorId":"numbers-exact-number","type":"Snippet"},{"lang":"groovy","snippet":"def total = $(\"#total\")\ntotal.shouldBe > 200","title":"greater than","anchorId":"numbers-greater-than","type":"Snippet"},{"lang":"groovy","snippet":"def total = $(\"#total\")\ntotal.shouldBe >= 300","title":"greater than or equal","anchorId":"numbers-greater-than-or-equal","type":"Snippet"},{"lang":"groovy","snippet":"def split = $(\"#split ul li\")\nsplit.should == [100, 28, 172.6]","title":"list of numbers","anchorId":"numbers-list-of-numbers","type":"Snippet"},{"lang":"groovy","snippet":"def split = $(\"#split ul li\")\nsplit.should == [100, lessThan(100), greaterThanOrEqual(150)]","title":"list of exact and greater/less","anchorId":"numbers-list-of-exact-and-greater-less","type":"Snippet"},{"meta":{"rightSide":true},"xmlAsJson":{"tagName":"div","attributes":[],"children":[{"tagName":"div","attributes":[{"name":"id","value":"\"total\""}],"children":[{"tagName":"","text":"300.6"}]},{"tagName":"div","attributes":[{"name":"id","value":"\"split\""}],"children":[{"tagName":"ul","attributes":[],"children":[{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"100"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"28"}]},{"tagName":"li","attributes":[],"children":[{"tagName":"","text":"172.6"}]}]}]}]},"paths":[],"type":"Xml"}]},{"id":"state","title":"State","type":"Section","content":[{"lang":"groovy","snippet":"def button = $(\"#action\")\nbutton.shouldBe disabled\nbutton.shouldNotBe enabled","title":"enabled/disabled","anchorId":"state-enabled-disabled","type":"Snippet"},{"lang":"groovy","snippet":"def feedback = $(\"#feedback\")\nfeedback.shouldBe hidden\nfeedback.shouldNotBe visible","title":"visible/hidden","anchorId":"state-visible-hidden","type":"Snippet"},{"lang":"html","snippet":"<div><button id=\"action\" disabled>Click me</button>\n <div id=\"feedback\" style=\"display: none;\"></div>\n</div>","meta":{"rightSide":true},"type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Browser","pageTitle":"Matchers","pageMeta":{"type":["two-sides"]},"dirName":"browser","fileName":"matchers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Text","id":"text"},{"title":"Numbers","id":"numbers"},{"title":"State","id":"state"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"server","type":"InlinedCode"},{"text":" module lets you create and control static, fake and proxy servers:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Static servers to quickly host HTML, JSON, and similar content","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fake servers to control response based request","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Proxy servers to simulate outages and record interactions for failures investigation","type":"SimpleText"}]}]}]},{"lang":"groovy","snippet":"def myServer = server.serve(\"my-server\", \"data/staticcontent\")","title":"static server creation example","surroundedBy":"static-server-create","anchorId":"static-server-creation-example","type":"Snippet"},{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") { request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\n        .get(\"/bye/:name\") { request -> server.response([message: \"bye ${request.param(\"name\")}\"]) }","title":"fake server creation example","surroundedBy":"router-example","anchorId":"fake-server-creation-example","type":"Snippet"},{"lang":"groovy","snippet":"def proxyServer = server.proxy(\"test-proxy-server\", targetServer.baseUrl)","title":"proxy server creation example","surroundedBy":"proxy-server-creation","anchorId":"proxy-server-creation-example","type":"Snippet"},{"type":"Paragraph","content":[{"text":"You can apply overrides to any created server. You can also put servers into a \"bad\" state.","type":"SimpleText"}]},{"lang":"groovy","snippet":"proxyServer.markUnresponsive()","title":"unresponsive server","surroundedBy":"mark-unresponsive-example","anchorId":"unresponsive-server","type":"Snippet"},{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") {request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\nmyServer.addOverride(router)","title":"content override","surroundedBy":"override-example","anchorId":"content-override","type":"Snippet"}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Servers","pageTitle":"Introduction","pageMeta":{},"dirName":"servers","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"serve-static-content","title":"Serve Static Content","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.serve","type":"InlinedCode"},{"text":" to start a server on random port","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"that will host static content from the specified directory.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def myServer = server.serve(\"my-server\", \"data/staticcontent\")","title":"create and start server","surroundedBy":"static-server-create","anchorId":"serve-static-content-create-and-start-server","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"WebTauServer myServer = server.serve(\"my-server\", \"src/test/resources/staticcontent\");","title":"create and start server","surroundedBy":"static-server-create","anchorId":"serve-static-content-create-and-start-server-2","type":"Snippet"}]}],"type":"Tabs"},{"lang":"json","snippet":"{\n  \"id\": \"user-one\",\n  \"type\": \"person\"\n}","autoTitle":true,"title":"data/staticcontent/data.json","anchorId":"serve-static-content-data-staticcontent-data-json","type":"Snippet"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"${myServer.baseUrl}/data.json\") {\n    body.type == \"person\"\n}","title":"testing response from a static server","surroundedBy":"static-server-json","anchorId":"serve-static-content-testing-response-from-a-static-server","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(myServer.getBaseUrl() + \"/data.json\", ((header, body) -> {\n    body.get(\"type\").should(equal(\"person\"));\n}));","title":"testing response from a static server","surroundedBy":"static-server-json","anchorId":"serve-static-content-testing-response-from-a-static-server-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"set-server-as-base-url","title":"Set Server As Base Url","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"setAsBaseUrl","type":"InlinedCode"},{"text":" to use the server's host and port as base url","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"myServer.setAsBaseUrl()","title":"server as base url","surroundedBy":"set-base-url-example","anchorId":"set-server-as-base-url-server-as-base-url","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"myServer.setAsBaseUrl();","title":"server as base url","surroundedBy":"set-base-url-example","anchorId":"set-server-as-base-url-server-as-base-url-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"host-html-for-browser","title":"Host Html For Browser","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use static server to host html files and then open them using a browser.","type":"SimpleText"}]},{"lang":"html","snippet":"<body>\n<p>hello</p>\n</body>","autoTitle":true,"title":"data/staticcontent/hello.html","anchorId":"host-html-for-browser-data-staticcontent-hello-html","type":"Snippet"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/hello.html\") {\n    body.should == expectedHtml\n}","title":"open browser using static contet","surroundedBy":"static-server-html","anchorId":"host-html-for-browser-open-browser-using-static-contet","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"browser.open(\"/hello.html\");\n$(\"p\").should(equal(\"hello\"));","title":"open browser using static contet","surroundedBy":"browser-example","anchorId":"host-html-for-browser-open-browser-using-static-contet-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"override-response","title":"Override Response","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"addOverride","type":"InlinedCode"},{"text":" to modify response of a proxied server","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") {request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\nmyServer.addOverride(router)","title":"content override","surroundedBy":"override-example","anchorId":"override-response-content-override","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"WebTauRouter router = server.router()\n        .get(\"/hello/:name\", (request) -> server.response(map(\"message\", \"hello \" + request.param(\"name\"))));\nmyServer.addOverride(router);","title":"content override","surroundedBy":"override-example","anchorId":"override-response-content-override-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"server-slowdown","title":"Server Slowdown","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markUnresponsive","type":"InlinedCode"},{"text":" to mark server as unresponsive","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"myServer.markUnresponsive()\n\ncode {\n    http.get(\"/hello.html\")\n} should throwException(~/request timed out/)","title":"mark as unresponsive","surroundedBy":"mark-unresponsive","anchorId":"server-slowdown-mark-as-unresponsive","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"myServer.markUnresponsive();\n\ncode(() -> {\n    http.get(\"/hello.html\");\n}).should(throwException(Pattern.compile(\"request timed out\")));","title":"mark as unresponsive","surroundedBy":"mark-unresponsive","anchorId":"server-slowdown-mark-as-unresponsive-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"server-break","title":"Server Break","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" to mark server as broken","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"myServer.markBroken()\n\nhttp.get(\"/hello.html\") {\n    statusCode.should == 500\n    body.should == null\n}","title":"mark as broken","surroundedBy":"mark-broken","anchorId":"server-break-mark-as-broken","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"myServer.markBroken();\n\nhttp.get(\"/hello.html\", (header, body) -> {\n    header.statusCode.should(equal(500));\n});","title":"mark as broken","surroundedBy":"mark-broken","anchorId":"server-break-mark-as-broken-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"server-fix","title":"Server Fix","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fix","type":"InlinedCode"},{"text":" to remove broken and/or slowdown state","type":"SimpleText"}]},{"lang":"groovy","snippet":"myServer.fix()","title":"fix server","surroundedBy":"mark-fix","anchorId":"server-fix-fix-server","type":"Snippet"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Servers","pageTitle":"Static Server","pageMeta":{},"dirName":"servers","fileName":"static-server","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Serve Static Content","id":"serve-static-content"},{"title":"Set Server As Base Url","id":"set-server-as-base-url"},{"title":"Host Html For Browser","id":"host-html-for-browser"},{"title":"Override Response","id":"override-response"},{"title":"Server Slowdown","id":"server-slowdown"},{"title":"Server Break","id":"server-break"},{"title":"Server Fix","id":"server-fix"}]}},{"type":"Page","content":[{"id":"proxy-servers-creation","title":"Proxy Servers Creation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.proxy","type":"InlinedCode"},{"text":" to create a proxy server by specifying target url","type":"SimpleText"}]},{"lang":"groovy","snippet":"def proxyServer = server.proxy(\"test-proxy-server\", targetServer.baseUrl)","title":"proxy server creation example","surroundedBy":"proxy-server-creation","anchorId":"proxy-servers-creation-proxy-server-creation-example","type":"Snippet"}]},{"id":"override-calls","title":"Override Calls","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"addOverride","type":"InlinedCode"},{"text":" to modify response of a proxied server","type":"SimpleText"}]},{"lang":"groovy","snippet":"def router = server.router(\"optional-router-id\")\nrouter.get(\"/another/{id}\", (request) -> server.response([anotherId: request.param(\"id\")]))\n\nproxyServer.addOverride(router)","title":"call override","surroundedBy":"proxy-add-override","anchorId":"override-calls-call-override","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: override will not call proxied server, and will return a provided response","type":"SimpleText"}]}]},{"id":"preserve-original-call","title":"Preserve Original Call","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"url":"/webtau/HTTP/introduction","isFile":false,"type":"Link","content":[{"text":"HTTP Module","type":"SimpleText"}]},{"text":" to issue a call to a destination server with a possibility to change a request and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"provide a modified response.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Example of a proxy server that makes original call, but returns an error","type":"SimpleText"}]},{"lang":"groovy","snippet":"def router = server.router().post(\"/hello\", { request ->\n    def message = http.post(http.concatUrl(proxyServer.urlToProxy, request.path),\n            http.header(request.header), request.contentAsMap) {\n        return body.message\n    }\n\n    // optional logic with original response\n\n    return server.statusCode(500)\n})\n\nproxyServer.addOverride(router)","title":"original call and faked error response","surroundedBy":"override-with-original-call","excludeRegexp":"capturedMessages","anchorId":"preserve-original-call-original-call-and-faked-error-response","type":"Snippet"}]},{"id":"server-slowdown","title":"Server Slowdown","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markUnresponsive","type":"InlinedCode"},{"text":" to mark server as unresponsive","type":"SimpleText"}]},{"lang":"groovy","snippet":"proxyServer.markUnresponsive()","title":"mark as unresponsive","surroundedBy":"mark-unresponsive","anchorId":"server-slowdown-mark-as-unresponsive","type":"Snippet"},{"lang":"groovy","snippet":"code {\n    http.get(\"${proxyServer.baseUrl}/another/hello\") {\n        body.should == [anotherId: \"hello\"]\n    }\n} should throwException(~/request timed out/)","title":"unresponsive timeout","surroundedBy":"unresponsive-time-out-throw","anchorId":"server-slowdown-unresponsive-timeout","type":"Snippet"}]},{"id":"server-break","title":"Server Break","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" to mark server as broken","type":"SimpleText"}]},{"lang":"groovy","snippet":"proxyServer.markBroken()","title":"mark as broken","surroundedBy":"mark-broken","anchorId":"server-break-mark-as-broken","type":"Snippet"},{"lang":"groovy","snippet":"http.get(\"${proxyServer.baseUrl}/hello.html\") {\n    statusCode.should == 500\n    body.should == null\n}","title":"broken server response","surroundedBy":"mark-broken-response","anchorId":"server-break-broken-server-response","type":"Snippet"}]},{"id":"server-fix","title":"Server Fix","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fix","type":"InlinedCode"},{"text":" to remove broken and/or slowdown state","type":"SimpleText"}]},{"lang":"groovy","snippet":"proxyServer.fix()","title":"fix server","surroundedBy":"mark-fix","anchorId":"server-fix-fix-server","type":"Snippet"}]},{"id":"max-threads","title":"Max Threads","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"serverProxyMaxThreads","type":"InlinedCode"},{"text":" to change max number of threads available for proxy server","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Servers","pageTitle":"Proxy Server","pageMeta":{},"dirName":"servers","fileName":"proxy-server","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Proxy Servers Creation","id":"proxy-servers-creation"},{"title":"Override Calls","id":"override-calls"},{"title":"Preserve Original Call","id":"preserve-original-call"},{"title":"Server Slowdown","id":"server-slowdown"},{"title":"Server Break","id":"server-break"},{"title":"Server Fix","id":"server-fix"},{"title":"Max Threads","id":"max-threads"}]}},{"type":"Page","content":[{"id":"router-creation","title":"Router Creation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.router","type":"InlinedCode"},{"text":" to defined end points responses.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") { request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\n        .get(\"/bye/:name\") { request -> server.response([message: \"bye ${request.param(\"name\")}\"]) }","title":"fake server creation example","surroundedBy":"router-example","anchorId":"router-creation-fake-server-creation-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"WebTauRouter router = server.router()\n        .get(\"/hello/:name\", (request) -> server.response(map(\"message\", \"hello \" + request.param(\"name\"))))\n        .get(\"/bye/:name\", (request) -> server.response(map(\"message\", \"bye \" + request.param(\"name\"))));","title":"fake server creation example","surroundedBy":"router-example","anchorId":"router-creation-fake-server-creation-example-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"fake-server-creation","title":"Fake Server Creation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.fake","type":"InlinedCode"},{"text":" and a router to create a server with controlled responses","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def myServer = server.fake(\"my-rest-server\", router)\n\nhttp.get(\"${myServer.baseUrl}/hello/person\") {\n    message.should == \"hello person\"\n}\n\nhttp.get(\"${myServer.baseUrl}/bye/person\") {\n    message.should == \"bye person\"\n}","title":"fake server creation example","surroundedBy":["server-create-example","fake-response-check"],"surroundedBySeparator":"","anchorId":"fake-server-creation-fake-server-creation-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"myServer = server.fake(\"my-rest-server\", router);\n\nhttp.get(myServer.getBaseUrl() + \"/hello/person\", ((header, body) -> {\n    body.get(\"message\").should(equal(\"hello person\"));\n}));\n\nhttp.get(myServer.getBaseUrl() + \"/bye/person?politeFactor=2\", ((header, body) -> {\n    body.get(\"message\").should(equal(\"bye person\"));\n}));","title":"fake server creation example","surroundedBy":["server-create-example","fake-response-check"],"surroundedBySeparator":"","anchorId":"fake-server-creation-fake-server-creation-example-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Servers","pageTitle":"Fake Server","pageMeta":{},"dirName":"servers","fileName":"fake-server","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Router Creation","id":"router-creation"},{"title":"Fake Server Creation","id":"fake-server-creation"}]}},{"type":"Page","content":[{"style":"api","id":"router-creation","title":"Router Creation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.router","type":"InlinedCode"},{"text":" to defined or override end-point responses for servers.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def router = server.router()\n        .get(\"/hello/:name\") { request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\n        .get(\"/bye/:name\") { request -> server.response([message: \"bye ${request.param(\"name\")}\"]) }","title":"router creation example","surroundedBy":"router-example","anchorId":"router-creation-router-creation-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"WebTauRouter router = server.router()\n        .get(\"/hello/:name\", (request) -> server.response(map(\"message\", \"hello \" + request.param(\"name\"))))\n        .get(\"/bye/:name\", (request) -> server.response(map(\"message\", \"bye \" + request.param(\"name\"))));","title":"router creation example","surroundedBy":"router-example","anchorId":"router-creation-router-creation-example-2","type":"Snippet"}]}],"type":"Tabs"}]},{"style":"api","id":"request-properties","title":"Request Properties","type":"Section","content":[{"style":"api","id":"request-properties-path-parameters","level":2,"title":"Path Parameters","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"request.param","type":"InlinedCode"},{"text":" to access a path parameter value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":".get(\"/hello/:name\") { request ->\n    server.response([message: \"hello \" +\n            request.param(\"name\")])\n}","title":"path param access","surroundedBy":"path-param-example","highlight":[2],"anchorId":"request-properties-path-parameters-path-param-access","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":".get(\"/hello/:name\", (request) ->\n        server.response(map(\"message\", \"hello \" +\n                request.param(\"name\"))))","title":"path param access","surroundedBy":"path-param-example","highlight":[2],"anchorId":"request-properties-path-parameters-path-param-access-2","type":"Snippet"}]}],"type":"Tabs"},{"style":"api","id":"request-properties-query-parameters","level":2,"title":"Query Parameters","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"request.queryParam","type":"InlinedCode"},{"text":" to access a path parameter value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":".get(\"/bye/:name\") { request ->\n    server.response([message: \"bye \" +\n            request.queryParam(\"title\") +\n            \" \" + request.param(\"name\")])\n}","title":"path param access","surroundedBy":"query-param-example","highlight":[2],"anchorId":"request-properties-query-parameters-path-param-access","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":".get(\"/bye/:name\", (request) ->\n        server.response(map(\"message\", \"bye \" +\n                request.queryParam(\"title\") +\n                \" \" + request.param(\"name\"))));","title":"path param access","surroundedBy":"query-param-example","highlight":[2],"anchorId":"request-properties-query-parameters-path-param-access-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Servers","pageTitle":"Server Router","pageMeta":{"identifier":["{validationPath: \"scenarios/server/router.groovy\"}"]},"dirName":"servers","fileName":"server-router","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Router Creation","id":"router-creation","style":"api"},{"title":"Request Properties","id":"request-properties","style":"api"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau provides ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":" module to run and validate command line tools.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Combine it with other modules to create powerful tests: use ","type":"SimpleText"},{"code":"cli","type":"InlinedCode"},{"text":" to run a tool, and","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"http","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"graphql","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser","type":"InlinedCode"},{"text":", or ","type":"SimpleText"},{"code":"db","type":"InlinedCode"},{"text":" to validate the outcome.","type":"SimpleText"}]},{"lang":"groovy","snippet":"scenario(\"example of ls run\") {\n    cli.run('ls') {\n        output.should contain('scripts')\n    }\n}","title":"basicLs.groovy","excludeRegexp":["package","import","doc.capture"],"anchorId":"basicls-groovy","type":"Snippet"},{"command":"webtau basicLs.groovy","paramsToHighlight":[],"type":"CliCommand"},{"lang":"txt","snippet":"console-output-capture\ndata\ndbproviders\ndoc-artifacts\nformHandlers\nfs-new-dir\ngenerated\nlisteners\npages\npersonas\nscenarios\nschemas\nscripts\nuse-cases.csv\nwebtau.graphql-report.json","highlightPath":"doc-artifacts/ls-run/out.matched.txt","highlight":[12],"type":"Snippet"}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Cli","pageTitle":"Introduction","pageMeta":{},"dirName":"cli","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau can run commands in ","type":"SimpleText"},{"code":"foreground","type":"InlinedCode"},{"text":" and in ","type":"SimpleText"},{"code":"background","type":"InlinedCode"},{"text":". When command is ran in ","type":"SimpleText"},{"code":"foreground","type":"InlinedCode"},{"text":" WebTau will","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"wait for the command to finish.","type":"SimpleText"}]},{"id":"run","title":"Run","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To run a command use ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" with a single string parameter that includes a command and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"all its arguments:","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.run('echo hello world')","title":"run command","anchorId":"run-run-command","type":"Snippet"}]},{"id":"run-with-validation","title":"Run With Validation","type":"Section","content":[{"lang":"groovy","snippet":"cli.run('echo hello world') {\n    output.should contain('hello')\n    output.should contain('world')\n}","title":"output validation","anchorId":"run-with-validation-output-validation","type":"Snippet"},{"lang":"groovy","snippet":"cli.run('scripts/error-output') {\n    error.should == 'error B892T'\n}","title":"error validation","anchorId":"run-with-validation-error-validation","type":"Snippet"},{"lang":"groovy","snippet":"cli.run('scripts/exit-code 8') {\n    exitCode.should == 8\n    exitCode.shouldNot == 0\n}","title":"exit code validation","anchorId":"run-with-validation-exit-code-validation","type":"Snippet"}]},{"id":"implicit-exit-code-validation","title":"Implicit Exit Code Validation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau performs implicit exit code validation and adds ","type":"SimpleText"},{"code":"exitCode","type":"InlinedCode"},{"text":" equals zero when","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"you don't specify explicit ","type":"SimpleText"},{"code":"exitCode","type":"InlinedCode"},{"text":" validation.","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.run('echo hello world')","title":"implicit exit validation happens here","anchorId":"implicit-exit-code-validation-implicit-exit-validation-happens-here","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Example above is equivalent to","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.run('echo hello world') {\n    exitCode.should == 0\n}","title":"WebTau performs exit code check if you don't write explicit validation","anchorId":"implicit-exit-code-validation-webtau-performs-exit-code-check-if-you-dont-write-explicit-validation","type":"Snippet"}]},{"id":"run-result","title":"Run Result","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use the result of ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" if you need to process the output of the command.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def result = cli.run('scripts/my-script') {\n    exitCode.shouldNot == 0\n}\n\nprintln result.output\nprintln result.error\nif (result.exitCode == 1) {\n    // ...\n}","title":"using run result","excludeRegexp":"hide-docs","anchorId":"run-result-using-run-result","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Warning: Perform validation inside validation block so WebTau can track what was checked.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def result = cli.run('scripts/generate-id')\ndef id = result.extractFromOutputByRegexp(\"id=(\\\\d+)\")","title":"extract from output by regexp","startLine":"example","endLine":"example","excludeStartEnd":true,"anchorId":"run-result-extract-from-output-by-regexp","type":"Snippet"},{"lang":"groovy","snippet":"def result = cli.run('scripts/generate-id')\ndef id = result.extractFromErrorByRegexp(\"id=(\\\\d+)\")","title":"extract from error by regexp","startLine":"example","endLine":"example","excludeStartEnd":true,"anchorId":"run-result-extract-from-error-by-regexp","type":"Snippet"}]},{"id":"working-dir","title":"Working Dir","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.workingDir","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" to set a working dir:","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.run('./listing', cli.workingDir('scripts')) {\n    output.should contain('listing files')\n    output.should contain('sleeps')\n}","title":"set working dir","anchorId":"working-dir-set-working-dir","type":"Snippet"}]},{"id":"environment-variables","title":"Environment Variables","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.env","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" to set the environment variables:","type":"SimpleText"}]},{"lang":"","snippet":"#!/bin/bash\necho \"hello $MY_VAR\"","autoTitle":true,"title":"scripts/hello-env-var","anchorId":"environment-variables-scripts-hello-env-var","type":"Snippet"},{"lang":"groovy","snippet":"cli.run('scripts/hello-env-var', cli.env([MY_VAR: 'webtau'])) {\n    output.should == 'hello webtau'\n}","title":"set environment variable","anchorId":"environment-variables-set-environment-variable","type":"Snippet"}]},{"id":"common-environment-variables","title":"Common Environment Variables","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Set ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value with environment values that needs to be passed to each ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliEnv {\n    MY_VAR = \"webtau\"\n    PREFIX_VAR = \"__\"\n}","title":"webtau.cfg.groovy","surroundedBy":"default-my-var","anchorId":"common-environment-variables-webtau-cfg-groovy","type":"Snippet"},{"lang":"groovy","snippet":"cli.run('scripts/hello-env-var') {\n    output.should == 'hello webtau'\n}","title":"use environment variable from config","anchorId":"common-environment-variables-use-environment-variable-from-config","type":"Snippet"}]},{"id":"chain-cli-run-config","title":"Chain Cli Run Config","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Combine configs by using ","type":"SimpleText"},{"code":"cli.env(...).workingDir(...)","type":"InlinedCode"},{"text":" in any order to set both:","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.run('./hello-env-var',\n        cli.workingDir('scripts').env([MY_VAR: 'webtau'])) {\n    output.should == 'hello webtau'\n}","title":"set environment variable and working dir","anchorId":"chain-cli-run-config-set-environment-variable-and-working-dir","type":"Snippet"}]},{"id":"path","title":"Path","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To specify ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":" to use for CLI commands lookup use","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliPath = ['scripts/more']","title":"webtau.cfg.groovy","anchorId":"path-webtau-cfg-groovy","type":"Snippet"}]},{"id":"timeout","title":"Timeout","type":"Section","content":[{"type":"Paragraph","content":[{"code":"cli.run","type":"InlinedCode"},{"text":" command fails if it doesn't complete in 30 seconds.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To override default timeout use ","type":"SimpleText"},{"code":"cliTimeout","type":"InlinedCode"},{"text":" config value:","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliTimeout = 400","title":"webtau.cfg.groovy","anchorId":"timeout-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To override timeout for a specific ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" use","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.run(\"scripts/sleeps\", cli.timeout(300))","title":"local override","includeRegexp":"cli.timeout","anchorId":"timeout-local-override","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: Timeout value is specified in milliseconds","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Cli","pageTitle":"Foreground Command","pageMeta":{},"dirName":"cli","fileName":"foreground-command","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Run","id":"run"},{"title":"Run With Validation","id":"run-with-validation"},{"title":"Implicit Exit Code Validation","id":"implicit-exit-code-validation"},{"title":"Run Result","id":"run-result"},{"title":"Working Dir","id":"working-dir"},{"title":"Environment Variables","id":"environment-variables"},{"title":"Common Environment Variables","id":"common-environment-variables"},{"title":"Chain Cli Run Config","id":"chain-cli-run-config"},{"title":"Path","id":"path"},{"title":"Timeout","id":"timeout"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau can run commands in ","type":"SimpleText"},{"code":"foreground","type":"InlinedCode"},{"text":" and in ","type":"SimpleText"},{"code":"background","type":"InlinedCode"},{"text":". When command is ran in ","type":"SimpleText"},{"code":"background","type":"InlinedCode"},{"text":" WebTau","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"will continue execution, leaving command to run its course.","type":"SimpleText"}]},{"id":"run-in-background","title":"Run In Background","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To run a command in a background use ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" with a single string parameter that includes a command and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"all its arguments:","type":"SimpleText"}]},{"lang":"groovy","snippet":"cli.runInBackground('scripts/sleeps')\nprintln \"process above may still be running\"","title":"run command in background","anchorId":"run-in-background-run-command-in-background","type":"Snippet"}]},{"id":"stop-command","title":"Stop Command","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".stop","type":"InlinedCode"},{"text":" to explicitly terminate the running background command","type":"SimpleText"}]},{"lang":"groovy","snippet":"def command = cli.runInBackground('scripts/sleeps')\nprintln \"some commands that assume running process\"\n\ncommand.stop()","title":"command termination","anchorId":"stop-command-command-termination","type":"Snippet"}]},{"id":"interacting-with-command","title":"Interacting With Command","type":"Section","content":[{"type":"Paragraph","content":[{"text":"We are going to test a \"hello world\" script that asks you for a name and greet you:","type":"SimpleText"}]},{"lang":"","snippet":"#!/bin/bash\necho \"enter your name\"\nread name\necho \"hello $name\"","title":"scripts/hello-world","anchorId":"interacting-with-command-scripts-hello-world","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".send","type":"InlinedCode"},{"text":" to send input to a running command. Use ","type":"SimpleText"},{"code":".output.waitTo","type":"InlinedCode"},{"text":" to wait for command to rich a certain state:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def helloWorld = cli.runInBackground(\"scripts/hello-world\")\nhelloWorld.output.waitTo contain(\"enter your name\")\n\nhelloWorld.send(\"webtau\\n\")\nhelloWorld.output.waitTo contain(\"hello webtau\")\n\nhelloWorld.stop()","title":"wait and send input","anchorId":"interacting-with-command-wait-and-send-input","type":"Snippet"},{"type":"Paragraph","content":[{"text":"You can use ","type":"SimpleText"},{"code":"<<","type":"InlinedCode"},{"text":" instead of ","type":"SimpleText"},{"code":".send","type":"InlinedCode"},{"text":" for extra syntax sugar:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def helloWorld = cli.runInBackground(\"scripts/hello-world\")\nhelloWorld.output.waitTo contain(\"enter your name\")\n\nhelloWorld << \"webtau\\n\"\nhelloWorld.output.waitTo contain(\"hello webtau\")\n\nhelloWorld.stop()","title":"use << as .send","anchorId":"interacting-with-command-use-as-send","type":"Snippet"}]},{"id":"wait-timeout","title":"Wait Timeout","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" waits 5 seconds for a condition to become true.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This value can be changed either globally by using ","type":"SimpleText"},{"code":"waitTimeout","type":"InlinedCode"},{"text":" config value","type":"SimpleText"}]},{"lang":"groovy","snippet":"waitTimeout = 20000\n","lineNumber":"","title":"webtau.cfg.groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To override wait timeout locally, use","type":"SimpleText"}]},{"lang":"groovy","snippet":"command.output.waitTo(contain(\"line two\"), 20_000)","title":"local timeout","surroundedBy":"local-timeout","anchorId":"wait-timeout-local-timeout","type":"Snippet"}]},{"id":"working-dir","title":"Working Dir","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.workingDir","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" to set a working dir:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def command = cli.runInBackground('./listing', cli.workingDir('scripts'))\ncommand.output.waitTo contain('listing files')\ncommand.output.waitTo contain('sleeps')\ncommand.stop()","title":"set working dir","anchorId":"working-dir-set-working-dir","type":"Snippet"}]},{"id":"environment-variables","title":"Environment Variables","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.env","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" to set the environment variables:","type":"SimpleText"}]},{"lang":"","snippet":"#!/bin/bash\necho \"hello $MY_VAR\"","autoTitle":true,"title":"scripts/hello-env-var","anchorId":"environment-variables-scripts-hello-env-var","type":"Snippet"},{"lang":"groovy","snippet":"def command = cli.runInBackground('scripts/hello-env-var', cli.env([MY_VAR: 'webtau']))\ncommand.output.waitTo contain('hello webtau')\ncommand.stop()","title":"set environment variable","anchorId":"environment-variables-set-environment-variable","type":"Snippet"}]},{"id":"common-environment-variables","title":"Common Environment Variables","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Set ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value with environment values that needs to be passed to each ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliEnv {\n    MY_VAR = \"webtau\"\n    PREFIX_VAR = \"__\"\n}","title":"webtau.cfg.groovy","surroundedBy":"default-my-var","anchorId":"common-environment-variables-webtau-cfg-groovy","type":"Snippet"},{"lang":"groovy","snippet":"def command = cli.runInBackground('scripts/hello-env-var')\ncommand.output.waitTo contain('hello webtau')\ncommand.stop()","title":"use environment variable from config","anchorId":"common-environment-variables-use-environment-variable-from-config","type":"Snippet"}]},{"id":"chain-cli-run-config","title":"Chain Cli Run Config","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Combine configs by using ","type":"SimpleText"},{"code":"cli.env(...).workingDir(...)","type":"InlinedCode"},{"text":" in any order to set both:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def command = cli.runInBackground('./hello-env-var',\n        cli.workingDir('scripts').env([MY_VAR: 'webtau']))\ncommand.output.waitTo contain('hello webtau')\ncommand.stop()","title":"set environment variable and working dir","anchorId":"chain-cli-run-config-set-environment-variable-and-working-dir","type":"Snippet"}]},{"id":"path","title":"Path","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To specify ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":" to use for CLI commands lookup use","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliPath = ['scripts/more']","title":"webtau.cfg.groovy","anchorId":"path-webtau-cfg-groovy","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Cli","pageTitle":"Background Command","pageMeta":{},"dirName":"cli","fileName":"background-command","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Run In Background","id":"run-in-background"},{"title":"Stop Command","id":"stop-command"},{"title":"Interacting With Command","id":"interacting-with-command"},{"title":"Wait Timeout","id":"wait-timeout"},{"title":"Working Dir","id":"working-dir"},{"title":"Environment Variables","id":"environment-variables"},{"title":"Common Environment Variables","id":"common-environment-variables"},{"title":"Chain Cli Run Config","id":"chain-cli-run-config"},{"title":"Path","id":"path"}]}},{"type":"Page","content":[{"id":"persona-context","title":"Persona Context","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"persona","type":"InlinedCode"},{"text":" defines a user of your system with a context associated with that user.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Example of context: authentication credentials, browser, custom config parameters.","type":"SimpleText"}]},{"lang":"groovy","snippet":"scenario('context example') {\n    Alice {\n       step(\"do something in context of Alice\") {\n           customAction()\n       }\n    }\n\n    Bob {\n        step(\"do same thing in context of Bob\") {\n            customAction()\n        }\n    }\n}","title":"context example","surroundedBy":"context-example-snippet","anchorId":"persona-context-context-example","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Alice and Bob execute the same action. Within the action we can access who","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is the current persona and what is the ","type":"SimpleText"},{"code":"payload","type":"InlinedCode"},{"text":" of the persona.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def customAction() {\n    def id = Persona.currentPersona.id\n    def authId = Persona.currentPersona.payload.authId // from persona payload\n    def email = cfg.email // from persona associated config override\n    step(\"custom action\", [authId: authId, email: email]) {\n        println \"authenticating $id\"\n    }\n}","title":"same action performed by two personas","entry":"customAction","commentsType":"inline","type":"Snippet"}]},{"id":"context-definition","title":"Context Definition","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Persona is defined with ","type":"SimpleText"},{"code":"persona","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Persona can be created in place or in centralized place","type":"SimpleText"}]},{"lang":"groovy","snippet":"package personas\n\nimport static org.testingisdocumenting.webtau.WebTauCore.persona\n\nclass Personas {\n    public static def Alice = persona(\"Alice\", [authId: \"alice-user-id\"])\n    public static def Bob = persona(\"Bob\", [authId: \"bob-user-id\"])\n}","title":"centralized persona definition with payload","anchorId":"context-definition-centralized-persona-definition-with-payload","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Per persona config section let you define or override any config value, including","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"timeouts, browser preferences, etc","type":"SimpleText"}]},{"lang":"groovy","snippet":"email = \"default@email.send\"\ncustomValue = 100\n\npersonas {\n    Alice {\n        email = \"alice@email.send\"\n        customValue = 105\n    }\n\n    Bob {\n        email = \"bob@email.send\"\n        customValue = 110\n    }\n}","title":"persona specific config","startLine":"personas-cfg","endLine":"personas-cfg","excludeStartEnd":true,"anchorId":"context-definition-persona-specific-config","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Snippet from above example to show how to access config values and payload","type":"SimpleText"}]},{"lang":"groovy","snippet":"def authId = Persona.currentPersona.payload.authId // from persona payload\ndef email = cfg.email // from persona associated config override","title":"access payload and config example","entry":"customAction","commentsType":"inline","includeRegexp":["def authId","def email"],"type":"Snippet"}]},{"id":"report","title":"Report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Report captures what step was performed by what persona","type":"SimpleText"}]},{"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/persona-concept-steps.png","timestamp":1692272674186,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Persona","pageTitle":"Introduction","pageMeta":{},"dirName":"persona","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Persona Context","id":"persona-context"},{"title":"Context Definition","id":"context-definition"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"id":"authorization","title":"Authorization","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In ","type":"SimpleText"},{"url":"/webtau/HTTP/header#implicit-header","isFile":false,"type":"Link","content":[{"text":"http headers","type":"SimpleText"}]},{"text":" section we defined how to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"an implicit header provider to enable authentication/authorization","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest.headers\n\nimport scenarios.rest.headers.auth.Auth\n\nurl = \"http://localhost:8080\"\n\nhttpHeaderProvider = Auth.&authHeader","title":"webtau.cfg.groovy","anchorId":"authorization-webtau-cfg-groovy","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.rest.headers.auth\n\nimport org.testingisdocumenting.webtau.http.HttpHeader\n\nclass Auth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        def token = generateToken()\n        return original.with([Authorization: \"Bearer $token\"])\n    }\n\n    private static String generateToken() {\n        return \"jwt-token\"\n    }\n}","title":"scenarios/rest/headers/auth/Auth.groovy","anchorId":"authorization-scenarios-rest-headers-auth-auth-groovy","type":"Snippet"}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"In case of JUnit like runners, WebTau uses ","type":"SimpleText"},{"url":"https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html","isFile":false,"type":"Link","content":[{"text":"Service Loaders","type":"SimpleText"}]},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to locate header providers","type":"SimpleText"}]},{"lang":"WebTauHttpConfiguration","snippet":"com.example.tests.junit5.config.HttpAuthHeaderProvider","autoTitle":true,"title":"src/test/resources/META-INF/services/org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration","anchorId":"authorization-src-test-resources-meta-inf-services-org-testingisdocumenting-webtau-http-config-webtauhttpconfiguration","type":"Snippet"},{"lang":"java","snippet":"package com.example.tests.junit5.config;\n\nimport org.testingisdocumenting.webtau.http.HttpHeader;\nimport org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class HttpAuthHeaderProvider implements WebTauHttpConfiguration {\n    @Override\n    public HttpHeader fullHeader(String fullUrl, String passedUrl, HttpHeader given) {\n        String token = generateToken();\n        return given.with(\"Authorization\", \"Bearer \" + token);\n    }\n\n    private String generateToken() {\n        return \"jwt-token\";\n    }\n}","autoTitle":true,"title":"src/test/java/com/example/tests/junit5/config/HttpAuthHeaderProvider.java","anchorId":"authorization-src-test-java-com-example-tests-junit5-config-httpauthheaderprovider-java","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"persona-authorization","title":"Persona Authorization","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Let's define authorization based on persona context.","type":"SimpleText"},{"type":"SoftLineBreak"},{"url":"/webtau/persona/introduction#context-definition","isFile":false,"type":"Link","content":[{"text":"Previously","type":"SimpleText"}]},{"text":" we defined two personas","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package personas\n\nimport static org.testingisdocumenting.webtau.WebTauCore.persona\n\nclass Personas {\n    public static def Alice = persona(\"Alice\", [authId: \"alice-user-id\"])\n    public static def Bob = persona(\"Bob\", [authId: \"bob-user-id\"])\n}","title":"Alice and Bob","anchorId":"persona-authorization-alice-and-bob","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.testingisdocumenting.webtau.persona.Persona;\n\npublic class Personas {\n    public static final Persona Alice = Persona.persona(\"Alice\",\n            \"authId\", \"alice-user-id\");\n    public static final Persona Bob = Persona.persona(\"Bob\",\n            \"authId\", \"bob-user-id\");\n}","title":"Alice and Bob","anchorId":"persona-authorization-alice-and-bob-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Authorization test using persona concept looks like this","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest.headers\n\nimport static personas.Personas.*\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"my bank balance\") {\n    Alice {\n        http.get(\"/statement\") {\n            balance.shouldBe > 100\n        }\n    }\n\n    Bob {\n        http.get(\"/statement\") {\n            balance.shouldBe < 50\n        }\n    }\n}","title":"persona http call","anchorId":"persona-authorization-persona-http-call","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static com.example.tests.junit5.Personas.*;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class PersonaHttpJavaTest {\n    @Test\n    public void checkBalance() {\n        Alice.execute(() -> http.get(\"/statement\", (header, body) -> {\n            body.get(\"balance\").shouldBe(greaterThan(100));\n        }));\n\n        Bob.execute(() -> http.get(\"/statement\", (header, body) -> {\n            body.get(\"balance\").shouldBe(lessThan(50));\n        }));\n    }\n}","title":"persona http call","excludeRegexp":"http.doc","anchorId":"persona-authorization-persona-http-call-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To make this example work, let's update implicit header provider above to take into account persona context","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package scenarios.rest.headers.auth\n\nimport org.testingisdocumenting.webtau.http.HttpHeader\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass PersonaAuth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        def token = generateTokenBasedOnPersona()\n        return original.with([Authorization: \"Bearer $token\"])\n    }\n\n    static String generateTokenBasedOnPersona() {\n        if (currentPersona.isDefault()) { // check if we are inside persona context or outside\n            return generateDefaultToken()\n        }\n\n        return generateTokenForSystemUserId(currentPersona.payload.authId) // use persona payload to generate required token\n    }\n\n    static String generateTokenForSystemUserId(String systemUserId) {\n        return \"dummy:$systemUserId\" // this is where you generate specific user auth token\n    }\n\n    static String generateDefaultToken() {\n        return \"dummy:default-user\" // this is where you generate default user auth token\n    }\n}","autoTitle":true,"commentsType":"inline","title":"scenarios/rest/headers/auth/PersonaAuth.groovy","anchorId":"persona-authorization-scenarios-rest-headers-auth-personaauth-groovy","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5.config;\n\nimport org.testingisdocumenting.webtau.http.HttpHeader;\nimport org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class HttpPersonaAuthHeaderProvider implements WebTauHttpConfiguration {\n    @Override\n    public HttpHeader fullHeader(String fullUrl, String passedUrl, HttpHeader given) {\n        String token = generateTokenBasedOnPersona();\n        return given.with(\"Authorization\", \"Bearer \" + token);\n    }\n\n    private String generateTokenBasedOnPersona() {\n        if (getCurrentPersona().isDefault()) { // check if we are inside persona context or outside\n            return generateDefaultToken();\n        }\n\n        return generateTokenForSystemUserId(\n                getCurrentPersona().getPayload().getOrDefault(\"authId\", \"\").toString()); // use persona payload to generate required token\n    }\n\n    private String generateTokenForSystemUserId(String systemUserId) {\n        return \"dummy:\" + systemUserId; // this is where you generate specific user auth token\n    }\n\n    private String generateDefaultToken() {\n        return \"dummy:default-user\"; // this is where you generate default user auth token\n    }\n}","autoTitle":true,"commentsType":"inline","title":"src/test/java/com/example/tests/junit5/config/HttpPersonaAuthHeaderProvider.java","anchorId":"persona-authorization-src-test-java-com-example-tests-junit5-config-httppersonaauthheaderprovider-java","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Persona","pageTitle":"HTTP Persona","pageMeta":{},"dirName":"persona","fileName":"HTTP-persona","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Authorization","id":"authorization"},{"title":"Persona Authorization","id":"persona-authorization"}]}},{"type":"Page","content":[{"id":"environment-variables","title":"Environment Variables","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Each persona can have their own ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" environment variable overrides","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Common variables definition:","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliEnv {\n    MY_VAR = \"webtau\"\n    PREFIX_VAR = \"__\"\n}","title":"webtau.cfg.groovy","surroundedBy":"default-my-var","anchorId":"environment-variables-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Persona overrides","type":"SimpleText"}]},{"lang":"groovy","snippet":"personas {\n    Alice {\n        cliEnv.MY_VAR = \"Alice!\"\n    }\n\n    Bob {\n        cliEnv.MY_VAR = \"Bob!\"\n    }\n}","title":"webtau.cfg.groovy","surroundedBy":"personas-my-var","anchorId":"environment-variables-webtau-cfg-groovy-2","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Script that prints env variable value","type":"SimpleText"}]},{"lang":"","snippet":"#!/bin/bash\necho \"hello $MY_VAR\"","autoTitle":true,"title":"scripts/hello-env-var","anchorId":"environment-variables-scripts-hello-env-var","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Different value will be printed depending on the active persona","type":"SimpleText"}]},{"lang":"groovy","snippet":"Alice {\n    cli.run('scripts/hello-env-var') {\n        output.should == 'hello Alice!'\n    }\n}\n\nBob {\n    cli.run('scripts/hello-env-var') {\n        output.should == 'hello Bob!'\n    }\n}","title":"use environment variable from persona config","anchorId":"environment-variables-use-environment-variable-from-persona-config","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Persona","pageTitle":"CLI Persona","pageMeta":{},"dirName":"persona","fileName":"CLI-persona","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Environment Variables","id":"environment-variables"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau provides database access layer ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" to help with data setup, validation and manipulation.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Use it in conjunction with other layers like ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" to write more powerful tests.","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/database/data-setup","isFile":false,"type":"Link","content":[{"text":"Data Setup","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/database/data-query","isFile":false,"type":"Link","content":[{"text":"Data Query","type":"SimpleText"}]}]}]}]},{"lang":"groovy","snippet":"PRICES << [ \"id\" | \"description\" | \"price\"] {\n          ___________________________________\n           \"id1\" | \"nice set\"    | 1000\n           \"id2\" | \"another set\" | 2000 }","entry":"should insert table data into a table","title":"example of data setup","bodyOnly":true,"startLine":"PRICES <<","endLine":"2000 }","type":"Snippet"},{"lang":"groovy","snippet":"def prices = db.query(\"select * from PRICES where id=:id\", [id: \"id1\"])\nprices.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000     }","entry":"query table with select statement and param","title":"validate parts of a table","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Database","pageTitle":"Introduction","pageMeta":{},"dirName":"database","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"handcrafted-data","title":"Handcrafted Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"One way to set up a DB state is to use handcrafted ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\") // declare PRICES table\nPRICES << [ \"id\" | \"description\" | \"price\"] { // append two rows to PRICES\n           ___________________________________\n           \"id1\" | \"nice set\"    | 1000\n           \"id2\" | \"another set\" | 2000 }","entry":"should use data source provider for primary database","title":"data setup with hand crafted table data","bodyOnly":true,"startLine":"def PRICES","endLine":"2000 }","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Alternatively use list of maps as the parameter to perform multiple rows insertion","type":"SimpleText"}]},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [\n        [id: \"id1\", description: \"nice set\", price: 1000],\n        [id: \"id2\", description: \"warm set\", price: 2000]]","entry":"should insert list of maps into table","title":"inserting multiple rows using list","bodyOnly":true,"startLine":"def PRICES","endLine":"2000]","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use map as the parameter to perform a single row insertion","type":"SimpleText"}]},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [id: \"id1\", description: \"nice set\", price: 1000]","entry":"should insert single row into table","title":"inserting single row","bodyOnly":true,"startLine":"def PRICES","endLine":"1000]","commentsType":"inline","type":"Snippet"}]},{"id":"semi-auto-generated-tabledata","title":"Semi-Auto Generated TableData","type":"Section","content":[{"type":"Paragraph","content":[{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" has features like ","type":"SimpleText"},{"url":"/webtau/reference/table-data#permutations","isFile":false,"type":"Link","content":[{"text":"permute","type":"SimpleText"}]},{"text":" and","type":"SimpleText"},{"type":"SoftLineBreak"},{"url":"/webtau/reference/table-data#guid","isFile":false,"type":"Link","content":[{"text":"cell.guid","type":"SimpleText"}]},{"text":" among others.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Using them can reduce the effort required to maintain data setup.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [     \"id\" | \"description\" |          \"available\" |                \"type\" |       \"price\" ] {\n           _____________________________________________________________________________________________\n           cell.guid | \"nice set\"    |                 true |                \"card\" |            1000 // cell.guid generates random guid that can be used for ids\n           cell.guid | \"nice set\"    |                 true |                \"card\" | cell.above + 10 // cell.above refers values above and can be modified with simple math operations\n           cell.guid | \"another set\" | permute(true, false) | permute(\"rts\", \"fps\") | cell.above + 20 } // permute generates additional rows generating new rows with all the permutations","entry":"use table data permute, above and guid to generate rows","title":"data setup with hand crafted table data","bodyOnly":true,"startLine":"def PRICES","endLine":"cell.above + 20","commentsType":"inline","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: code above assumes ","type":"SimpleText"},{"code":"WebTauCore.*","type":"InlinedCode"},{"text":" static import or ","type":"SimpleText"},{"code":"WebTauGroovyDsl.*","type":"InlinedCode"},{"text":" static import","type":"SimpleText"}]},{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*","includeRegexp":"import.*Core","type":"Snippet"},{"table":{"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}],"data":[[[{"type":"Paragraph","content":[{"text":"a0afe0ec-708a-402a-91a8-d2d6a239ba8f","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"card","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"9d5183ac-ba53-4644-af39-eefdd804f58a","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"card","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1010","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"f54295d8-a665-49f9-9847-c174db2d7721","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"rts","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1030","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"f645be7b-731a-43cb-ab2d-53b3a38bd095","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"rts","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1050","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"6ac1808f-5eef-4285-9597-c8bd6363a120","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"fps","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1070","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"3da1196c-b7d2-4b13-9f12-2dfb61eb3752","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"fps","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1090","type":"SimpleText"}]}]]]},"title":"PRICES","anchorId":"semi-auto-generated-tabledata-prices","type":"Table"}]},{"id":"external-file-tabledata","title":"External File TableData","type":"Section","content":[{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << data.csv.table('prices-db.csv')","entry":"use csv read data","title":"data setup with CSV data","bodyOnly":true,"startLine":"def PRICES","endLine":"data.csv.table","type":"Snippet"},{"lang":"csv","snippet":"id, description, available, type, price\nid1, description1, true, card, 200\nid2, description2, false, rts, 400","title":"prices-db.csv","anchorId":"external-file-tabledata-prices-db-csv","type":"Snippet"},{"table":{"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}],"data":[[[{"type":"Paragraph","content":[{"text":"id1","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"description1","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"card","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"200","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"id2","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"description2","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"rts","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"400","type":"SimpleText"}]}]]]},"title":"PRICES","anchorId":"external-file-tabledata-prices","type":"Table"}]},{"id":"cleaning-tables","title":"Cleaning Tables","type":"Section","content":[{"lang":"groovy","snippet":"db.update(\"delete from PRICES where price > :price\", [price: 950])","entry":"delete with params","title":"delete data","bodyOnly":true,"includeRegexp":"delete","commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"db.update(\"delete from PRICES where price > :price\", 950)","entry":"delete with single param shortcut","title":"delete data with single param shortcut","bodyOnly":true,"includeRegexp":"delete","commentsType":"inline","type":"Snippet"},{"lang":"groovy","snippet":"PRICES.clear()","entry":"delete with table shortcut","title":"delete data through table shortcut","bodyOnly":true,"includeRegexp":"clear","commentsType":"inline","type":"Snippet"}]},{"id":"updating-tables","title":"Updating Tables","type":"Section","content":[{"table":{"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}],"data":[[[{"type":"Paragraph","content":[{"text":"id1","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"id2","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"2000","type":"SimpleText"}]}]]]},"title":"PRICES","anchorId":"updating-tables-prices","type":"Table"},{"lang":"groovy","snippet":"db.update(\"update PRICES set price=:price where id=:id\", [id: 'id2', price: 4000])","entry":"should run updates with params","title":"update data","bodyOnly":true,"includeRegexp":"db.update","commentsType":"inline","type":"Snippet"},{"table":{"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}],"data":[[[{"type":"Paragraph","content":[{"text":"id1","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"id2","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"4000","type":"SimpleText"}]}]]]},"title":"PRICES after update","anchorId":"updating-tables-prices-after-update","type":"Table"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Database","pageTitle":"Data Setup","pageMeta":{},"dirName":"database","fileName":"data-setup","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Handcrafted Data","id":"handcrafted-data"},{"title":"Semi-Auto Generated TableData","id":"semi-auto-generated-tabledata"},{"title":"External File TableData","id":"external-file-tabledata"},{"title":"Cleaning Tables","id":"cleaning-tables"},{"title":"Updating Tables","id":"updating-tables"}]}},{"type":"Page","content":[{"id":"full-table","title":"Full Table","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To query all data from a table use:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000\n                 \"id2\" | \"another set\" | 2000 }","entry":"query method on table should be optional during comparison","title":"validate whole table","bodyOnly":true,"startLine":"query whole table start","endLine":"query whole table end","excludeStartEnd":true,"type":"Snippet"}]},{"id":"custom-query","title":"Custom Query","type":"Section","content":[{"lang":"groovy","snippet":"def prices = db.query(\"select * from PRICES where id=:id\", [id: \"id1\"])\nprices.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000     }","entry":"query table with select statement and param","title":"validate parts of a table","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"},{"lang":"groovy","snippet":"def prices = db.query(\"select * from PRICES where id=:id\", [id: \"id1\"])\nprices.should == [ID: \"id1\", \"DESCRIPTION\": \"nice set\", PRICE: 1000]","entry":"query table to match one row and assert against map","title":"validate parts of a table against map","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"},{"lang":"groovy","snippet":"def prices = db.query(\"select * from PRICES where id in (:ids)\", [ids: [\"id1\", \"id2\"]])\nprices.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000\n                 \"id2\" | \"another set\" | 2000     }","entry":"query table with select statement and array param","title":"use array as input","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"}]},{"id":"named-parameter-shortcut","title":"Named Parameter Shortcut","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If your query uses a single unique placeholder name, you can pass a regular value instead of a ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"}]},{"lang":"groovy","snippet":"def prices = db.query(\"select * from PRICES where id=:id or external_id=:id\", \"id1\")\nprices.should == [ID: \"id1\", \"DESCRIPTION\": \"nice set\", PRICE: 1000]","entry":"query table to match one row using single param shortcut and assert against map","title":"use regular value in case of one unique placeholder name","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"}]},{"id":"lazy-declaration","title":"Lazy Declaration","type":"Section","content":[{"type":"Paragraph","content":[{"code":"query","type":"InlinedCode"},{"text":" doesn't query database at the call time. It defines a query to be used later.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def prices = db.query(\"select * from PRICES\")\n\nprices.shouldNot == []\ndb.update(\"delete from PRICES\")\nprices.should == []","entry":"create query is lazy","title":"create query is lazy","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"},{"lang":"groovy","snippet":"def PRICES = db.table(\"PRICES\")\ndef numberOfItems = PRICES.queryCount()\n\nnumberOfItems.shouldNot == 0\ndb.update(\"delete from PRICES\")\nnumberOfItems.should == 0","entry":"lazy count query","title":"lazy count query","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"}]},{"id":"single-value","title":"Single Value","type":"Section","content":[{"lang":"groovy","snippet":"def price = db.query(\"select price from PRICES where id=:id\", [id: 'id1'])\nprice.should == 1000\nprice.shouldNot == 2000","entry":"should query single value with params","title":"validate single value","bodyOnly":true,"startLine":"query single value params start","endLine":"query single value params end","excludeStartEnd":true,"type":"Snippet"}]},{"id":"wait-on-result","title":"Wait On Result","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" on query result to continuously query database until condition is met or timeout is reached.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def count = db.query(\"select count(*) from PRICES\")\ncount.should == 2\n\n// event happen somewhere to increase the number of rows...\ncount.waitTo == 3","entry":"wait for count to change","title":"wait for count to change","bodyOnly":true,"startLine":"query with where clause start","endLine":"query with where clause end","excludeStartEnd":true,"type":"Snippet"}]},{"id":"query-result-value","title":"Query Result Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Value returned from ","type":"SimpleText"},{"code":"query","type":"InlinedCode"},{"text":" methods is an instance of ","type":"SimpleText"},{"code":"DbQuery","type":"InlinedCode"},{"text":" type.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"No actual query is performed when ","type":"SimpleText"},{"code":"DbQuery","type":"InlinedCode"},{"text":" instance is created. It holds information about what query is, and what its parameters","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and only performs query when validation is triggered.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"queryXXX","type":"InlinedCode"},{"text":" to access underlying value.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def price = db.query(\"select price from PRICES where id=:id\", [id: 'id1'])\nif (price.singleValue() > 100) {\n    println(\"do something\")\n}","entry":"value returned from query is a special wrapper value","title":"access single value","bodyOnly":true,"startLine":"single value access start","endLine":"single value access end","excludeStartEnd":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Avoid: When you use ","type":"SimpleText"},{"code":"queryXXX","type":"InlinedCode"},{"text":" for assertions you may lose additional report information","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Database","pageTitle":"Data Query","pageMeta":{},"dirName":"database","fileName":"data-query","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Full Table","id":"full-table"},{"title":"Custom Query","id":"custom-query"},{"title":"Named Parameter Shortcut","id":"named-parameter-shortcut"},{"title":"Lazy Declaration","id":"lazy-declaration"},{"title":"Single Value","id":"single-value"},{"title":"Wait On Result","id":"wait-on-result"},{"title":"Query Result Value","id":"query-result-value"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" module can operate on JVM DataSource without providing JDBC URLs.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In the following sections, we will cover ","type":"SimpleText"},{"url":"https://spring.io/projects/spring-boot","isFile":false,"type":"Link","content":[{"text":"Spring Boot","type":"SimpleText"}]},{"text":" Repository Test.","type":"SimpleText"}]},{"id":"database-setup","title":"Database Setup","type":"Section","content":[{"type":"Paragraph","content":[{"text":"We need to configure WebTau ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" module as well as Spring test one","type":"SimpleText"}]},{"lang":"java","snippet":"@DataJpaTest\n@ActiveProfiles(\"tc\") // test profile with Test Containers\npublic class AccountRepositoryTest {\n    private final AccountRepository accountRepository;\n    private final Database mainDb;\n    private final DatabaseTable ACCOUNT;\n\n    @Autowired\n    public AccountRepositoryTest(DataSource dataSource, AccountRepository accountRepository) {\n        this.accountRepository = accountRepository;\n\n        mainDb = db.labeled(\"main-db\").fromDataSource(dataSource); // define WebTau database instance to insert/read\n        ACCOUNT = mainDb.table(\"ACCOUNT\"); // define ACCOUNT table instance to insert/read\n    }","title":"datasource injection and db module setup","surroundedBy":"repository-test-config","commentsType":"inline","anchorId":"database-setup-datasource-injection-and-db-module-setup","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Here is how we define ","type":"SimpleText"},{"code":"tc","type":"InlinedCode"},{"text":" profile using ","type":"SimpleText"},{"url":"https://www.testcontainers.org/modules/databases/jdbc/","isFile":false,"type":"Link","content":[{"text":"Test Containers JDBC support","type":"SimpleText"}]},{"text":":","type":"SimpleText"}]},{"lang":"bash","snippet":"# test containers special JDBC url\nspring.datasource.url=jdbc:tc:postgresql:9.6.8:///my-db\nspring.datasource.driverClassName=org.testcontainers.jdbc.ContainerDatabaseDriver\nspring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect\nspring.jpa.hibernate.ddl-auto=create-drop\n# disable default in memory DB provided by @DataJpaTest\nspring.test.database.replace=none","autoTitle":true,"commentsType":"inline","title":"src/test/resources/application-tc.properties","anchorId":"database-setup-src-test-resources-application-tc-properties","type":"Snippet"}]},{"id":"write-directly-to-db","title":"Write Directly To DB","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Let's write data directly to database table, bypassing repository class, so we can isolate our test logic.","type":"SimpleText"}]},{"lang":"java","snippet":"@Test\npublic void findById() {\n    // define data to be inserted into DB\n    TableData newAccounts = table( \"ID\", \"FIRST_NAME\", \"LAST_NAME\",\n                                  ________________________________,\n                                  \"id1\", \"FN1\"       , \"LN1\",\n                                  \"id2\", \"FN2\"       , \"LN2\");\n\n    // insert directly to DB bypassing repository\n    ACCOUNT.insert(newAccounts);\n\n    // use accounts repository to fetch a record\n    Account account = accountRepository.findById(\"id2\").get();\n\n    // use bean and map comparison shortcut\n    actual(account).should(equal(map(\n            \"id\", \"id2\",\n            \"firstName\", \"FN2\",\n            \"lastName\", \"LN2\")));\n}","entry":"findById","commentsType":"inline","type":"Snippet"}]},{"id":"read-directly-from-db","title":"Read Directly From DB","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Now let's write data using repository and validate that DB table actually contains the data.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"We then will test a simple query by last name.","type":"SimpleText"}]},{"lang":"java","snippet":"@Test\npublic void createEntriesAndFindByName() {\n    TableData newAccounts = table( \"*id\", \"firstName\" , \"lastName\",\n                                  ________________________________,\n                                   \"id1\", \"FN1\"       , \"LN\",\n                                   \"id2\", \"FN2\"       , \"LN\",\n                                   \"id3\", \"FNN1\"      , \"LNN\");\n\n    List<Account> accounts = createAccounts(newAccounts); // create accounts java beans from table data\n    accountRepository.saveAll(accounts);\n\n    // force data commit to DB\n    TestTransaction.flagForCommit();\n    TestTransaction.end();\n\n    // query all data from DB, using * to note that we depend on ID for compare and not order\n    ACCOUNT.query().should(equal(table(\"*ID\", \"FIRST_NAME\", \"LAST_NAME\",\n                                      ________________________________,\n                                       \"id1\", \"FN1\"       , \"LN\",\n                                       \"id2\", \"FN2\"       , \"LN\",\n                                       \"id3\", \"FNN1\"      , \"LNN\")));\n\n    // WebTau will automatically convert actual column names from underscores to camelCase based on expected column names\n    ACCOUNT.query().should(equal(newAccounts));\n\n    // search by last name and validate received java beans\n    List<Account> lnAccounts = accountRepository.findByLastName(\"LN\");\n    actual(lnAccounts).should(equal(table(\"*id\", \"firstName\", \"lastName\",\n                                          ______________________________,\n                                          \"id1\", \"FN1\"       , \"LN\",\n                                          \"id2\", \"FN2\"       , \"LN\")));\n}","entry":"createEntriesAndFindByName","commentsType":"inline","type":"Snippet"},{"lang":"java","snippet":"private static List<Account> createAccounts(TableData tableData) {\n    return tableData.rowsStream().map(row -> {\n        Account account = new Account();\n        account.setId(row.get(\"id\"));\n        account.setFirstName(row.get(\"firstName\"));\n        account.setLastName(row.get(\"lastName\"));\n\n        return account;\n    }).collect(Collectors.toList());\n}","title":"create accounts from TableData","entry":"createAccounts","anchorId":"read-directly-from-db-create-accounts-from-tabledata","type":"Snippet"}]},{"id":"re-using-data","title":"Re-using Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In the test above we repeated test data with only difference in column names. In setup, we used camelCase, and in expectations underscores.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau automatically converts data from one format to another depending on the context.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"I.e. if you compare table query result with ","type":"SimpleText"},{"code":"FIRST_NAME","type":"InlinedCode"},{"text":" as a column against a ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" with ","type":"SimpleText"},{"code":"firstName","type":"InlinedCode"},{"text":" column,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"WebTau will convert actual before comparison to match expected column names format.","type":"SimpleText"}]},{"lang":"java","snippet":"@Test\npublic void findByIdReuseData() {\n    // using camelCase for properties\n    TableData newAccounts = table( \"*id\", \"firstName\" , \"lastName\",\n                                  ________________________________,\n                                   \"id1\", \"FN1\"       , \"LN1\",\n                                   \"id2\", \"FN2\"       , \"LN2\");\n\n    // WebTau will automatically convert camelCase to underscores at insert time\n    ACCOUNT.insert(newAccounts);\n\n    // use accounts repository to fetch a record\n    Account account = accountRepository.findById(\"id2\").get();\n\n    // reuse row from newAccounts table as expected value\n    actual(account).should(equal(newAccounts.findByKey(\"id2\")));\n}","title":"re-use a single row from input for validation","entry":"findByIdReuseData","commentsType":"inline","anchorId":"re-using-data-re-use-a-single-row-from-input-for-validation","type":"Snippet"},{"lang":"java","snippet":"@Test\npublic void createEntriesAndFindByNameReuseData() {\n    TableData newAccounts = table(\"*id\", \"firstName\", \"lastName\",\n                                  ______________________________,\n                                  \"id1\", \"FN1\"      , \"LN\",\n                                  \"id2\", \"FN2\"      , \"LN\",\n                                  \"id3\", \"FNN1\"     , \"LNN\");\n\n    List<Account> accounts = createAccounts(newAccounts); // create accounts java beans from table data\n    accountRepository.saveAll(accounts);\n\n    // force data commit to DB\n    TestTransaction.flagForCommit();\n    TestTransaction.end();\n\n    // another way to compare.\n    // WebTau will automatically convert actual column names from underscores to camelCase based on expected column names format\n    ACCOUNT.query().should(equal(newAccounts));\n\n    // search by last name and validate received java beans\n    List<Account> lnAccounts = accountRepository.findByLastName(\"LN\");\n\n    TableData expectedByLn = newAccounts.fromRowsByKeys(\"id1\", \"id2\");\n    actual(lnAccounts).should(equal(expectedByLn));\n}","title":"re-use the whole table for validation","entry":"createEntriesAndFindByNameReuseData","commentsType":"inline","anchorId":"re-using-data-re-use-the-whole-table-for-validation","type":"Snippet"}]},{"id":"cleanup-between-tests","title":"Cleanup Between Tests","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In between tests we will explicitly delete data from DB","type":"SimpleText"}]},{"lang":"java","snippet":"@BeforeEach\npublic void cleanupBeforeTest() {\n    ACCOUNT.clear();\n}","title":"cleanup before each test","entry":"cleanupBeforeTest","anchorId":"cleanup-between-tests-cleanup-before-each-test","type":"Snippet"}]},{"id":"import-and-dependency","title":"Import And Dependency","type":"Section","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.db.Database.db;","title":"import","includeRegexp":"Database.db","anchorId":"import-and-dependency-import","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To include only Database module as your dependency use","type":"SimpleText"}]},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-data</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"import-and-dependency-maven-dependency","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Database","pageTitle":"Spring Boot Example","pageMeta":{},"dirName":"database","fileName":"spring-boot-example","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Database Setup","id":"database-setup"},{"title":"Write Directly To DB","id":"write-directly-to-db"},{"title":"Read Directly From DB","id":"read-directly-from-db"},{"title":"Re-using Data","id":"re-using-data"},{"title":"Cleanup Between Tests","id":"cleanup-between-tests"},{"title":"Import And Dependency","id":"import-and-dependency"}]}},{"type":"Page","content":[{"id":"jdbc","title":"JDBC","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau is JVM based API and it uses ","type":"SimpleText"},{"url":"https://en.wikipedia.org/wiki/Java_Database_Connectivity#:~:text=Java%20Database%20Connectivity%20(JDBC)%20is,used%20for%20Java%20database%20connectivity.","isFile":false,"type":"Link","content":[{"text":"JDBC","type":"SimpleText"}]},{"type":"SoftLineBreak"},{"text":"interface behind the scenes to connect to a database.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"You don't need to know how to use JDBC API as WebTau expose higher level APIs, but you will need to understand how","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to build JDBC connection url to be able to connect to a database.","type":"SimpleText"}]}]},{"id":"primary-database","title":"Primary Database","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Primary DB config used when execute operations using ","type":"SimpleText"},{"code":"db.update","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.query","type":"InlinedCode"},{"text":", etc, without specifying data source name.","type":"SimpleText"}]},{"lang":"groovy","snippet":"import groovy.grape.Grape\n\nGrape.grab(group:'com.h2database', module: 'h2', version: '1.4.200', // auto download DB driver dependency (in this case H2 db)\n        classLoader: ClassLoader.getSystemClassLoader())\n\ndbUrl = \"jdbc:h2:file:~/h2db/test-db\" // primary DB JDBC connection url\ndbDriverClassName = \"org.h2.Driver\" // JDBC driver class name\ndbUserName = \"sa\"\ndbPassword = \"password\"","title":"Primary DB config","excludeRegexp":"package","commentsType":"inline","anchorId":"primary-database-primary-db-config","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Database","pageTitle":"Config","pageMeta":{},"dirName":"database","fileName":"config","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"JDBC","id":"jdbc"},{"title":"Primary Database","id":"primary-database"}]}},{"type":"Page","content":[{"id":"summary","title":"Summary","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Out of the box report provides high level information like number of failed tests and HTTP Operations coverage.","type":"SimpleText"}]},{"border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-summary.png","timestamp":1692272666602,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]},{"id":"continuous-integration","title":"Continuous Integration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Example of ","type":"SimpleText"},{"url":"/webtau/continuous-integration/GitHub","isFile":false,"type":"Link","content":[{"text":"GitHub","type":"SimpleText"}]},{"text":" actions to upload reports during ","type":"SimpleText"},{"code":"CI","type":"InlinedCode"}]}]},{"id":"test-summary","title":"Test Summary","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Selected a test to see summary information about the test run","type":"SimpleText"}]},{"border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-test-summary.png","timestamp":1692272666966,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]},{"id":"failed-test-summary","title":"Failed Test Summary","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In case of a test failure, WebTau provides details on the failed step and highlights relevant code snippet:","type":"SimpleText"}]},{"border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-test-summary-failed-step.png","timestamp":1692272694206,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]},{"id":"permalinks","title":"Permalinks","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Report is a self-contained single page application. You can email it, upload to slack, put on a shared drive without an HTTP server.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Url tracks your navigation through screens, so you can share url to a specific problem.","type":"SimpleText"}]}]},{"id":"data-tracking","title":"Data Tracking","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau tracks all actions and assertions tests perform.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Actions and assertions are printed to console as well as available in the generated HTML report.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In a test details screen, there are multiple tabs.","type":"SimpleText"}]},{"delimiter":".","startNumber":1,"type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Layer specific details, e.g. HTTP, CLI, DB, Servers, etc","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Every action that was performed","type":"SimpleText"}]}]}]},{"border":true,"annotate":true,"annotationsPath":"doc-artifacts/reports/report-crud-steps.json","fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-http-calls.png","timestamp":1692272665506,"shapes":[{"type":"badge","text":"1","x":491,"y":16,"align":"Center","invertedColors":false},{"type":"badge","text":"2","x":576,"y":17,"align":"Center","invertedColors":false}],"width":1310.0,"height":798.0,"type":"AnnotatedImage"},{"border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-steps.png","timestamp":1692272665858,"shapes":[],"width":1310.0,"height":798.0,"type":"AnnotatedImage"},{"type":"Paragraph","content":[{"text":"Every WebTau standard action generates ","type":"SimpleText"},{"code":"WebTauStep","type":"InlinedCode"},{"text":". You can use WebTau API to wrap your repeating actions","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"into WebTau compatible steps.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Introduction","pageMeta":{"image":["{border: true}"]},"dirName":"report","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Summary","id":"summary"},{"title":"Continuous Integration","id":"continuous-integration"},{"title":"Test Summary","id":"test-summary"},{"title":"Failed Test Summary","id":"failed-test-summary"},{"title":"Permalinks","id":"permalinks"},{"title":"Data Tracking","id":"data-tracking"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/report/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]},{"id":"grouping-actions","title":"Grouping Actions","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":" core method to wrap a set of actions into a group","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"step(\"important actions\") {\n    actionOne()\n    actionTwo()\n}","title":"step group","surroundedBy":"wrap-step","anchorId":"grouping-actions-step-group","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"step(\"group of actions\", () -> {\n    actionOne();\n    actionTwo();\n});","title":"step group","surroundedBy":"wrap-step","anchorId":"grouping-actions-step-group-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","startLine":"group of actions","endLine":"group of actions","lines":["\u001B[33m> \u001B[34mgroup of actions\u001B[0m","\u001B[32m. \u001B[0mcompleted \u001B[34mgroup of actions\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"grouping-actions-console-output","type":"CliOutput"}]},{"id":"grouping-with-key-value","title":"Grouping With Key Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Pass key values to ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":" to combine ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":" and `trace","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"step(\"group of actions\", [url: baseUrl, port: myPort]) {\n    actionThree(myPort, baseUrl)\n}","title":"step group with key values","surroundedBy":"wrap-step-key-value","anchorId":"grouping-with-key-value-step-group-with-key-values","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"step(\"important actions\", map(\"myPort\", myPort, \"baseUrl\", baseUrl), () -> {\n    actionThree(myPort, baseUrl);\n});","title":"step group with key values","surroundedBy":"wrap-step-key-value","anchorId":"grouping-with-key-value-step-group-with-key-values-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","startLine":"important actions","endLine":"important actions","lines":["\u001B[33m> \u001B[34mimportant actions\u001B[0m","    \u001B[35mmyPort\u001B[33m: \u001B[34m8080\u001B[0m","    \u001B[35mbaseUrl\u001B[33m: \u001B[32m\"http://baseurl\"\u001B[0m","  \u001B[1m[tracing]\u001B[0m \u001B[34maction three\u001B[0m","\u001B[32m. \u001B[0mcompleted \u001B[34mimportant actions\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"grouping-with-key-value-console-output","type":"CliOutput"},{"border":true,"fit":true,"title":"web report","imageSrc":"/webtau/doc-artifacts/reports/report-step-key-value.png","timestamp":1692272698414,"shapes":[],"width":1310.0,"height":798.0,"anchorId":"grouping-with-key-value-web-report","type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Steps","pageMeta":{},"dirName":"report","fileName":"steps","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Grouping Actions","id":"grouping-actions"},{"title":"Grouping With Key Value","id":"grouping-with-key-value"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/report/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]},{"id":"key-value","title":"Key Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" core method to render key-value pairs to a console and to generated web report.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"trace(\"trace label\", [k1: \"v1\", k2: \"v2\"])\ntrace(\"another trace label\", \"k3\", \"v3\", \"k4\", \"v4\")","title":"trace key values","surroundedBy":["trace-map","trace-vararg"],"anchorId":"key-value-trace-key-values","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"trace(\"trace label\", map(\"k1\", \"v1\", \"k2\", \"v2\"));\ntrace(\"another trace label\", \"k3\", \"v3\", \"k4\", \"v4\");","title":"trace key values","surroundedBy":["trace-map","trace-vararg"],"anchorId":"key-value-trace-key-values-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","startLine":"trace label","endLine":"v4","lines":["\u001B[1m[tracing]\u001B[0m \u001B[34mtrace label\u001B[0m","    \u001B[35mk1\u001B[33m: \u001B[32m\"v1\"\u001B[0m","    \u001B[35mk2\u001B[33m: \u001B[32m\"v2\"\u001B[0m","\u001B[1m[tracing]\u001B[0m \u001B[34manother trace label\u001B[0m","    \u001B[35mk3\u001B[33m: \u001B[32m\"v3\"\u001B[0m","    \u001B[35mk4\u001B[33m: \u001B[32m\"v4\"\u001B[0m"],"anchorId":"key-value-console-output","type":"CliOutput"}]},{"id":"object-properties","title":"Object Properties","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"properties","type":"InlinedCode"},{"text":" combo to trace object properties:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def account = new Account(\"acc1\", \"my account\", 100)\ntrace(\"my account\", properties(account))","title":"trace object properties","entry":"nested simple bean","surroundedBy":["data-prep","data-trace"],"type":"Snippet"},{"title":"console output","lines":["\u001B[1m[tracing]\u001B[0m \u001B[34mmy account\u001B[0m","  \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"acc1\"\u001B[33m, \u001B[35m\"money\"\u001B[33m: \u001B[33m{\u001B[35m\"dollars\"\u001B[33m: \u001B[34m100\u001B[33m}\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"my account\"\u001B[33m}\u001B[0m"],"anchorId":"object-properties-console-output","type":"CliOutput"}]},{"id":"multiple-objects-as-table","title":"Multiple Objects As Table","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"propertiesTable","type":"InlinedCode"},{"text":" combo to trace object properties:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def game1 = new GameConfig(\"super game\", Paths.get(\"/games/superA\"))\ngame1.registerAchievement(\"chapter1\", \"Chapter One\", \"complete chapter one\")\ngame1.registerAchievement(\"boss1\", \"Giant Rat\", \"defeat giant rat\")\n\ndef game2 = new GameConfig(\"duper game\", Paths.get(\"/games/duperA\"))\ngame2.registerAchievement(\"chapter2\", \"Chapter Two\", \"complete chapter two\")\ngame2.registerAchievement(\"boss2\", \"Giant Mouse\", \"defeat giant mouse\")\n\ntrace(\"games\", propertiesTable([game1, game2]))","title":"table of objects properties","entry":"table of complex beans","surroundedBy":["data-prep","data-trace"],"surroundedBySeparator":"","type":"Snippet"},{"title":"console output","wide":true,"lines":["\u001B[1m[tracing]\u001B[0m \u001B[34mgames\u001B[0m","  \u001B[35machievements                                                                       \u001B[33m │ \u001B[35mgameName    \u001B[33m │ \u001B[35mlocation     \u001B[0m","  \u001B[33m[                                                                                  \u001B[33m │ \u001B[32m\"super game\"\u001B[33m │ \u001B[33m/\u001B[0mgames\u001B[33m/\u001B[35msuperA\u001B[0m","    \u001B[33m{\u001B[35m\"description\"\u001B[33m: \u001B[32m\"complete chapter one\"\u001B[33m, \u001B[35m\"id\"\u001B[33m: \u001B[32m\"chapter1\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Chapter One\"\u001B[33m}\u001B[33m,\u001B[33m │             \u001B[33m │              \u001B[0m","    \u001B[33m{\u001B[35m\"description\"\u001B[33m: \u001B[32m\"defeat giant rat\"\u001B[33m, \u001B[35m\"id\"\u001B[33m: \u001B[32m\"boss1\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Giant Rat\"\u001B[33m}          \u001B[33m │             \u001B[33m │              \u001B[0m","  \u001B[33m]                                                                                  \u001B[33m │             \u001B[33m │              \u001B[0m","                                                                                     \u001B[33m │             \u001B[33m │              \u001B[0m","  \u001B[33m[                                                                                  \u001B[33m │ \u001B[32m\"duper game\"\u001B[33m │ \u001B[33m/\u001B[0mgames\u001B[33m/\u001B[35mduperA\u001B[0m","    \u001B[33m{\u001B[35m\"description\"\u001B[33m: \u001B[32m\"complete chapter two\"\u001B[33m, \u001B[35m\"id\"\u001B[33m: \u001B[32m\"chapter2\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Chapter Two\"\u001B[33m}\u001B[33m,\u001B[33m │             \u001B[33m │              \u001B[0m","    \u001B[33m{\u001B[35m\"description\"\u001B[33m: \u001B[32m\"defeat giant mouse\"\u001B[33m, \u001B[35m\"id\"\u001B[33m: \u001B[32m\"boss2\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Giant Mouse\"\u001B[33m}      \u001B[33m │             \u001B[33m │              \u001B[0m","  \u001B[33m]                                                                                  \u001B[33m │             \u001B[33m │              \u001B[0m"],"anchorId":"multiple-objects-as-table-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Tracing","pageMeta":{},"dirName":"report","fileName":"tracing","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Key Value","id":"key-value"},{"title":"Object Properties","id":"object-properties"},{"title":"Multiple Objects As Table","id":"multiple-objects-as-table"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/report/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]},{"id":"generate-warning","title":"Generate Warning","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"warning","type":"InlinedCode"},{"text":" core method to mark something that needs to be looked at eventually.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"warning(\"warning message\")\nwarning(\"warning message with map\", [k1: \"v1\", k2: \"v2\"])\nwarning(\"another warning message\", \"k3\", \"v3\", \"k4\", \"v4\")","title":"warning signatures","surroundedBy":["warning-label","warning-map","warning-vararg"],"anchorId":"generate-warning-warning-signatures","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"warning(\"warning message\");\nwarning(\"warning message with map\", map(\"k1\", \"v1\", \"k2\", \"v2\"));\nwarning(\"another warning message\", \"k3\", \"v3\", \"k4\", \"v4\");","title":"warning signatures","surroundedBy":["warning-label","warning-map","warning-vararg"],"anchorId":"generate-warning-warning-signatures-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Let's take a look at the full test file example to see how warnings gets displayed","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('warning label') {\n    // warning-label\n    warning(\"warning message\")\n    // warning-label\n}\n\nscenario('warning key values') {\n    // warning-map\n    warning(\"warning message with map\", [k1: \"v1\", k2: \"v2\"])\n    // warning-map\n    // warning-vararg\n    warning(\"another warning message\", \"k3\", \"v3\", \"k4\", \"v4\")\n    // warning-vararg\n}","autoTitle":true,"startLine":"import","commentsType":"remove","title":"scenarios/concept/warning.groovy","anchorId":"generate-warning-scenarios-concept-warning-groovy","type":"Snippet"},{"title":"console output","startLine":"warning label","endLine":"v4","lines":["\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m warning label \u001B[35m(warning.groovy)\u001B[0m","\u001B[31m[warning]\u001B[0m \u001B[33mwarning message\u001B[0m","\u001B[32m[.] \u001B[34mwarning label \u001B[35m(warning.groovy)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m warning key values \u001B[35m(warning.groovy)\u001B[0m","\u001B[31m[warning]\u001B[0m \u001B[33mwarning message with map\u001B[0m","    \u001B[35mk1\u001B[33m: \u001B[32m\"v1\"\u001B[0m","    \u001B[35mk2\u001B[33m: \u001B[32m\"v2\"\u001B[0m","\u001B[31m[warning]\u001B[0m \u001B[33manother warning message\u001B[0m","    \u001B[35mk3\u001B[33m: \u001B[32m\"v3\"\u001B[0m","    \u001B[35mk4\u001B[33m: \u001B[32m\"v4\"\u001B[0m"],"anchorId":"generate-warning-console-output","type":"CliOutput"}]},{"name":"Java","content":[{"lang":"java","snippet":"import org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WarningJavaTest {\n    @Test\n    public void warningLabel() {\n        // warning-label\n        warning(\"warning message\");\n        // warning-label\n    }\n\n    @Test\n    public void warningKeyValues() {\n        // warning-map\n        warning(\"warning message with map\", map(\"k1\", \"v1\", \"k2\", \"v2\"));\n        // warning-map\n        // warning-vararg\n        warning(\"another warning message\", \"k3\", \"v3\", \"k4\", \"v4\");\n        // warning-vararg\n    }\n}","autoTitle":true,"startLine":"import","commentsType":"remove","title":"com/example/tests/junit5/WarningJavaTest.java","anchorId":"generate-warning-com-example-tests-junit5-warningjavatest-java","type":"Snippet"},{"title":"console output","startLine":"warningLabel","endLine":"v4","lines":["\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m warningLabel \u001B[35m(WarningJavaTest)\u001B[0m","\u001B[31m[warning]\u001B[0m \u001B[33mwarning message\u001B[0m","\u001B[32m[.] \u001B[34mwarningLabel \u001B[35m(WarningJavaTest)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m warningKeyValues \u001B[35m(WarningJavaTest)\u001B[0m","\u001B[31m[warning]\u001B[0m \u001B[33mwarning message with map\u001B[0m","    \u001B[35mk1\u001B[33m: \u001B[32m\"v1\"\u001B[0m","    \u001B[35mk2\u001B[33m: \u001B[32m\"v2\"\u001B[0m","\u001B[31m[warning]\u001B[0m \u001B[33manother warning message\u001B[0m","    \u001B[35mk3\u001B[33m: \u001B[32m\"v3\"\u001B[0m","    \u001B[35mk4\u001B[33m: \u001B[32m\"v4\"\u001B[0m"],"anchorId":"generate-warning-console-output-2","type":"CliOutput"}]}],"type":"Tabs"}]},{"id":"web-report","title":"Web Report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Web Report displays warnings in Steps tab for a specific test, but also displays them at the summary page","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"title":"report steps tab","border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-warning-groovy.png","timestamp":1692272696914,"shapes":[],"width":1310.0,"height":798.0,"anchorId":"web-report-report-steps-tab","type":"AnnotatedImage"}]},{"name":"Java","content":[{"title":"report steps tab","border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-warning-java.png","timestamp":1692272697698,"shapes":[],"width":1310.0,"height":798.0,"anchorId":"web-report-report-steps-tab-2","type":"AnnotatedImage"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Summary of warnings will be displayed at the end of the run in the console and present on the generated HTML report summary view.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"title":"console output warnings summary","startLine":"warning(s) in tests","lines":["\u001B[31mThere are \u001B[34m3\u001B[31m warning(s) in tests\u001B[0m","\u001B[31m*\u001B[33m warning message \u001B[0m(\u001B[35mwarning.groovy -> \u001B[34mwarning label\u001B[0m)\u001B[0m","\u001B[31m*\u001B[33m warning message with map \u001B[0m(\u001B[35mwarning.groovy -> \u001B[34mwarning key values\u001B[0m)\u001B[0m","    \u001B[35mk1\u001B[33m: \u001B[32m\"v1\"\u001B[0m","    \u001B[35mk2\u001B[33m: \u001B[32m\"v2\"\u001B[0m","\u001B[31m*\u001B[33m another warning message \u001B[0m(\u001B[35mwarning.groovy -> \u001B[34mwarning key values\u001B[0m)\u001B[0m","    \u001B[35mk3\u001B[33m: \u001B[32m\"v3\"\u001B[0m","    \u001B[35mk4\u001B[33m: \u001B[32m\"v4\"\u001B[0m","\u001B[34mTotal time: \u001B[35m5ms\u001B[0m","Total: 2, \u001B[32m Passed: 2, \u001B[33m Skipped: 0, \u001B[31m Failed: 0,  Errored: 0\u001B[0m","\u001B[34mreport is generated: \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/webtau-reports/scenarios/concept/warning-webtau-report.html\u001B[0m"],"anchorId":"web-report-console-output-warnings-summary","type":"CliOutput"},{"title":"warnings summary web report","border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-summary-warning-collapsed-groovy.png","timestamp":1692272698886,"shapes":[],"width":1310.0,"height":798.0,"anchorId":"web-report-warnings-summary-web-report","type":"AnnotatedImage"}]},{"name":"Java","content":[{"title":"console output warnings summary","startLine":"warning(s) in tests","lines":["\u001B[31mThere are \u001B[34m3\u001B[31m warning(s) in tests\u001B[0m","\u001B[31m*\u001B[33m warning message \u001B[0m(\u001B[35mWarningJavaTest -> \u001B[34mwarningLabel\u001B[0m)\u001B[0m","\u001B[31m*\u001B[33m warning message with map \u001B[0m(\u001B[35mWarningJavaTest -> \u001B[34mwarningKeyValues\u001B[0m)\u001B[0m","    \u001B[35mk1\u001B[33m: \u001B[32m\"v1\"\u001B[0m","    \u001B[35mk2\u001B[33m: \u001B[32m\"v2\"\u001B[0m","\u001B[31m*\u001B[33m another warning message \u001B[0m(\u001B[35mWarningJavaTest -> \u001B[34mwarningKeyValues\u001B[0m)\u001B[0m","    \u001B[35mk3\u001B[33m: \u001B[32m\"v3\"\u001B[0m","    \u001B[35mk4\u001B[33m: \u001B[32m\"v4\"\u001B[0m","\u001B[34mTotal time: \u001B[35m3ms\u001B[0m","Total: 3, \u001B[32m Passed: 3, \u001B[33m Skipped: 0, \u001B[31m Failed: 0,  Errored: 0\u001B[0m","\u001B[34mreport is generated: \u001B[35m/home/runner/work/webtau/webtau/webtau-junit5-examples/webtau-reports/com.example.tests.junit5.WarningJavaTest.html\u001B[0m"],"anchorId":"web-report-console-output-warnings-summary-2","type":"CliOutput"},{"title":"warnings summary web report","border":true,"fit":true,"imageSrc":"/webtau/doc-artifacts/reports/report-summary-warning-collapsed-java.png","timestamp":1692272699734,"shapes":[],"width":1310.0,"height":798.0,"anchorId":"web-report-warnings-summary-web-report-2","type":"AnnotatedImage"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Warnings","pageMeta":{},"dirName":"report","fileName":"warnings","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Generate Warning","id":"generate-warning"},{"title":"Web Report","id":"web-report"}]}},{"type":"Page","content":[{"id":"report-path","title":"Report Path","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"reportPath","type":"InlinedCode"},{"text":" to change","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"path of a produced self-contained rich HTML report","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"command":"webtau scenarios/*.groovy --reportPath my-report-name.html","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Maven","content":[{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <reportPath>my-report-name.html</reportPath>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","excludeRegexp":["failedReportPath","reportName","reportNameUrl"],"highlight":[14],"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"failed-report-path","title":"Failed Report Path","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"failedReportPath","type":"InlinedCode"},{"text":" to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"use different path for failed cases.","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"command":"webtau scenarios/*.groovy --failedReportPath my-failed-report-name.html","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Maven","content":[{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <failedReportPath>my-failed-report-name.html</failedReportPath>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","excludeRegexp":["reportPath","reportName","reportNameUrl"],"highlight":[14],"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"One of the use-cases is to configure CI upload only failed test reports, especially if you run multiple independent test suits","type":"SimpleText"}]},{"lang":"yaml","snippet":"- name: Upload failed test reports\n  uses: actions/upload-artifact@v2\n  if: failure()\n  with:\n    name: failed suits \n    path: \"testing/src/test/groovy/*failed*.html\"\n    retention-days: 2\n","lineNumber":"","title":"GitHub actions upload only failed reports","type":"Snippet"}]},{"id":"report-name-and-url","title":"Report Name And URL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"reportName","type":"InlinedCode"},{"text":" and","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"reportNameUrl","type":"InlinedCode"},{"text":" to change","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"default report name.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"By default, when you click a report name, browser opens ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/webtau","isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Specify ","type":"SimpleText"},{"code":"reportNameUrl","type":"InlinedCode"},{"text":" to override a page","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"that opens when you click a report name.","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"command":"webtau scenarios/*.groovy --reportName \"my service\" --reportNameUrl \"https://service-under-test\"","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Maven","content":[{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <reportName>my service</reportName>\n        <reportNameUrl>https://service-under-test</reportNameUrl>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","excludeRegexp":["reportPath","failedReportPath"],"highlight":[14,15,15],"type":"Snippet"}]}],"type":"Tabs"},{"fit":true,"annotate":true,"imageSrc":"/webtau/doc-artifacts/reports/report-name.png","timestamp":1692272675470,"shapes":[{"type":"badge","text":"1","x":41,"y":16,"align":"Center","invertedColors":false}],"width":1310.0,"height":798.0,"type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Configuration","pageMeta":{},"dirName":"report","fileName":"configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Report Path","id":"report-path"},{"title":"Failed Report Path","id":"failed-report-path"},{"title":"Report Name And URL","id":"report-name-and-url"}]}},{"type":"Page","content":[{"id":"registration","title":"Registration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To generate custom reports or upload report data to your server, specify a ","type":"SimpleText"},{"code":"reportGenerator","type":"InlinedCode"},{"text":" config property.","type":"SimpleText"}]},{"lang":"groovy","snippet":"url = \"http://localhost:8080\"\n\nreportGenerator = Report.&generateReport","title":"webtau.cfg.groovy","excludeRegexp":"package","anchorId":"registration-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Report.&generateReport","type":"InlinedCode"},{"text":" is implemented as following","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.rest.report\n\nimport org.testingisdocumenting.webtau.console.ConsoleOutputs\nimport org.testingisdocumenting.webtau.console.ansi.Color\nimport org.testingisdocumenting.webtau.reporter.WebTauReport\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.cfg\n\nclass Report {\n    static void generateReport(WebTauReport report) {\n        def reportPath = cfg.workingDir.resolve('report.txt')\n\n        ConsoleOutputs.out('generating report: ', Color.PURPLE, reportPath)\n        reportPath.toFile().text = report.tests.size()\n    }\n}","title":"scenarios/rest/report/Report.groovy","anchorId":"registration-scenarios-rest-report-report-groovy","type":"Snippet"}]},{"id":"graphql-example","title":"GraphQL Example","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Head over to ","type":"SimpleText"},{"url":"/webtau/GraphQL/report","isFile":false,"type":"Link","content":[{"text":"GraphQL","type":"SimpleText"}]},{"text":" to take a look at custom report to capture additional metrics","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Custom Reports","pageMeta":{},"dirName":"report","fileName":"custom-reports","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Registration","id":"registration"},{"title":"GraphQL Example","id":"graphql-example"}]}},{"type":"Page","content":[{"id":"single-dsl-import","title":"Single DSL Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use multiple WebTau features you can single static import to have all core features available for autocomplete.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It also requires a single dependency to bring all the WebTau modules.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","title":"core import","includeRegexp":"WebTauGroovyDsl","anchorId":"single-dsl-import-core-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you use ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" then all the dependencies are already present.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauDsl.*;","title":"core import","includeRegexp":"WebTauDsl","anchorId":"single-dsl-import-core-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"core-only-import","title":"Core Only Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Alternatively, you can only import ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" for methods like ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"warning","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*","title":"core import","includeRegexp":"WebTauCore","anchorId":"core-only-import-core-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-core-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"core-only-import-maven-dependency","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","title":"core import","includeRegexp":"WebTauCore","anchorId":"core-only-import-core-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-core</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"core-only-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Report","pageTitle":"Import And Dependencies","pageMeta":{},"dirName":"report","fileName":"import-and-dependencies","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Single DSL Import","id":"single-dsl-import"},{"title":"Core Only Import","id":"core-only-import"}]}},{"type":"Page","content":[{"id":"read-eval-print-loop","title":"Read Eval Print Loop","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau command line tool comes with a ","type":"SimpleText"},{"code":"REPL","type":"InlinedCode"},{"text":" mode that stands for 'read-eval-print-loop'. REPL is an established way to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"perform interactive execution of an API for the purpose of learning or experimenting.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The REPL preserves the context of execution and each new command you run can rely on the established context.","type":"SimpleText"}]}]},{"id":"start-repl","title":"Start REPL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To run WebTau in REPL mode run","type":"SimpleText"}]},{"command":"webtau repl","paramsToHighlight":[],"type":"CliCommand"},{"title":"REPL session","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m 2 + 2","\u001B[1m===>\u001B[m 4","\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m a = 5","\u001B[1m===>\u001B[m 5","\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m a + 3","\u001B[1m===>\u001B[m 8"],"anchorId":"start-repl-repl-session","type":"CliOutput"}]},{"id":"experiment-with-api","title":"Experiment With API","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use the REPL to try out various apis like ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":", etc.","type":"SimpleText"}]},{"title":"exploring http.get","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m http.get(\"https://jsonplaceholder.typicode.com/todos/1\")","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m6ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json; charset=utf-8):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"userId\"\u001B[33m: \u001B[34m1\u001B[33m,\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[34m1\u001B[33m,\u001B[0m","    \u001B[35m\"title\"\u001B[33m: \u001B[32m\"delectus aut autem\"\u001B[33m,\u001B[0m","    \u001B[35m\"completed\"\u001B[33m: \u001B[34mfalse\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[33m (\u001B[32m759ms\u001B[33m)\u001B[0m"],"anchorId":"experiment-with-api-exploring-http-get","type":"CliOutput"}]},{"id":"setting-config-value","title":"Setting Config Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cfg.url = \"http://url\"","type":"InlinedCode"},{"text":" to set base url for experiments.","type":"SimpleText"}]},{"title":"setting cfg value","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m cfg.url = \"https://jsonplaceholder.typicode.com\"","\u001B[33m> \u001B[34msetting \u001B[0m\u001B[1murl\u001B[0m","    \u001B[35msource\u001B[33m: \u001B[32m\"manual\"\u001B[0m","    \u001B[35murl\u001B[33m: \u001B[32m\"https://jsonplaceholder.typicode.com\"\u001B[0m","\u001B[32m. \u001B[34mset \u001B[0m\u001B[1murl\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[32m\"https://jsonplaceholder.typicode.com\"\u001B[0m","\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m http.get(\"/todos/1\")","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json; charset=utf-8):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"userId\"\u001B[33m: \u001B[34m1\u001B[33m,\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[34m1\u001B[33m,\u001B[0m","    \u001B[35m\"title\"\u001B[33m: \u001B[32m\"delectus aut autem\"\u001B[33m,\u001B[0m","    \u001B[35m\"completed\"\u001B[33m: \u001B[34mfalse\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[33m (\u001B[32m84ms\u001B[33m)\u001B[0m"],"anchorId":"setting-config-value-setting-cfg-value","type":"CliOutput"}]},{"id":"preserving-browser-context","title":"Preserving Browser Context","type":"Section","content":[{"type":"Paragraph","content":[{"text":"During browser testing the REPL preserves the context of an opened browser, so you can experiment","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"with css selectors and element actions without re-opening the browser and setting the right web app state.","type":"SimpleText"}]},{"title":"opened browser stays","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m browser.open(\"file:///home/runner/work/webtau/webtau/webtau-cli-testing/src/test/groovy/data/basic.html\")","\u001B[33m> \u001B[34minitializing \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[0m","\u001B[32m. \u001B[34minitialized \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[33m (\u001B[32m1s 636ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mopening \u001B[35mfile:///home/runner/work/webtau/webtau/webtau-cli-testing/src/test/groovy/data/basic.html\u001B[0m","\u001B[32m. \u001B[34mopened \u001B[35mfile:///home/runner/work/webtau/webtau/webtau-cli-testing/src/test/groovy/data/basic.html\u001B[33m (\u001B[32m88ms\u001B[33m)\u001B[0m"],"anchorId":"preserving-browser-context-opened-browser-stays","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Using element selectors provides additional information in REPL mode to help with exploration","type":"SimpleText"}]},{"title":"trying css selectors","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m $(\"p\")","\u001B[34mfound single element using \u001B[35mby css \u001B[1m\u001B[35mp\u001B[0m","  \u001B[35minnerText: \u001B[32mhello web page\u001B[0m","  \u001B[33m<\u001B[34mp\u001B[33m>\u001B[0mhello web page\u001B[33m</\u001B[34mp\u001B[33m>\u001B[0m"],"anchorId":"preserving-browser-context-trying-css-selectors","type":"CliOutput"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"REPL","pageTitle":"Experiments","pageMeta":{},"dirName":"REPL","fileName":"experiments","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Read Eval Print Loop","id":"read-eval-print-loop"},{"title":"Start REPL","id":"start-repl"},{"title":"Experiment With API","id":"experiment-with-api"},{"title":"Setting Config Value","id":"setting-config-value"},{"title":"Preserving Browser Context","id":"preserving-browser-context"}]}},{"type":"Page","content":[{"id":"incremental-tests-development","title":"Incremental Tests Development","type":"Section","content":[{"bulletListType":"Steps","type":"Meta"},{"type":"Paragraph","content":[{"text":"You can combine experimentation in REPL with actual test development. Your feedback loop becomes even faster:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Try API","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add the line to test","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Re-run test with REPL","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Experiment within preserved context","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"Enumerate test files you want to REPL with and add ","type":"SimpleText"},{"code":"repl","type":"InlinedCode"},{"text":" to get into incremental tests development mode","type":"SimpleText"}]},{"command":"webtau testscipts/* repl","paramsToHighlight":[],"type":"CliCommand"}]},{"id":"test-files-listing","title":"Test Files Listing","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"ls","type":"InlinedCode"},{"text":" command to list available test files.","type":"SimpleText"}]},{"title":"listing available test files","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m ls","\u001B[34mTest files:\u001B[0m","\u001B[33m0\u001B[35m testscripts/dataDownload.groovy\u001B[0m","\u001B[33m1\u001B[35m testscripts/downstreamValidation.groovy\u001B[0m","\u001B[33m2\u001B[35m testscripts/resourceCreation.groovy\u001B[0m"],"anchorId":"test-files-listing-listing-available-test-files","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Note: Listing will happen automatically at the start","type":"SimpleText"}]}]},{"id":"test-file-selection","title":"Test File Selection","type":"Section","content":[{"title":"select test file by index","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s 0","\u001B[34mTest scenarios of \u001B[35mtestscripts/dataDownload.groovy\u001B[34m:\u001B[0m","\u001B[33m0\u001B[35m clean data\u001B[0m","\u001B[33m1\u001B[35m download data\u001B[0m","\u001B[33m2\u001B[35m validate data\u001B[0m"],"anchorId":"test-file-selection-select-test-file-by-index","type":"CliOutput"},{"title":"get back to file selection","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m b","\u001B[34mTest files:\u001B[0m","\u001B[33m0\u001B[35m testscripts/dataDownload.groovy\u001B[0m","\u001B[33m1\u001B[35m testscripts/downstreamValidation.groovy\u001B[0m","\u001B[33m2\u001B[35m testscripts/resourceCreation.groovy\u001B[0m"],"anchorId":"test-file-selection-get-back-to-file-selection","type":"CliOutput"},{"title":"select test file by text","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s 'datadownload'","\u001B[34mTest scenarios of \u001B[35mtestscripts/dataDownload.groovy\u001B[34m:\u001B[0m","\u001B[33m0\u001B[35m clean data\u001B[0m","\u001B[33m1\u001B[35m download data\u001B[0m","\u001B[33m2\u001B[35m validate data\u001B[0m"],"anchorId":"test-file-selection-select-test-file-by-text","type":"CliOutput"}]},{"id":"single-test-scenario-run","title":"Single Test Scenario Run","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Selected test file has three scenarios","type":"SimpleText"}]},{"lang":"groovy","snippet":"package testscripts\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.scenario\n\nscenario(\"clean data\") {\n    println \"cleaning...\"\n}\n\nscenario(\"download data\") {\n    println \"downloading...\"\n}\n\nscenario(\"validate data\") {\n    println \"validating...\"\n}","title":"testscripts/dataDownload.groovy","anchorId":"single-test-scenario-run-testscripts-datadownload-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To run scenario by index","type":"SimpleText"}]},{"title":"run test scenario by an index","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 0","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m before first test \u001B[35m(Setup)\u001B[0m","\u001B[32m[.] \u001B[34mbefore first test \u001B[35m(Setup)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"single-test-scenario-run-run-test-scenario-by-an-index","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Use negative index to select from the bottom, i.e. -1 will select the last scenario, -2 will select second from the end","type":"SimpleText"}]},{"title":"run test scenario by a negative index","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r -1","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"single-test-scenario-run-run-test-scenario-by-a-negative-index","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"To run scenario by partial name match","type":"SimpleText"}]},{"title":"run test scenario by text","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'clean'","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"single-test-scenario-run-run-test-scenario-by-text","type":"CliOutput"}]},{"id":"re-run-last-run","title":"Re-run Last Run","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"r","type":"InlinedCode"},{"text":" to re-run previous run","type":"SimpleText"}]},{"title":"run test scenario by text","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"re-run-last-run-run-test-scenario-by-text","type":"CliOutput"}]},{"id":"multiple-test-scenarios-run","title":"Multiple Test Scenarios Run","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use comma separated list of indexes or partial text match to run more than one scenario","type":"SimpleText"}]},{"title":"run multiple scenario by indexes","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 0, 1","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"multiple-test-scenarios-run-run-multiple-scenario-by-indexes","type":"CliOutput"},{"title":"run multiple scenarios by partial text matches","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'download', 'clean'","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"multiple-test-scenarios-run-run-multiple-scenarios-by-partial-text-matches","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Note: Order of execution follows the order of specified indexes or text","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"r from:to","type":"InlinedCode"},{"text":" to run a range of scenarios. ","type":"SimpleText"},{"code":"From","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"to","type":"InlinedCode"},{"text":" can be either index or partial text match.","type":"SimpleText"}]},{"title":"run multiple scenarios by mixed range","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 0:'validate'","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"multiple-test-scenarios-run-run-multiple-scenarios-by-mixed-range","type":"CliOutput"},{"title":"run multiple scenarios by range in reverse","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'validate':0","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"multiple-test-scenarios-run-run-multiple-scenarios-by-range-in-reverse","type":"CliOutput"}]},{"id":"select-scenarios-without-run","title":"Select Scenarios Without Run","type":"Section","content":[{"lang":"groovy","snippet":"package testscripts\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.scenario\n\nscenario(\"clean data\") {\n    println \"cleaning...\"\n}\n\nscenario(\"download data\") {\n    println \"downloading...\"\n}\n\nscenario(\"validate data\") {\n    println \"validating...\"\n}","title":"testscripts/dataDownload.groovy","anchorId":"select-scenarios-without-run-testscripts-datadownload-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Lets run scenarios by ranage again","type":"SimpleText"}]},{"title":"run multiple scenarios by range in reverse","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'validate':0","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"anchorId":"select-scenarios-without-run-run-multiple-scenarios-by-range-in-reverse","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"s","type":"InlinedCode"},{"text":" to display last ran or selected scenarios. These scenarios will be ran with ","type":"SimpleText"},{"code":"r","type":"InlinedCode"}]},{"title":"display selected scenarios","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s","\u001B[34mSelected scenarios:\u001B[0m","  validate data\u001B[0m","  download data\u001B[0m","  clean data\u001B[0m"],"anchorId":"select-scenarios-without-run-display-selected-scenarios","type":"CliOutput"},{"title":"select scenarios without run","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s 0,2","\u001B[34mSelected scenarios:\u001B[0m","  clean data\u001B[0m","  validate data\u001B[0m"],"anchorId":"select-scenarios-without-run-select-scenarios-without-run","type":"CliOutput"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"REPL","pageTitle":"Test Runs","pageMeta":{},"dirName":"REPL","fileName":"test-runs","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Incremental Tests Development","id":"incremental-tests-development"},{"title":"Test Files Listing","id":"test-files-listing"},{"title":"Test File Selection","id":"test-file-selection"},{"title":"Single Test Scenario Run","id":"single-test-scenario-run"},{"title":"Re-run Last Run","id":"re-run-last-run"},{"title":"Multiple Test Scenarios Run","id":"multiple-test-scenarios-run"},{"title":"Select Scenarios Without Run","id":"select-scenarios-without-run"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"data","type":"InlinedCode"},{"text":" module streamlines access to test data.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Data access generates ","type":"SimpleText"},{"url":"/webtau/report/steps","isFile":false,"type":"Link","content":[{"text":"Report Steps","type":"SimpleText"}]},{"text":" to help with tests investigation.","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/data/json","isFile":false,"type":"Link","content":[{"text":"json","type":"SimpleText"}]},{"text":" - access JSON test data","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/data/csv","isFile":false,"type":"Link","content":[{"text":"csv","type":"SimpleText"}]},{"text":" - access CSV test data","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/data/pdf","isFile":false,"type":"Link","content":[{"text":"pdf","type":"SimpleText"}]},{"text":" - access PDF data to validate","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/data/base64","isFile":false,"type":"Link","content":[{"text":"base64","type":"SimpleText"}]},{"text":" - encode and decode base64","type":"SimpleText"}]}]}]},{"lang":"groovy","snippet":"TableData table = data.csv.table(\"data/table.csv\")","title":"read table data from csv","surroundedBy":"// read","anchorId":"read-table-data-from-csv","type":"Snippet"},{"title":"console output","lines":["\u001B[33m> \u001B[34mreading \u001B[36mcsv \u001B[33mfrom \u001B[36mfile or resource \u001B[35mdata/table.csv\u001B[0m","\u001B[32m. \u001B[34mread \u001B[34m3 \u001B[36mlines of csv \u001B[33mfrom \u001B[36mfile \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/data/table.csv\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"console-output","type":"CliOutput"}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Data","pageTitle":"Introduction","pageMeta":{},"dirName":"data","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"read-list","title":"Read List","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.list","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" from JSON file. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"paths":["root[0].name","root[1].payload.info"],"autoTitle":true,"data":[{"id":"id1","name":"hello","payload":{"info":"additional id1 payload"}},{"id":"id2","name":"world","payload":{"info":"additional id2 payload"}}],"title":"data/flat-list.json","anchorId":"read-list-data-flat-list-json","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = data.json.list(\"data/flat-list.json\")\nlist[0].name.should == \"hello\"\nlist[1].payload.should == [info: ~/id2 payload/]","title":"read json as list","surroundedBy":["// read-json-list","// validate-json-list"],"anchorId":"read-list-read-json-as-list","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = data.json.list(\"data/flat-list.json\");\nactual(list.get(0).get(\"name\")).should(equal(\"hello\"));\nactual(list.get(1).get(\"payload\")).should(\n        equal(map(\"info\", Pattern.compile(\"id2 payload\"))));","title":"read json as list","surroundedBy":["// read-json-list","// validate-json-list"],"anchorId":"read-list-read-json-as-list-2","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"code":"read","type":"InlinedCode"},{"text":" methods produce additional report to help with tests investigation","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[33m> \u001B[34mreading \u001B[36mjson \u001B[33mfrom \u001B[36mfile or resource \u001B[35mdata/flat-list.json\u001B[0m","\u001B[32m. \u001B[34mread \u001B[34m16 \u001B[36mlines of json \u001B[33mfrom \u001B[36mfile \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/data/flat-list.json\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"anchorId":"read-list-console-output","type":"CliOutput"}]},{"id":"read-map","title":"Read Map","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.map","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from JSON file. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute path. Or it can be a resource class path.","type":"SimpleText"}]},{"paths":["root.payload.info"],"autoTitle":true,"data":{"id":"id1","name":"hello","payload":{"info":"additional id1 payload"}},"title":"data/root-map.json","anchorId":"read-map-data-root-map-json","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def map = data.json.map(\"data/root-map.json\")\nmap.payload.should == [info: \"additional id1 payload\"]","title":"read json as map","surroundedBy":["// read-json-map"],"anchorId":"read-map-read-json-as-map","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Map<String, ?> map = data.json.map(\"data/root-map.json\");\nactual(map.get(\"payload\")).should(equal(map(\"info\", \"additional id1 payload\")));","title":"read json as map","surroundedBy":["// read-json-map"],"anchorId":"read-map-read-json-as-map-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"read-tabledata","title":"Read TableData","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.table","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from JSON file. JSON must be a list. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"autoTitle":true,"data":[{"id":"id1","name":"hello","payload":{"info":"additional id1 payload"}},{"id":"id2","name":"world","payload":{"info":"additional id2 payload"}}],"paths":[],"title":"data/flat-list.json","anchorId":"read-tabledata-data-flat-list-json","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def table = data.json.table(\"data/flat-list.json\")\ntable.should == [ \"id\" |  \"name\" |           \"payload\"] {\n                _________________________________________\n                 \"id1\" | \"hello\" | [info: ~/id1 payload/]\n                 \"id2\" | \"world\" | [info: ~/id2 payload/] }","title":"read json as table","surroundedBy":["// read-json-table"],"anchorId":"read-tabledata-read-json-as-table","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData jsonTable = data.json.table(\"data/flat-list.json\");\nTableData expected = table(\"id\" , \"name\"  ,                                      \"payload\",\n                          ________________________________________________________________,\n                           \"id1\", \"hello\" , map(\"info\", Pattern.compile(\"id1 payload\")),\n                           \"id2\", \"world\" , map(\"info\", Pattern.compile(\"id2 payload\")));\nactual(jsonTable).should(equal(expected));","title":"read json as table","surroundedBy":["// read-json-table"],"anchorId":"read-tabledata-read-json-as-table-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"read-object","title":"Read Object","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.object","type":"InlinedCode"},{"text":" to read data as either ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" or a single value from JSON file. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"autoTitle":true,"data":"hello world","paths":[],"title":"data/single.json","anchorId":"read-object-data-single-json","type":"Json"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def object = data.json.object(\"data/single.json\")\nobject.should == \"hello world\"","title":"read json as object","entry":"parse json as object from resource","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Object object = data.json.object(\"data/single.json\");\nactual(object).should(equal(\"hello world\"));","title":"read json as object","entry":"readObject","bodyOnly":true,"anchorId":"read-object-read-json-as-object","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"parse-map","title":"Parse Map","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.mapFromString","type":"InlinedCode"},{"text":" to parse given JSON string as ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def map = data.json.mapFromString(\"\"\"{\"key\": \"value\"}\"\"\")\nmap.should == [key: \"value\"]","title":"parse json as map","entry":"parse map from string","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Map<String, ?> map = data.json.mapFromString(\"{\\\"key\\\": \\\"value\\\"})\");\nactual(map).should(equal(map(\"key\", \"value\")));","title":"parse json as map","entry":"parseMap","bodyOnly":true,"anchorId":"parse-map-parse-json-as-map","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"parse-list","title":"Parse List","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.listFromString","type":"InlinedCode"},{"text":" to parse given JSON string as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = data.json.listFromString(\"\"\"[{\"key1\": \"value1\"}, {\"key2\": \"value2\"}]\"\"\")\nlist.should == [\n        [key1: \"value1\"],\n        [key2: \"value2\"]]","title":"parse json as list","entry":"parse list from string","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = data.json.listFromString(\"[{\\\"key1\\\": \\\"value1\\\"}, {\\\"key2\\\": \\\"value2\\\"}]\");\nactual(list).should(equal(list(\n        map(\"key1\", \"value1\"),\n        map(\"key2\", \"value2\"))));","title":"parse json as list","entry":"parseList","bodyOnly":true,"anchorId":"parse-list-parse-json-as-list","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"parse-tabledata","title":"Parse TableData","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.tableFromString","type":"InlinedCode"},{"text":" to parse given JSON string as ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def table = data.json.tableFromString(\"\"\"\n [\n   {\n     \"id\": \"id1\",\n     \"name\": \"hello\",\n     \"payload\": {\n       \"info\": \"additional id1 payload\"\n     }\n   },\n   {\n     \"id\": \"id2\",\n     \"name\": \"world\",\n     \"payload\": {\n       \"info\": \"additional id2 payload\"\n     }\n   }\n ]\n \"\"\")\n\n table.should == [ \"id\" |  \"name\" |           \"payload\"] {\n                  _________________________________________\n                  \"id1\" | \"hello\" | [info: ~/id1 payload/]\n                  \"id2\" | \"world\" | [info: ~/id2 payload/] }","title":"parse json as table","entry":"parse table from string","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData jsonTable = data.json.tableFromString(\"[\\n\" +\n        \"  {\\n\" +\n        \"    \\\"id\\\": \\\"id1\\\",\\n\" +\n        \"    \\\"name\\\": \\\"hello\\\",\\n\" +\n        \"    \\\"payload\\\": {\\n\" +\n        \"      \\\"info\\\": \\\"additional id1 payload\\\"\\n\" +\n        \"    }\\n\" +\n        \"  },\\n\" +\n        \"  {\\n\" +\n        \"    \\\"id\\\": \\\"id2\\\",\\n\" +\n        \"    \\\"name\\\": \\\"world\\\",\\n\" +\n        \"    \\\"payload\\\": {\\n\" +\n        \"      \\\"info\\\": \\\"additional id2 payload\\\"\\n\" +\n        \"    }\\n\" +\n        \"  }\\n\" +\n        \"]\");\n\nTableData expected = table(\"id\" , \"name\"  ,                                      \"payload\",\n                           __________________________________________________________________,\n                           \"id1\", \"hello\" , map(\"info\", Pattern.compile(\"id1 payload\")),\n                           \"id2\", \"world\" , map(\"info\", Pattern.compile(\"id2 payload\")));\n\nactual(jsonTable).should(equal(expected));","title":"parse json as table","entry":"parseTable","bodyOnly":true,"anchorId":"parse-tabledata-parse-json-as-table","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"parse-object","title":"Parse Object","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.objectFromString","type":"InlinedCode"},{"text":" to parse given JSON string as either ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" or a single value from JSON file.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def object = data.json.objectFromString(\"\\\"hello world\\\"\")\nobject.should == \"hello world\"","title":"parse json as object","entry":"parse json as object from string","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Object list = data.json.objectFromString(\"\\\"hello world\\\"\");\nactual(list).should(equal(\"hello world\"));","title":"parse json as object","entry":"parseObject","bodyOnly":true,"anchorId":"parse-object-parse-json-as-object","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"write-list","title":"Write List","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.write","type":"InlinedCode"},{"text":" to write data to JSON file.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = [\n        [\"colA\": 1, \"colB\": \"R1\"],\n        [\"colA\": 2, \"colB\": \"R2\"]]","surroundedBy":"// json-list-data","title":"data","anchorId":"write-list-data","type":"Snippet"},{"lang":"groovy","snippet":"def path = data.json.write(\"generated/from-list-maps.json\", list)","surroundedBy":"write-json-list-maps","title":"write list of maps","anchorId":"write-list-write-list-of-maps","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = list(\n        map(\"colA\", 1, \"colB\", \"R1\"),\n        map(\"colA\", 2, \"colB\", \"R2\"));","title":"data","surroundedBy":["// list-data"],"anchorId":"write-list-data-2","type":"Snippet"},{"lang":"java","snippet":"Path path = data.json.write(\"generated/from-list-maps.json\", list);","title":"write list of maps","surroundedBy":["write-json-list-maps"],"anchorId":"write-list-write-list-of-maps-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"code":"write","type":"InlinedCode"},{"text":" methods produce additional information that helps with tests investigation","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[33m> \u001B[34mwriting \u001B[36mjson \u001B[33mto \u001B[36mfile \u001B[35mgenerated/from-list-maps.json\u001B[0m","\u001B[32m. \u001B[34mwrote \u001B[34m7 \u001B[36mlines \u001B[33mto \u001B[36mjson \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/generated/from-list-maps.json\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"write-list-console-output","type":"CliOutput"},{"lang":"json","snippet":"[ {\n  \"colA\" : 1,\n  \"colB\" : \"R1\"\n}, {\n  \"colA\" : 2,\n  \"colB\" : \"R2\"\n} ]","autoTitle":true,"title":"generated/from-list-maps.json","anchorId":"write-list-generated-from-list-maps-json","type":"Snippet"}]},{"id":"write-map","title":"Write Map","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def map = [\"colA\": 1, \"colB\": \"R1\"]","surroundedBy":"// json-map-data","title":"data","anchorId":"write-map-data","type":"Snippet"},{"lang":"groovy","snippet":"def path = data.json.write(\"generated/from-map.json\", map)","surroundedBy":"write-json-map","title":"write map","anchorId":"write-map-write-map","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Map<String, ?> map = map(\"colA\", 1, \"colB\", \"R1\");","title":"data","surroundedBy":["// map-data"],"anchorId":"write-map-data-2","type":"Snippet"},{"lang":"java","snippet":"Path path = data.json.write(\"generated/from-list-maps.json\", map);","title":"write list of maps","surroundedBy":["write-json-map"],"anchorId":"write-map-write-list-of-maps","type":"Snippet"}]}],"type":"Tabs"},{"lang":"json","snippet":"{\n  \"colA\" : 1,\n  \"colB\" : \"R1\"\n}","autoTitle":true,"title":"generated/from-map.json","anchorId":"write-map-generated-from-map-json","type":"Snippet"}]},{"id":"write-table-data","title":"Write Table Data","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"TableData table = [\"id\"  | \"value\"] {\n                   ________________\n                   \"id1\" | \"value1\"\n                   \"id2\" | \"value2\" }","surroundedBy":"// json-table-data","title":"data","anchorId":"write-table-data-data","type":"Snippet"},{"lang":"groovy","snippet":"def path = data.json.write(\"generated/from-table-data.json\", table)","surroundedBy":"write-json-table","title":"write table data","anchorId":"write-table-data-write-table-data","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData csvTable = table(\"id\"  , \"value\",\n                           ________________,\n                           \"id1\" , \"value1\",\n                           \"id2\" , \"value2\");","title":"data","surroundedBy":["// table-data"],"anchorId":"write-table-data-data-2","type":"Snippet"},{"lang":"java","snippet":"Path path = data.json.write(\"generated/from-table-data.json\", csvTable);","title":"write table data","surroundedBy":["write-json-table"],"anchorId":"write-table-data-write-table-data-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"code":"write","type":"InlinedCode"},{"text":" methods produce additional information that helps with tests investigation","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[33m> \u001B[34mwriting \u001B[36mjson \u001B[33mto \u001B[36mfile \u001B[35mgenerated/from-table-data.json\u001B[0m","\u001B[32m. \u001B[34mwrote \u001B[34m7 \u001B[36mlines \u001B[33mto \u001B[36mjson \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/generated/from-table-data.json\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"write-table-data-console-output","type":"CliOutput"},{"lang":"json","snippet":"[ {\n  \"id\" : \"id1\",\n  \"value\" : \"value1\"\n}, {\n  \"id\" : \"id2\",\n  \"value\" : \"value2\"\n} ]","autoTitle":true,"title":"generated/from-table-data.json","anchorId":"write-table-data-generated-from-table-data-json","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Data","pageTitle":"Json","pageMeta":{},"dirName":"data","fileName":"json","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Read List","id":"read-list"},{"title":"Read Map","id":"read-map"},{"title":"Read TableData","id":"read-tabledata"},{"title":"Read Object","id":"read-object"},{"title":"Parse Map","id":"parse-map"},{"title":"Parse List","id":"parse-list"},{"title":"Parse TableData","id":"parse-tabledata"},{"title":"Parse Object","id":"parse-object"},{"title":"Write List","id":"write-list"},{"title":"Write Map","id":"write-map"},{"title":"Write Table Data","id":"write-table-data"}]}},{"type":"Page","content":[{"id":"table-data","title":"Table Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.table","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from CSV file. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"table":{"columns":[{"title":"A"},{"title":"B"},{"title":"C"}],"data":[[[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"c","type":"SimpleText"}]}]]]},"title":"data/table.csv","anchorId":"table-data-data-table-csv","type":"Table"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"TableData table = data.csv.table(\"data/table.csv\")","title":"read table data from csv","surroundedBy":"// read","anchorId":"table-data-read-table-data-from-csv","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData table = data.csv.table(\"data/table.csv\");","title":"read table data from csv","surroundedBy":["// read-table"],"anchorId":"table-data-read-table-data-from-csv-2","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"code":"read","type":"InlinedCode"},{"text":" methods produce additional report to help with tests investigation","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[33m> \u001B[34mreading \u001B[36mcsv \u001B[33mfrom \u001B[36mfile or resource \u001B[35mdata/table.csv\u001B[0m","\u001B[32m. \u001B[34mread \u001B[34m3 \u001B[36mlines of csv \u001B[33mfrom \u001B[36mfile \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/data/table.csv\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"table-data-console-output","type":"CliOutput"}]},{"id":"table-data-conversion","title":"Table Data Conversion","type":"Section","content":[{"type":"Paragraph","content":[{"text":"By default, ","type":"SimpleText"},{"code":"data.csv","type":"InlinedCode"},{"text":" treats numeric values as strings and does not distinct between strings and dates. Pass ","type":"SimpleText"},{"code":"valueConverter","type":"InlinedCode"},{"text":" function to convert values according to your business logic.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def valueConverter = { columnName, value -> columnName == \"date\" ?\n        LocalDate.parse(value):\n        value }","title":"converter definition","surroundedBy":"// csv-data-converter","noGap":true,"anchorId":"table-data-conversion-converter-definition","type":"Snippet"},{"lang":"groovy","snippet":"def table = data.csv.table(\"data/with-dates.csv\", valueConverter)\ntable.row(0).date.should == LocalDate.of(2022, 11, 26)\ntable.row(0).date.class.canonicalName.should == \"java.time.LocalDate\"","title":"converter usage","surroundedBy":"// csv-read-table-converter","noGap":true,"anchorId":"table-data-conversion-converter-usage","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"DataCsvValueConverter valueConverter = (columnName, value) -> columnName.equals(\"date\") ?\n        LocalDate.parse(value):\n        value;","title":"converter definition","surroundedBy":"// csv-data-converter","noGap":true,"anchorId":"table-data-conversion-converter-definition-2","type":"Snippet"},{"lang":"java","snippet":"TableData table = data.csv.table(\"data/with-dates.csv\", valueConverter);\nactual(table.row(0).get(\"date\")).should(equal(LocalDate.of(2022, 11, 26)));\nactual(table.row(0).get(\"date\").getClass().getCanonicalName()).should(equal(\"java.time.LocalDate\"));","title":"converter usage","surroundedBy":"// csv-read-table-converter","noGap":true,"anchorId":"table-data-conversion-converter-usage-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"If you only need to deal with numbers, use ","type":"SimpleText"},{"code":"tableAutoConverted","type":"InlinedCode"},{"text":" variant that automatically convert numeric values into ","type":"SimpleText"},{"code":"Number","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def table = data.csv.tableAutoConverted(\"data/table.csv\")\ntable.row(0).B.should == 2\ntable.row(0).B.class.canonicalName.should == \"java.lang.Long\"","title":"read table data from csv with auto conversion","anchorId":"table-data-conversion-read-table-data-from-csv-with-auto-conversion","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData table = data.csv.tableAutoConverted(\"data/table.csv\");\nactual(table.row(0).get(\"B\")).should(equal(2));\nactual(table.row(0).get(\"B\").getClass().getCanonicalName()).should(equal(\"java.lang.Long\"));","title":"read table data from csv with auto conversion","surroundedBy":["// read-table-auto-converted"],"anchorId":"table-data-conversion-read-table-data-from-csv-with-auto-conversion-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"list-of-map","title":"List Of Map","type":"Section","content":[{"table":{"columns":[{"title":"A"},{"title":"B"},{"title":"C"}],"data":[[[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"c","type":"SimpleText"}]}]]]},"title":"data/table.csv","anchorId":"list-of-map-data-table-csv","type":"Table"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.listOfMaps","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from CSV file. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = data.csv.listOfMaps(\"data/table.csv\")\nlist.get(0).B.should == \"2\"\nlist.get(0).B.class.canonicalName.should == \"java.lang.String\"","title":"read list of maps from csv","anchorId":"list-of-map-read-list-of-maps-from-csv","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, String>> list = data.csv.listOfMaps(\"data/table.csv\");\nactual(list.get(0).get(\"B\")).should(equal(\"2\"));\nactual(list.get(0).get(\"B\").getClass().getCanonicalName()).should(equal(\"java.lang.String\"));","title":"read list of maps from csv","surroundedBy":["// read-list-of-maps"],"anchorId":"list-of-map-read-list-of-maps-from-csv-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: by default numeric values are read as strings, to auto convert numeric values to actual numbers use ","type":"SimpleText"},{"code":"tableAutoConverted","type":"InlinedCode"},{"text":" method","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.listOfMapsAutoConverted","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from CSV file. Numeric values become values of Numeric type instead of String type. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = data.csv.listOfMapsAutoConverted(\"data/table.csv\")\nlist.get(0).B.should == 2\nlist.get(0).B.class.canonicalName.should == \"java.lang.Long\"","title":"read list of maps from csv with auto conversion","anchorId":"list-of-map-read-list-of-maps-from-csv-with-auto-conversion","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = data.csv.listOfMapsAutoConverted(\"data/table.csv\");\nactual(list.get(0).get(\"B\")).should(equal(2));\nactual(list.get(0).get(\"B\").getClass().getCanonicalName()).should(equal(\"java.lang.Long\"));","title":"read list of maps from csv with auto conversion","surroundedBy":["// read-list-of-maps-auto-converted"],"anchorId":"list-of-map-read-list-of-maps-from-csv-with-auto-conversion-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"specify-header","title":"Specify Header","type":"Section","content":[{"lang":"csv","snippet":"1, 2, 3\na, b, c","title":"data/table-no-header.csv","anchorId":"specify-header-data-table-no-header-csv","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.listOfMapsAutoConverted(header, path)","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from CSV file. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Header will be taken from first parameter and first row of CSV file will not be treated as header. Numeric values become values of Numeric type instead of String type. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = data.csv.listOfMapsAutoConverted([\"C1\", \"C2\", \"C3\"], \"data/table-no-header.csv\")\nlist.get(0).C2.should == 2\nlist.get(0).C2.class.canonicalName.should == \"java.lang.Long\"","title":"read list of maps from csv with auto conversion","anchorId":"specify-header-read-list-of-maps-from-csv-with-auto-conversion","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = data.csv.listOfMapsAutoConverted(list(\"C1\", \"C2\", \"C3\"), \"data/table-no-header.csv\");\nactual(list.get(0).get(\"C2\")).should(equal(2));\nactual(list.get(0).get(\"C2\").getClass().getCanonicalName()).should(equal(\"java.lang.Long\"));","title":"read list of maps from csv with auto conversion","surroundedBy":["// read-list-of-maps-header"],"anchorId":"specify-header-read-list-of-maps-from-csv-with-auto-conversion-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"write-list","title":"Write List","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.write","type":"InlinedCode"},{"text":" to write data to CSV file.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = [\n    [\"colA\": 1, \"colB\": \"R1\"],\n    [\"colA\": 2, \"colB\": \"R2\"]]","surroundedBy":"// csv-list-data","title":"data","anchorId":"write-list-data","type":"Snippet"},{"lang":"groovy","snippet":"def path = data.csv.write(\"generated/from-list-maps.csv\", list)","surroundedBy":"write-csv-list-maps","title":"write list of maps","anchorId":"write-list-write-list-of-maps","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = list(\n        map(\"colA\", 1, \"colB\", \"R1\"),\n        map(\"colA\", 2, \"colB\", \"R2\"));","title":"data","surroundedBy":["// list-data"],"anchorId":"write-list-data-2","type":"Snippet"},{"lang":"java","snippet":"Path path = data.csv.write(\"generated/from-list-maps.csv\", list);","title":"write list of maps","surroundedBy":["write-csv-list-maps"],"anchorId":"write-list-write-list-of-maps-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"code":"write","type":"InlinedCode"},{"text":" methods produce additional information that helps with tests investigation","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[33m> \u001B[34mwriting \u001B[36mcsv \u001B[33mto \u001B[36mfile \u001B[35mgenerated/from-list-maps.csv\u001B[0m","\u001B[32m. \u001B[34mwrote \u001B[34m4 \u001B[36mlines \u001B[33mto \u001B[36mcsv \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/generated/from-list-maps.csv\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"anchorId":"write-list-console-output","type":"CliOutput"},{"lang":"csv","snippet":"colA,colB\n1,R1\n2,R2","autoTitle":true,"title":"generated/from-list-maps.csv","anchorId":"write-list-generated-from-list-maps-csv","type":"Snippet"}]},{"id":"write-table-data","title":"Write Table Data","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"TableData table = [\"id\"  | \"value\"] {\n                   ________________\n                   \"id1\" | \"value1\"\n                   \"id2\" | \"value2\" }","surroundedBy":"// csv-table-data","title":"data","anchorId":"write-table-data-data","type":"Snippet"},{"lang":"groovy","snippet":"def path = data.csv.write(\"generated/from-table-data.csv\", table)","surroundedBy":"write-csv-table","title":"write table","anchorId":"write-table-data-write-table","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData csvTable = table(\"id\"  , \"value\",\n                           ________________,\n                           \"id1\" , \"value1\",\n                           \"id2\" , \"value2\");","title":"data","surroundedBy":["// table-data"],"anchorId":"write-table-data-data-2","type":"Snippet"},{"lang":"java","snippet":"Path path = data.csv.write(\"generated/from-table-data.csv\", csvTable);","title":"write table","surroundedBy":["write-csv-table"],"anchorId":"write-table-data-write-table-2","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"code":"write","type":"InlinedCode"},{"text":" methods produce additional information that helps with tests investigation","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[33m> \u001B[34mwriting \u001B[36mcsv \u001B[33mto \u001B[36mfile \u001B[35mgenerated/from-table-data.csv\u001B[0m","\u001B[32m. \u001B[34mwrote \u001B[34m4 \u001B[36mlines \u001B[33mto \u001B[36mcsv \u001B[35m/home/runner/work/webtau/webtau/webtau-feature-testing/examples/generated/from-table-data.csv\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"write-table-data-console-output","type":"CliOutput"},{"lang":"csv","snippet":"id,value\nid1,value1\nid2,value2","autoTitle":true,"title":"generated/from-table-data.csv","anchorId":"write-table-data-generated-from-table-data-csv","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Data","pageTitle":"Csv","pageMeta":{},"dirName":"data","fileName":"csv","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Table Data","id":"table-data"},{"title":"Table Data Conversion","id":"table-data-conversion"},{"title":"List Of Map","id":"list-of-map"},{"title":"Specify Header","id":"specify-header"},{"title":"Write List","id":"write-list"},{"title":"Write Table Data","id":"write-table-data"}]}},{"type":"Page","content":[{"id":"read-file-or-resource","title":"Read File Or Resource","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.pdf.read(String)","type":"InlinedCode"},{"text":" to read and parse PDF from a path. ","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":" Passed path is either relative based on working dir or absolute path. Or it can be a resource class path.","type":"SimpleText"}]},{"lang":"groovy","snippet":"Pdf pdf = data.pdf.read(\"sample.pdf\")\npdf.pageText(0).should contain('Test text paragraph Test')","title":"read and assert pdf","entry":"read pdf from resource","bodyOnly":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]}]},{"id":"http-response","title":"HTTP response","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.pdf.parse(body)","type":"InlinedCode"},{"text":" to parse and assert PDF content from binary response.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"http.get(\"/report\") {\n    data.pdf.read(body).pageText(0).should contain(\"Quarterly earnings:\")\n}","title":"HTTP pdf response assertion","entry":"download pdf and assert page text using contains","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"http.get(\"/report\", ((header, body) -> {\n    data.pdf.read(body).pageText(0).should(contain(\"Quarterly earnings:\"));\n}));","title":"HTTP pdf response assertion","entry":"downloadPdfAndAssertPageTextUsingContains","bodyOnly":true,"anchorId":"http-response-http-pdf-response-assertion","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Learn More about ","type":"SimpleText"},{"url":"/webtau/HTTP/body#pdf-response","isFile":false,"type":"Link","content":[{"text":"HTTP response","type":"SimpleText"}]}]}]},{"id":"read-bytes","title":"Read Bytes","type":"Section","content":[{"lang":"groovy","snippet":"byte[] pdfContent = pdfBinaryContent()\nPdf pdf = data.pdf.read(pdfContent)\npdf.pageText(0).should contain('Test text paragraph Test')","title":"read and assert pdf from bytes","entry":"read pdf from bytes","bodyOnly":true,"type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Data","pageTitle":"Pdf","pageMeta":{},"dirName":"data","fileName":"pdf","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Read File Or Resource","id":"read-file-or-resource"},{"title":"HTTP response","id":"http-response"},{"title":"Read Bytes","id":"read-bytes"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Check ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"Import And Dependencies","type":"SimpleText"}]},{"text":" for prerequisites.","type":"SimpleText"}]},{"id":"encode","title":"Encode","type":"Section","content":[{"lang":"groovy","snippet":"String encoded = data.base64.encode(\"hello world\")\nencoded.should == \"aGVsbG8gd29ybGQ=\"","title":"string encoding","entry":"encode text","bodyOnly":true,"type":"Snippet"}]},{"id":"decode","title":"Decode","type":"Section","content":[{"lang":"groovy","snippet":"String decoded = data.base64.decode(\"aGVsbG8gd29ybGQ=\")\ndecoded.should == \"hello world\"","title":"string decoding","entry":"decode text","bodyOnly":true,"type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Data","pageTitle":"Base64","pageMeta":{},"dirName":"data","fileName":"base64","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Encode","id":"encode"},{"title":"Decode","id":"decode"}]}},{"type":"Page","content":[{"id":"single-dsl-import","title":"Single DSL Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you use multiple WebTau features you can single static import to have all core features available for autocomplete.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It also requires a single dependency to bring all the WebTau modules.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","title":"core import","includeRegexp":"WebTauGroovyDsl","anchorId":"single-dsl-import-core-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you use ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" then all the dependencies are already present.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauDsl.*;","title":"core import","includeRegexp":"WebTauDsl","anchorId":"single-dsl-import-core-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"single-dsl-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"data-specific-import","title":"Data Specific Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To only import ","type":"SimpleText"},{"code":"data","type":"InlinedCode"},{"text":" module use","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.data.Data.data","title":"data import","includeRegexp":"data.Data.data","anchorId":"data-specific-import-data-import","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-data</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"data-specific-import-maven-dependency","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.data.Data.data;","title":"data import","includeRegexp":"data.Data.data","anchorId":"data-specific-import-data-import-2","type":"Snippet"},{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-data</artifactId>\n    <version>2.0</version>\n</dependency>","title":"maven dependency","anchorId":"data-specific-import-maven-dependency-2","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Data","pageTitle":"Import And Dependencies","pageMeta":{},"dirName":"data","fileName":"import-and-dependencies","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Single DSL Import","id":"single-dsl-import"},{"title":"Data Specific Import","id":"data-specific-import"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau has several modules to help you simplify automation processes. All operations in the modules provide","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"detailed information on steps executed and details are included in web report as well as console output.","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/utilities/file-system","isFile":false,"type":"Link","content":[{"text":"file system","type":"SimpleText"}]},{"text":" - module to create files, directories, reading data, unzipping, etc","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/utilities/cache","isFile":false,"type":"Link","content":[{"text":"cache","type":"SimpleText"}]},{"text":" - module to cache results of test steps to be able to skip them during test development and exploration","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Utilities","pageTitle":"Introduction","pageMeta":{},"dirName":"utilities","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"file-content","title":"File Content","type":"Section","content":[{"lang":"groovy","snippet":"def path = fs.writeText('my-test-file.txt', 'hello world')","title":"write content to a file","includeRegexp":["fs\\.writeText"],"anchorId":"file-content-write-content-to-a-file","type":"Snippet"},{"lang":"groovy","snippet":"fs.textContent('my-test-file.txt').should == 'hello world\\nid=15'","title":"validate file content","surroundedBy":"assert-file","anchorId":"file-content-validate-file-content","type":"Snippet"},{"type":"Paragraph","content":[{"code":"fs.textContent","type":"InlinedCode"},{"text":" declares file content, but doesn't access it right away.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"WebTau reads file content when validation happens. Here is an example of waiting on file content:","type":"SimpleText"}]},{"lang":"groovy","snippet":"def fileTextContent = fs.textContent('my-test-file.txt')\nfileTextContent.waitTo contain('id=15')","title":"wait for file content","surroundedBy":"wait-for-id","anchorId":"file-content-wait-for-file-content","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".data","type":"InlinedCode"},{"text":" to access actual file content for further processing","type":"SimpleText"}]},{"lang":"groovy","snippet":"def actualFileContent = fileTextContent.data","title":"access file content","surroundedBy":"actual-file-content","anchorId":"file-content-access-file-content","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"extractByRegexp","type":"InlinedCode"},{"text":" to extract content from a file by regular expression","type":"SimpleText"}]},{"lang":"groovy","snippet":"def id = fileTextContent.extractByRegexp(\"id=(\\\\d+)\")\nhttp.get(\"/customers/${id}\") {\n    // ...\n}","title":"extract file content","surroundedBy":"extract-id","excludeRegexp":"statusCode","anchorId":"file-content-extract-file-content","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"replaceText","type":"InlinedCode"},{"text":" to replace text in place","type":"SimpleText"}]},{"lang":"groovy","snippet":"fs.replaceText(path, ~/(\\d+)/, '\"$1\"')","title":"replace file content","surroundedBy":"replace-text","anchorId":"file-content-replace-file-content","type":"Snippet"},{"columns":[{"content":[{"lang":"txt","snippet":"a=1\nb=2","title":"file to replace","anchorId":"file-content-file-to-replace","type":"Snippet"}]},{"content":[{"lang":"txt","snippet":"a=\"1\"\nb=\"2\"","title":"result of replace","anchorId":"file-content-result-of-replace","type":"Snippet"}]}],"config":{},"type":"Columns"}]},{"id":"copy","title":"Copy","type":"Section","content":[{"lang":"groovy","snippet":"def dir = fs.createDir(\"my-dir\")\nfs.copy(\"data/message.txt\", dir)","title":"copy single file to a directory","includeRegexp":["fs\\.copy","createDir"],"anchorId":"copy-copy-single-file-to-a-directory","type":"Snippet"},{"lang":"groovy","snippet":"def dir = fs.tempDir(\"fs-copy\")\nfs.copy(\"data/message.txt\", dir)","title":"copy single file to a temp directory","includeRegexp":["fs\\.copy","tempDir"],"anchorId":"copy-copy-single-file-to-a-temp-directory","type":"Snippet"},{"lang":"groovy","snippet":"fs.copy(\"data/message.txt\", \"data/new-message.txt\")","title":"copy single file to a file","includeRegexp":["fs\\.copy"],"anchorId":"copy-copy-single-file-to-a-file","type":"Snippet"}]},{"id":"archive","title":"Archive","type":"Section","content":[{"lang":"groovy","snippet":"def dest = fs.tempDir(\"for-zip\").resolve(\"content.zip\")\nfs.zip('data/staticcontent', dest)","title":"zip a directory","surroundedBy":"// zip","anchorId":"archive-zip-a-directory","type":"Snippet"},{"lang":"groovy","snippet":"def dir = fs.tempDir('for-unzip')\nfs.unzip('data/data.zip', dir)","title":"unzip a file","surroundedBy":"// unzip","anchorId":"archive-unzip-a-file","type":"Snippet"},{"lang":"groovy","snippet":"def dir = fs.tempDir('for-untar')\nfs.untar('data/data.tar', dir)","title":"untar a file","surroundedBy":"// untar","anchorId":"archive-untar-a-file","type":"Snippet"}]},{"id":"temporary-dirs-and-files","title":"Temporary Dirs And Files","type":"Section","content":[{"lang":"groovy","snippet":"def dir = fs.tempDir(\"my-dir-prefix\")\ndef path = dir.resolve(\"my-file\")\nfs.writeText(path, \"hello world\")","title":"create temp directory","surroundedBy":"// temp-dir","anchorId":"temporary-dirs-and-files-create-temp-directory","type":"Snippet"},{"lang":"groovy","snippet":"def parentDir = fs.tempDir(\"my-dir-prefix\")\ndef dir = fs.tempDir(parentDir, \"nested-temp-dir\")","title":"create temp directory inside directory","surroundedBy":"// temp-dir-parent","anchorId":"temporary-dirs-and-files-create-temp-directory-inside-directory","type":"Snippet"},{"lang":"groovy","snippet":"def file = fs.tempFile(\"my-file-prefix\", \".txt\")\nfs.writeText(file, \"hello world\")","title":"create temp file","surroundedBy":"// temp-file","anchorId":"temporary-dirs-and-files-create-temp-file","type":"Snippet"},{"lang":"groovy","snippet":"def dir = fs.tempDir(\"temp-dir-prefix\")\ndef file = fs.tempFile(dir, \"my-file-prefix\", \".txt\")","title":"create temp file inside a directory","surroundedBy":"// temp-file-parent","anchorId":"temporary-dirs-and-files-create-temp-file-inside-a-directory","type":"Snippet"},{"lang":"txt","snippet":"/tmp/temp-dir-prefix2231168039382989826/my-file-prefix16988256483288015812.txt","title":"example of temp file location","anchorId":"temporary-dirs-and-files-example-of-temp-file-location","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: temp files and temp directories will be automatically deleted at the end of run","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Utilities","pageTitle":"File System","pageMeta":{},"dirName":"utilities","fileName":"file-system","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"File Content","id":"file-content"},{"title":"Copy","id":"copy"},{"title":"Archive","id":"archive"},{"title":"Temporary Dirs And Files","id":"temporary-dirs-and-files"}]}},{"type":"Page","content":[{"id":"cached-value","title":"Cached Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When you develop tests, you don't have to restart the whole flow from the beginning.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Imagine you have a multistep test that includes running Command Line tool and then validating REST API response, and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"then opening a browser to assert UI values.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Cache long steps results like created entities ","type":"SimpleText"},{"code":"ids","type":"InlinedCode"},{"text":" to speed up tests development.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In the example below, you create first scenario that runs a heavy command line tool that generates an id.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"We then cache the value and you can write a second scenario and keep re-running it, without the need to re-run the first one.","type":"SimpleText"}]},{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef createdId = cache.value(\"cli-heavy-created-id\") // declare cached value with distinct id\n\nscenario(\"heavy setup operation\") {\n    def cliResult = cli.run(\"scripts/cli-heavy-process\") // long running process that you don't want to re-run as you write your tests\n    createdId.set(cliResult.extractFromOutputByRegexp(\"id=(\\\\S+)\")) // caching the extracted id from CLI run\n}\n\nscenario(\"using previous setup id even after restart\") {\n    def id = createdId.get() // using cached value from previous test run. value will be preserved between restarts and re-compile\n    http.get(\"/resource/${id}\") {\n        message.should == \"hello\"\n    }\n}","title":"cached value","surroundedBy":"example","commentsType":"inline","anchorId":"cached-value-cached-value","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: Use ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/selective-run","isFile":false,"type":"Link","content":[{"text":"Selective Run","type":"SimpleText"}]},{"text":" or ","type":"SimpleText"},{"url":"/webtau/REPL/test-runs","isFile":false,"type":"Link","content":[{"text":"REPL mode","type":"SimpleText"}]},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to run one scenario at a time.","type":"SimpleText"}]}]},{"id":"cached-value-with-expiration","title":"Cached Value With Expiration","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use get value with expiration time for scenarios like auth token","type":"SimpleText"}]},{"lang":"groovy","snippet":"def token = cache.get(authTokenKey, 60_000, () -> generateAuthToken())","title":"cached value with expiration","surroundedBy":"example","commentsType":"inline","anchorId":"cached-value-with-expiration-cached-value-with-expiration","type":"Snippet"}]},{"id":"fs-path-type","title":"FS Path type","type":"Section","content":[{"type":"Paragraph","content":[{"url":"/webtau/utilities/file-system","isFile":false,"type":"Link","content":[{"text":"File System module","type":"SimpleText"}]},{"text":" return values of type ","type":"SimpleText"},{"code":"Path","type":"InlinedCode"},{"text":". WebTau stores them as ","type":"SimpleText"},{"code":"String","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"To retrieve as ","type":"SimpleText"},{"code":"Path","type":"InlinedCode"},{"text":" use ","type":"SimpleText"},{"code":"getAsPath()","type":"InlinedCode"}]},{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef deployDirCache = cache.value(\"deploy-dir\")\n\nscenario(\"caching of path value\") {\n    def path = fs.tempDir(\"my-dir\")\n    deployDirCache.set(path)\n}\n\nscenario(\"accessing path value\") {\n    def deployDir = deployDirCache.getAsPath()\n    fs.writeText(deployDir.resolve(\"file.txt\"), \"hello\")\n}","title":"cached path value","surroundedBy":"example","commentsType":"inline","anchorId":"fs-path-type-cached-path-value","type":"Snippet"}]},{"id":"presence-check","title":"Presence Check","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"exists","type":"InlinedCode"},{"text":" inside utilities methods","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to check if a cache value was set.","type":"SimpleText"}]},{"lang":"groovy","snippet":"def prevGenerated = cache.value(\"zip-unpacked-path\")\n// ...\nif (!prevGenerated.exists()) {\n    // recreate content\n}","title":"cached value","surroundedBy":"exists-example","anchorId":"presence-check-cached-value","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Avoid: using cache check inside test methods to keep them clean","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721166,"tocItem":{"chapterTitle":"Utilities","pageTitle":"Cache","pageMeta":{},"dirName":"utilities","fileName":"cache","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Cached Value","id":"cached-value"},{"title":"Cached Value With Expiration","id":"cached-value-with-expiration"},{"title":"FS Path type","id":"fs-path-type"},{"title":"Presence Check","id":"presence-check"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau provides two methods to assert values: ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":". They work for business logic testing, HTTP, Browser, and other layers.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Methods accept a matcher as a second parameter:","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau provides console output of all the matches it does, regardless of whether it fails or passes.","type":"SimpleText"}]},{"id":"should","title":"Should","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" to assert a value using a matcher. One of the most common matchers is ","type":"SimpleText"},{"code":"equal","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In WebTau equal is a universal matcher that you will learn about ","type":"SimpleText"},{"url":"/webtau/matchers/universal-compare","isFile":false,"type":"Link","content":[{"text":"later","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def errorMessage = generateErrorMessage()\nerrorMessage.should == \"insufficient disk space\" // string and string equality comparison","title":"should example","surroundedBy":"string-string-example","commentsType":"remove","anchorId":"should-should-example","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: Groovy has a shortcut for ","type":"SimpleText"},{"code":"equal","type":"InlinedCode"},{"text":" matcher.","type":"SimpleText"}]}]},{"name":"Java","content":[{"lang":"java","snippet":"String errorMessage = generateErrorMessage();\nactual(errorMessage).should(equal(\"insufficient disk space\")); // string and string equality comparison","title":"should example","surroundedBy":"string-string-example","commentsType":"remove","anchorId":"should-should-example-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"should console output","lines":["\u001B[32m. \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mequals \u001B[32m\"insufficient disk space\"\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"anchorId":"should-should-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"shouldBe","type":"InlinedCode"},{"text":" alias to make a better flow with matchers like ","type":"SimpleText"},{"code":"greaterThan","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def numberAsText = \"200\"\nnumberAsText.shouldBe > 150 // text and number relative comparison","title":"shouldBe example","surroundedBy":"string-number-example","commentsType":"remove","anchorId":"should-shouldbe-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String numberAsText = \"200\";\nactual(numberAsText).shouldBe(greaterThan(150)); // text and number relative comparison","title":"shouldBe example","surroundedBy":"string-number-example","commentsType":"remove","anchorId":"should-shouldbe-example-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"waitto","title":"WaitTo","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" to wait for a value to eventually match a matcher.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"actual(liveValue(this.&consumeMessage)).waitTo == \"message we wait for\"","title":"waitTo example","surroundedBy":"wait-consume-message","anchorId":"waitto-waitto-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"actual(liveValue(this::consumeMessage)).waitTo(equal(\"message we wait for\"));","title":"waitTo example","surroundedBy":"wait-consume-message","anchorId":"waitto-waitto-example-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"wait console output","lines":["\u001B[33m> \u001B[34mwaiting \u001B[33mfor \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[32m\"message we wait for\"\u001B[0m","\u001B[32m. \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mequals \u001B[32m\"message we wait for\"\u001B[33m (\u001B[32m203ms\u001B[33m)\u001B[0m"],"anchorId":"waitto-wait-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"waitToBe","type":"InlinedCode"},{"text":" alias to make a better flow with matchers like ","type":"SimpleText"},{"code":"greaterThan","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"actual(liveValue(this.&countRecords)).waitToBe >= 5","title":"waitToBe example","surroundedBy":"wait-number-records","anchorId":"waitto-waittobe-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"actual(liveValue(this::countRecords)).waitToBe(greaterThanOrEqual(5));","title":"waitToBe example","surroundedBy":"wait-number-records","anchorId":"waitto-waittobe-example-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"failure-output","title":"Failure Output","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Above you saw how WebTau outputs matched information.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In case of failed assertion WebTau outputs additional information about the actual value.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"values.should == [\n        1,\n        \"teasing\",\n        [key1: \"hello\", key2: \"work\"]]","title":"assertion","surroundedBy":"failed-list","anchorId":"failure-output-assertion","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"actual(values).should(equal(Arrays.asList(\n        1,\n        \"teasing\",\n        map(\"key1\", \"hello\", \"key2\", \"work\"))));","title":"assertion","surroundedBy":"failed-list","anchorId":"failure-output-assertion-2","type":"Snippet"}]}],"type":"Tabs"},{"title":"failed assertion console output","lines":["  \u001B[33m> \u001B[34mexpecting \u001B[0m\u001B[1mcode \u001B[0m\u001B[0m\u001B[34mto throw exception \u001B[0mjava.lang.\u001B[34mAssertionError\u001B[0m","    \u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m[\u001B[34m1\u001B[33m, \u001B[32m\"teasing\"\u001B[33m, \u001B[33m{\u001B[35m\"key1\"\u001B[33m: \u001B[32m\"hello\"\u001B[33m, \u001B[35m\"key2\"\u001B[33m: \u001B[32m\"work\"\u001B[33m}\u001B[33m]\u001B[0m:\u001B[0m","\u001B[0m        \u001B[0m\u001B[1m[value][1]\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"testing\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m        \u001B[0m           \u001B[36mexpected\u001B[0m: \u001B[32m\"teasing\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m        \u001B[0m           \u001B[0m             ^\u001B[0m","\u001B[0m        \u001B[0m\u001B[1m[value][2].key2\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"world\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m        \u001B[0m                \u001B[36mexpected\u001B[0m: \u001B[32m\"work\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m        \u001B[0m                \u001B[0m              ^\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","      \u001B[0m","      \u001B[33m[\u001B[34m1\u001B[33m, \u001B[31m**\"testing\"**\u001B[33m, \u001B[33m{\u001B[35m\"key1\"\u001B[33m: \u001B[32m\"hello\"\u001B[33m, \u001B[35m\"key2\"\u001B[33m: \u001B[31m**\"world\"**\u001B[33m}\u001B[33m]\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mcode \u001B[0m\u001B[0m\u001B[34mthrown \u001B[0mjava.lang.\u001B[34mAssertionError\u001B[33m (\u001B[32m4ms\u001B[33m)\u001B[0m"],"anchorId":"failure-output-failed-assertion-console-output","type":"CliOutput"}]},{"id":"static-import","title":"Static Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Examples assume ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The class contains useful utility methods and matchers.","type":"SimpleText"}]},{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","include":"WebTauCore.*","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Introduction","pageMeta":{},"dirName":"matchers","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Should","id":"should"},{"title":"WaitTo","id":"waitto"},{"title":"Failure Output","id":"failure-output"},{"title":"Static Import","id":"static-import"}]}},{"type":"Page","content":[{"id":"cross-types-comparison","title":"Cross Types Comparison","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In WebTau you can compare strings, dates, arrays, strings and numbers, dates and strings, arrays and sets and other numerous combinations","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"using the same set of matchers.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def errorMessage = generateErrorMessage()\nerrorMessage.should == \"insufficient disk space\" // string and string equality comparison\n\ndef numberAsText = \"200\"\nnumberAsText.shouldBe > 150 // text and number relative comparison","surroundedBy":["string-string-example","string-number-example"],"surroundedBySeparator":"","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String errorMessage = generateErrorMessage();\nactual(errorMessage).should(equal(\"insufficient disk space\")); // string and string equality comparison\n\nString numberAsText = \"200\";\nactual(numberAsText).shouldBe(greaterThan(150)); // text and number relative comparison","surroundedBy":["string-string-example","string-number-example"],"surroundedBySeparator":"","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"reporting","title":"Reporting","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Every comparison failed and successful generates console output with comparison details.","type":"SimpleText"}]},{"title":"report console output","lines":["\u001B[32m. \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mequals \u001B[32m\"insufficient disk space\"\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"anchorId":"reporting-report-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"Values have predefined names when they come from HTTP response or Web UI, etc. But regular values default to ","type":"SimpleText"},{"code":"value","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Pass ","type":"SimpleText"},{"code":"name","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"actual","type":"InlinedCode"},{"text":" to set an explicit reporting name.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"double price = calculatePrice()\nactual(price, \"price\").shouldBe > 10 // explict name to use in reporting","surroundedBy":"number-number-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"double price = calculatePrice();\nactual(price, \"price\").shouldBe(greaterThan(10)); // explict name to use in reporting","surroundedBy":"number-number-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"title":"explicit name report console output","lines":["\u001B[32m. \u001B[0m\u001B[1mprice \u001B[0m\u001B[0m\u001B[34mgreater than \u001B[34m10\u001B[33m (\u001B[32m9ms\u001B[33m)\u001B[0m"],"anchorId":"reporting-explicit-name-report-console-output","type":"CliOutput"}]},{"id":"dates","title":"Dates","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Universal compare lets you compare dates, local dates, strings, and times with timezones against each other.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def dateAsText = \"2018-06-10\"\ndateAsText.shouldBe > LocalDate.of(2018, 6, 9)\n\ndef timeAsText = \"2018-01-02T00:00:00Z\"\ntimeAsText.shouldBe > LocalDate.of(2018, 1, 1) // date/time will be converted to local timezone\n\ndef withTime = LocalDateTime.of(2022, 3, 16, 10, 4, 4)\ndef dateOnly = LocalDate.of(2022, 3, 16)\nwithTime.should == dateOnly // comparison ignores time portion when not provided","title":"text and date","entry":["actual local date string greater than expected local date instance","actual zoned date time string greater than expected local date instance","should compare local date against local date time"],"entrySeparator":"","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"groovy","snippet":"String dateAsText = \"2018-06-10\";\nactual(dateAsText).shouldBe(greaterThan(LocalDate.of(2018, 6, 9)));\n\nString timeAsText = \"2018-01-02T00:00:00Z\";\nactual(timeAsText).shouldBe(greaterThan(LocalDate.of(2018, 1, 1))); // date/time will be converted to local timezone\n\nLocalDateTime withTime = LocalDateTime.of(2022, 3, 16, 10, 4, 4);\nLocalDate withDate = LocalDate.of(2022, 3, 16);\nactual(withTime).should(equal(withDate)); // comparison ignores time portion when not provided","title":"text and date","entry":["actualLocalDateStringGreaterThanExpectedLocalDateInstance","actualZonedDateTimeStringGreaterThanExpectedLocalDateInstance","shouldCompareLocalDateAgainstLocalDateTime"],"entrySeparator":"","bodyOnly":true,"commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"static-import","title":"Static Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Examples assume ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The class contains useful utility methods and matchers.","type":"SimpleText"}]},{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","include":"WebTauCore.*","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Universal Compare","pageMeta":{},"dirName":"matchers","fileName":"universal-compare","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Cross Types Comparison","id":"cross-types-comparison"},{"title":"Reporting","id":"reporting"},{"title":"Dates","id":"dates"},{"title":"Static Import","id":"static-import"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau provides ","type":"SimpleText"},{"url":"/webtau/matchers/universal-compare","isFile":false,"type":"Link","content":[{"text":"universal comparison","type":"SimpleText"}]},{"text":" handlers to streamline Java Beans and Java Records assertions.","type":"SimpleText"}]},{"id":"java-bean-equals-map","title":"Java Bean Equals Map","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use map and bean comparison to validate individual java bean properties.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def account = new Account(\"ac1\", \"My Account\", \"test account\", new Address(\"TestingCity\", \"88888888\"))\naccount.should == [\n        id: \"ac1\",\n        name: \"My Second Account\",\n        address: [zipCode: \"7777777\"]] // only specified properties will be compared","surroundedBy":"bean-map-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Address address = new Address(\"TestingCity\", \"88888888\");\nAccount account = new Account(\"ac1\", \"My Account\", \"test account\", address);\nactual(account).should(equal(map( // utility function from WebTauCore static import\n        \"id\", \"ac1\",\n        \"name\", \"My Second Account\",\n        \"address\", map(\"zipCode\", \"7777777\")))); // only specified properties will be compared","surroundedBy":"bean-map-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"columns":[{"content":[{"lang":"java","snippet":"public class Account {\n    private final String id;\n    private final String name;\n    private final String description;\n    private final Address address;\n\n    public Account(String id, String name, String description,\n                   Address address) {\n        this.id = id;\n        this.name = name;\n        this.description = description;\n        this.address = address;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public Address getAddress() {\n        return address;\n    }\n}","surroundedBy":"account","title":"Account Java Bean","anchorId":"java-bean-equals-map-account-java-bean","type":"Snippet"}]},{"content":[{"lang":"java","snippet":"public class Address {\n    private final String city;\n    private final String zipCode;\n\n    public Address(String city, String zipCode) {\n        this.city = city;\n        this.zipCode = zipCode;\n    }\n\n    public String getCity() {\n        return city;\n    }\n\n    public String getZipCode() {\n        return zipCode;\n    }\n}","surroundedBy":"address","title":"Address Java Bean","anchorId":"java-bean-equals-map-address-java-bean","type":"Snippet"}]}],"config":{},"type":"Columns"},{"title":"console output highlights bean mismatches","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac1\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"My Second Account\"\u001B[33m, \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"7777777\"\u001B[33m}\u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value].name\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"My Account\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m             \u001B[36mexpected\u001B[0m: \u001B[32m\"My Second Account\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m             \u001B[0m              ^\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value].address.zipCode\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"88888888\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                        \u001B[36mexpected\u001B[0m: \u001B[32m\"7777777\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                        \u001B[0m           ^\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TestingCity\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[31m**\"88888888\"**\u001B[33m}\u001B[33m,\u001B[0m","    \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac1\"\u001B[33m,\u001B[0m","    \u001B[35m\"name\"\u001B[33m: \u001B[31m**\"My Account\"**\u001B[0m","  \u001B[33m}\u001B[0m"],"anchorId":"java-bean-equals-map-console-output-highlights-bean-mismatches","type":"CliOutput"}]},{"id":"java-beans-contain-map","title":"Java Beans Contain Map","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain(map)","type":"InlinedCode"},{"text":" to check if a collection of beans contains a bean with specified properties:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def accounts = fetchAccounts()\naccounts.shouldNot contain([id: \"ac2\", name: \"Work\"]) // only check specified properties","surroundedBy":"bean-map-contains-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Account> accounts = fetchAccounts();\nactual(accounts).shouldNot(contain(map(\"id\", \"ac2\", \"name\", \"Work\"))); // only check specified properties","surroundedBy":"bean-map-contains-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"lang":"java","snippet":"public class Account {\n    private final String id;\n    private final String name;\n    private final String description;\n    private final Address address;\n\n    public Account(String id, String name, String description,\n                   Address address) {\n        this.id = id;\n        this.name = name;\n        this.description = description;\n        this.address = address;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public Address getAddress() {\n        return address;\n    }\n}","surroundedBy":"account","title":"Account Java Bean","anchorId":"java-beans-contain-map-account-java-bean","type":"Snippet"},{"title":"list of beans should not contain output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto \u001B[36mnot \u001B[0m\u001B[34mcontain \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac2\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Work\"\u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][1].id\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m     \u001B[32m\"ac2\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m              \u001B[36mexpected\u001B[0m: \u001B[36mnot \u001B[32m\"ac2\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][1].name\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m     \u001B[32m\"Work\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                \u001B[36mexpected\u001B[0m: \u001B[36mnot \u001B[32m\"Work\"\u001B[0m \u001B[33m<java.lang.String>\u001B[33m (\u001B[32m4ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m[\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"address\"\u001B[33m: \u001B[36morg.testingisdocumenting.webtau.Address@36453307\u001B[33m,\u001B[0m","      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac1\"\u001B[33m,\u001B[0m","      \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Home\"\u001B[0m","    \u001B[33m}\u001B[33m,\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"address\"\u001B[33m: \u001B[36morg.testingisdocumenting.webtau.Address@7dcc91fd\u001B[33m,\u001B[0m","      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[31m**\"ac2\"**\u001B[33m,\u001B[0m","      \u001B[35m\"name\"\u001B[33m: \u001B[31m**\"Work\"**\u001B[0m","    \u001B[33m}\u001B[33m,\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"address\"\u001B[33m: \u001B[36morg.testingisdocumenting.webtau.Address@66eb985d\u001B[33m,\u001B[0m","      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac3\"\u001B[33m,\u001B[0m","      \u001B[35m\"name\"\u001B[33m: \u001B[32m\"My Account\"\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[33m]\u001B[0m"],"anchorId":"java-beans-contain-map-list-of-beans-should-not-contain-output","type":"CliOutput"}]},{"id":"java-beans-equal-table-data","title":"Java Beans Equal Table Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"equal","type":"InlinedCode"},{"text":" with ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" to compare with a collection of java beans. All records must be present.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"List<Account> accounts = fetchAccounts()\nTableData expected = [\"*id\" | \"name\"       | \"address\"] { // id is a key column\n                     _________________________________________\n                      \"ac2\" | \"Works\"      | [zipCode: \"zip2\"] // when key is present, comparison is order agnostic\n                      \"ac1\" | \"Home\"       | [zipCode: \"zip1\"]\n                      \"ac3\" | \"My Account\" | [zipCode: \"zip8\"] }\n\naccounts.should == expected","surroundedBy":"beans-table-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Account> accounts = fetchAccounts();\nTableData expected = table(\"*id\",       \"name\", \"address\",  // id is a key column\n                           ________________________________________,\n                           \"ac2\",      \"Works\", map(\"zipCode\", \"zip2\"), // when key is present, comparison is order agnostic\n                           \"ac1\",       \"Home\", map(\"zipCode\", \"zip1\"),\n                           \"ac3\", \"My Account\", map(\"zipCode\", \"zip8\"));\n\nactual(accounts).should(equal(expected));","surroundedBy":"beans-table-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: Only specified properties will be matched","type":"SimpleText"}]},{"title":"beans mismatches highlighted","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m*\u001B[35mid  \u001B[33m │ \u001B[35mname        \u001B[33m │ \u001B[35maddress            ","                                    \u001B[32m\"ac2\"\u001B[33m │ \u001B[32m\"Works\"     \u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}","                                    \u001B[32m\"ac1\"\u001B[33m │ \u001B[32m\"Home\"      \u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip1\"\u001B[33m}","                                    \u001B[32m\"ac3\"\u001B[33m │ \u001B[32m\"My Account\"\u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip8\"\u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][2].address.zipCode\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"zip3\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                           \u001B[36mexpected\u001B[0m: \u001B[32m\"zip8\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                           \u001B[0m              ^\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][1].name\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"Work\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                \u001B[36mexpected\u001B[0m: \u001B[32m\"Works\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                \u001B[0m               ^\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[35maddress                               \u001B[33m │ \u001B[35mdescription   \u001B[33m │ \u001B[35mid   \u001B[33m │ \u001B[35mname        \u001B[0m","  \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC1\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip1\"\u001B[33m}    \u001B[33m │ \u001B[32m\"test account\"\u001B[33m │ \u001B[32m\"ac1\"\u001B[33m │ \u001B[32m\"Home\"      \u001B[0m","  \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC2\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}    \u001B[33m │ \u001B[32m\"test account\"\u001B[33m │ \u001B[32m\"ac2\"\u001B[33m │ \u001B[31m**\"Work\"**  \u001B[0m","  \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC3\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[31m**\"zip3\"**\u001B[33m}\u001B[33m │ \u001B[32m\"test account\"\u001B[33m │ \u001B[32m\"ac3\"\u001B[33m │ \u001B[32m\"My Account\"\u001B[0m"],"anchorId":"java-beans-equal-table-data-beans-mismatches-highlighted","type":"CliOutput"}]},{"id":"java-beans-contain-table-data","title":"Java Beans Contain Table Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" with ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" to partially compare list of java beans.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"List<Account> accounts = fetchAccounts()\nTableData expected = [\"*id\" | \"name\"  | \"address\"] {\n                      ____________________________________\n                      \"ac2\" | \"Works\" | [zipCode: \"zip2\"]\n                      \"ac1\" | \"Home\"  | [zipCode: \"zip1\"] }\n\naccounts.should contain(expected)","surroundedBy":"beans-table-contain-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Account> accounts = fetchAccounts();\nTableData expected = table(\"id\",  \"name\", \"address\",\n                           _______________________________________,\n                           \"ac2\", \"Works\", map(\"zipCode\", \"zip2\"),\n                           \"ac1\",  \"Home\", map(\"zipCode\", \"zip1\"));\n\nactual(accounts).should(contain(expected));","surroundedBy":"beans-table-contain-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"title":"contain handler output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto contain \u001B[35mid   \u001B[33m │ \u001B[35mname   \u001B[33m │ \u001B[35maddress            ","                                      \u001B[32m\"ac2\"\u001B[33m │ \u001B[32m\"Works\"\u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}","                                      \u001B[32m\"ac1\"\u001B[33m │ \u001B[32m\"Home\" \u001B[33m │ \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip1\"\u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[31mno matches found for\u001B[0m: \u001B[33m[\u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac2\"\u001B[33m, \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Works\"\u001B[33m, \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}\u001B[33m}\u001B[33m]\u001B[33m (\u001B[32m4ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m[\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC1\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip1\"\u001B[33m}\u001B[33m,\u001B[0m","      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac1\"\u001B[33m,\u001B[0m","      \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Home\"\u001B[0m","    \u001B[33m}\u001B[33m,\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC2\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip2\"\u001B[33m}\u001B[33m,\u001B[0m","      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac2\"\u001B[33m,\u001B[0m","      \u001B[35m\"name\"\u001B[33m: \u001B[32m\"Work\"\u001B[0m","    \u001B[33m}\u001B[33m,\u001B[0m","    \u001B[33m{\u001B[0m","      \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"city\"\u001B[33m: \u001B[32m\"TC3\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"zip3\"\u001B[33m}\u001B[33m,\u001B[0m","      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"test account\"\u001B[33m,\u001B[0m","      \u001B[35m\"id\"\u001B[33m: \u001B[32m\"ac3\"\u001B[33m,\u001B[0m","      \u001B[35m\"name\"\u001B[33m: \u001B[32m\"My Account\"\u001B[0m","    \u001B[33m}\u001B[0m","  \u001B[33m]\u001B[0m"],"anchorId":"java-beans-contain-table-data-contain-handler-output","type":"CliOutput"}]},{"id":"static-import","title":"Static Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Examples assume ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The class contains useful utility methods and matchers.","type":"SimpleText"}]},{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","include":"WebTauCore.*","type":"Snippet"}]},{"id":"java-records","title":"Java Records","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau compares Java Records with maps and tables in the same way as Java Beans.","type":"SimpleText"}]},{"lang":"java","snippet":"public record WishLitItem(String id,\n                          String description,\n                          boolean favorite,\n                          List<WishLitItem> related) {\n}","surroundedBy":"record-definition","title":"WishListItem record","anchorId":"java-records-wishlistitem-record","type":"Snippet"},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def wishListItem = new WishLitItem(\"id1\", \"tea set\", true,\n        [new WishLitItem(\"id-nested\", \"tea\", true, [])])\nwishListItem.should == [\n        id: \"id1\",\n        description: \"tea sets\",\n        favorite: true,\n        related: [\n                [id: \"id-nested\",\n                 description: \"juice\"]]] // only specified properties will be compared","surroundedBy":"java-record-map-example","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var wishListItem = new WishLitItem(\"id1\", \"tea set\", true,\n        list(new WishLitItem(\"id-nested\", \"tea\", true, list())));\n\nactual(wishListItem).should(equal(map(\n        \"id\", \"id1\",\n        \"description\", \"tea sets\",\n        \"favorite\", true,\n        \"related\", list(map(\n                \"id\", \"id-nested\",\n                \"description\", \"juice\"))))); // only specified properties will be compared","surroundedBy":"java-record-map-example","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output highlights record mismatches","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m{","                                      \u001B[35m\"id\"\u001B[33m: \u001B[32m\"id1\"\u001B[33m,","                                      \u001B[35m\"description\"\u001B[33m: \u001B[32m\"tea sets\"\u001B[33m,","                                      \u001B[35m\"favorite\"\u001B[33m: \u001B[36mtrue\u001B[33m,","                                      \u001B[35m\"related\"\u001B[33m: \u001B[33m[\u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"id-nested\"\u001B[33m, \u001B[35m\"description\"\u001B[33m: \u001B[32m\"juice\"\u001B[33m}\u001B[33m]","                                    \u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value].description\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"tea set\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                    \u001B[36mexpected\u001B[0m: \u001B[32m\"tea sets\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                    \u001B[0m                  ^\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value].related[0].description\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"tea\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                               \u001B[36mexpected\u001B[0m: \u001B[32m\"juice\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                               \u001B[0m           ^\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[32m\"id1\"\u001B[33m,\u001B[0m","    \u001B[35m\"description\"\u001B[33m: \u001B[31m**\"tea set\"**\u001B[33m,\u001B[0m","    \u001B[35m\"favorite\"\u001B[33m: \u001B[36mtrue\u001B[33m,\u001B[0m","    \u001B[35m\"related\"\u001B[33m: \u001B[33m[\u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[32m\"id-nested\"\u001B[33m, \u001B[35m\"description\"\u001B[33m: \u001B[31m**\"tea\"**\u001B[33m, \u001B[35m\"favorite\"\u001B[33m: \u001B[36mtrue\u001B[33m, \u001B[35m\"related\"\u001B[33m: \u001B[33m[\u001B[33m]\u001B[33m}\u001B[33m]\u001B[0m","  \u001B[33m}\u001B[0m"],"anchorId":"java-records-console-output-highlights-record-mismatches","type":"CliOutput"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Java Beans And Records","pageMeta":{},"dirName":"matchers","fileName":"java-beans-and-records","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Java Bean Equals Map","id":"java-bean-equals-map"},{"title":"Java Beans Contain Map","id":"java-beans-contain-map"},{"title":"Java Beans Equal Table Data","id":"java-beans-equal-table-data"},{"title":"Java Beans Contain Table Data","id":"java-beans-contain-table-data"},{"title":"Static Import","id":"static-import"},{"title":"Java Records","id":"java-records"}]}},{"type":"Page","content":[{"id":"mismatch-pinpoint-single-line-text","title":"Mismatch Pinpoint Single Line Text","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When comparing strings, WebTau highlights a specific point of failure:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def output = \"hallo world\"\noutput.should == \"hello world\"","surroundedBy":"single-line-compare","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String output = \"hallo world\";\nactual(output).should(equal(\"hello world\"));","surroundedBy":"single-line-compare","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[32m\"hello world\"\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"hallo world\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[36mexpected\u001B[0m: \u001B[32m\"hello world\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m            ^\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m"],"anchorId":"mismatch-pinpoint-single-line-text-console-output","type":"CliOutput"}]},{"id":"mismatch-pinpoint-multi-line-text","title":"Mismatch Pinpoint Multi Line Text","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In case of a multiline text, WebTau highlights a first mismatched line:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"String output = buildOutput()\noutput.should == \"line one\\nline 2\"","surroundedBy":"multi-line-compare","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String output = buildOutput();\nactual(output).should(equal(\"line one\\nline 2\"));","surroundedBy":"multi-line-compare","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[0m________","                                    \u001B[32mline one","                                    \u001B[32mline 2","                                    \u001B[0m________\u001B[0m:\u001B[0m","\u001B[0m    \u001B[31mdifferent number of \u001B[36mlines\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m  \u001B[36mactual\u001B[0m: \u001B[34m3\u001B[0m","\u001B[0m    \u001B[36mexpected\u001B[0m: \u001B[34m2\u001B[0m","\u001B[0m    \u001B[31mfirst mismatch at line idx \u001B[34m1\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m  \u001B[36mactual\u001B[0m: \u001B[32m\"line two\"\u001B[0m","\u001B[0m    \u001B[36mexpected\u001B[0m: \u001B[32m\"line 2\"\u001B[0m","\u001B[0m    \u001B[0m                ^\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[0m  __________\u001B[0m","  \u001B[32m  line one\u001B[0m","  \u001B[31m**line two**\u001B[0m","  \u001B[32m  line three\u001B[0m","  \u001B[0m  __________\u001B[0m"],"anchorId":"mismatch-pinpoint-multi-line-text-console-output","type":"CliOutput"}]},{"id":"line-ending-detection","title":"Line Ending Detection","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau automatically checks line ending, e.g. presence of ","type":"SimpleText"},{"code":"\\r","type":"InlinedCode"},{"text":" and will notify if there is a difference.","type":"SimpleText"}]},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1mtext \u001B[0m\u001B[0m\u001B[34mto equal \u001B[0m_________________","                                 \u001B[32mhello world world","                                 \u001B[32mhello again","                                 \u001B[0m_________________\u001B[0m:\u001B[0m","\u001B[0m    \u001B[31mdifferent line endings\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m  \u001B[36mactual\u001B[0m: \u001B[31mcontains\u001B[0m \\r\u001B[0m","\u001B[0m    \u001B[36mexpected\u001B[0m: \u001B[31mdoesn't contain\u001B[0m \\r\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[31m**_________________**\u001B[0m","  \u001B[32m  hello world world\u001B[0m","  \u001B[32m  hello again\u001B[0m","  \u001B[31m**_________________**\u001B[0m"],"anchorId":"line-ending-detection-console-output","type":"CliOutput"}]},{"id":"different-number-of-empty-lines","title":"Different Number Of Empty Lines","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau separately checks extra empty lines to help with missing/extra ","type":"SimpleText"},{"code":"\\n","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"String output = buildOutput()\noutput.should == \"line one\\nline two\\nline three\\n\"","surroundedBy":"extra-empty-line-compare","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String output = buildOutput();\nactual(output).should(equal(\"line one\\nline two\\nline three\\n\"));","surroundedBy":"extra-empty-line-compare","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[0m__________","                                    \u001B[32mline one","                                    \u001B[32mline two","                                    \u001B[32mline three","                                    \u001B[32m","                                    \u001B[0m__________\u001B[0m:\u001B[0m","\u001B[0m    \u001B[31mdifferent number of \u001B[36mlines\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m  \u001B[36mactual\u001B[0m: \u001B[34m3\u001B[0m","\u001B[0m    \u001B[36mexpected\u001B[0m: \u001B[34m4\u001B[0m","\u001B[0m    \u001B[31mdifferent number of \u001B[36mempty lines \u001B[33mat \u001B[36mthe end\u001B[0m","\u001B[0m    \u001B[0m  \u001B[36mactual\u001B[0m: \u001B[34m0\u001B[0m","\u001B[0m    \u001B[36mexpected\u001B[0m: \u001B[34m1\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[31m**__________**\u001B[0m","  \u001B[32m  line one\u001B[0m","  \u001B[32m  line two\u001B[0m","  \u001B[32m  line three\u001B[0m","  \u001B[31m**__________**\u001B[0m"],"anchorId":"different-number-of-empty-lines-console-output","type":"CliOutput"}]},{"id":"contains","title":"Contains","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contains","type":"InlinedCode"},{"text":" matcher to check a presence of a substring:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"String output = buildOutput()\noutput.should contain(\"four\")","surroundedBy":"multi-line-contains","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String output = buildOutput();\nactual(output).should(contain(\"four\"));","surroundedBy":"multi-line-contains","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto contain \u001B[32m\"four\"\u001B[0m: \u001B[31mno match found\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[31m**__________**\u001B[0m","  \u001B[32m  line one\u001B[0m","  \u001B[32m  line two\u001B[0m","  \u001B[32m  line three\u001B[0m","  \u001B[31m**__________**\u001B[0m"],"anchorId":"contains-console-output","type":"CliOutput"}]},{"id":"regexp","title":"Regexp","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"equal","type":"InlinedCode"},{"text":" matcher to match against a regular expression:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"String output = 'final price: $8998'\noutput.should == ~/final price: \\$\\d+/","surroundedBy":"single-line-regexp","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String output = \"final price: $8998\";\nactual(output).should(equal(Pattern.compile(\"final price: \\\\$\\\\d+\")));","surroundedBy":"single-line-regexp","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[32m. \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mequals \u001B[33m~/\u001B[32mfinal price: \\$\\d+\u001B[33m/\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m"],"anchorId":"regexp-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Strings","pageMeta":{},"dirName":"matchers","fileName":"strings","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Mismatch Pinpoint Single Line Text","id":"mismatch-pinpoint-single-line-text"},{"title":"Mismatch Pinpoint Multi Line Text","id":"mismatch-pinpoint-multi-line-text"},{"title":"Line Ending Detection","id":"line-ending-detection"},{"title":"Different Number Of Empty Lines","id":"different-number-of-empty-lines"},{"title":"Contains","id":"contains"},{"title":"Regexp","id":"regexp"}]}},{"type":"Page","content":[{"id":"equality-comparison","title":"Equality Comparison","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When two maps are not equal, WebTau generates all the required info to investigate:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"Map<String, ?> generated = generate()\ngenerated.should == [firstName: \"G-FN\", lastName: \"G-LN\",\n        address: [street: \"generated-street\", city: \"GenCity\", zipCode: \"12345\"]]","surroundedBy":"maps-equal-mismatch","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Map<String, ?> generated = generate();\nactual(generated).should(equal(map(\"firstName\", \"G-FN\", \"lastName\", \"G-LN\",\n        \"address\", map(\"street\", \"generated-street\", \"city\", \"GenCity\", \"zipCode\", \"12345\"))));","surroundedBy":"maps-equal-mismatch","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[33m{","                                      \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"G-FN\"\u001B[33m,","                                      \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"G-LN\"\u001B[33m,","                                      \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"street\"\u001B[33m: \u001B[32m\"generated-street\"\u001B[33m, \u001B[35m\"city\"\u001B[33m: \u001B[32m\"GenCity\"\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[32m\"12345\"\u001B[33m}","                                    \u001B[33m}\u001B[0m:\u001B[0m","\u001B[0m    \u001B[31mmismatches\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value].address.city\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m:\u001B[0m \u001B[32m\"GenSity\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                     \u001B[36mexpected\u001B[0m: \u001B[32m\"GenCity\"\u001B[0m \u001B[33m<java.lang.String>\u001B[0m","\u001B[0m    \u001B[0m                     \u001B[0m              ^\u001B[0m","\u001B[0m    \u001B[0m","\u001B[0m    \u001B[31mmissing, but expected values\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value].address.zipCode\u001B[0m\u001B[0m: \u001B[32m\"12345\"\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"G-FN\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"G-LN\"\u001B[33m,\u001B[0m","    \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"street\"\u001B[33m: \u001B[32m\"generated-street\"\u001B[33m, \u001B[35m\"city\"\u001B[33m: \u001B[31m**\"GenSity\"**\u001B[33m, \u001B[35m\"zipCode\"\u001B[33m: \u001B[31m<missing>\u001B[33m}\u001B[0m","  \u001B[33m}\u001B[0m"],"anchorId":"equality-comparison-console-output","type":"CliOutput"}]},{"id":"contain","title":"Contain","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" matcher to check if one map is a subset of another:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"Map<String, ?> generated = generate()\ngenerated.should contain(firstName: \"G-FN\", lastName: \"G-LN\", middleName: \"G-MN\")","surroundedBy":"maps-contain-mismatch","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Map<String, ?> generated = generate();\nactual(generated).should(contain(\n        map(\"firstName\", \"G-FN\", \"lastName\", \"G-LN\", \"middleName\", \"G-MD\")));","surroundedBy":"maps-contain-mismatch","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto contain \u001B[33m{\u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"G-FN\"\u001B[33m, \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"G-LN\"\u001B[33m, \u001B[35m\"middleName\"\u001B[33m: \u001B[32m\"G-MD\"\u001B[33m}\u001B[0m: \u001B[31mno match found\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"G-FN\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"G-LN\"\u001B[33m,\u001B[0m","    \u001B[35m\"address\"\u001B[33m: \u001B[33m{\u001B[35m\"street\"\u001B[33m: \u001B[32m\"generated-street\"\u001B[33m, \u001B[35m\"city\"\u001B[33m: \u001B[32m\"GenSity\"\u001B[33m}\u001B[33m,\u001B[0m","    \u001B[35m\"middleName\"\u001B[33m: \u001B[31m**\u001B[31m<missing>\u001B[31m**\u001B[0m","  \u001B[33m}\u001B[0m"],"anchorId":"contain-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Maps","pageMeta":{},"dirName":"matchers","fileName":"maps","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Equality Comparison","id":"equality-comparison"},{"title":"Contain","id":"contain"}]}},{"type":"Page","content":[{"id":"equality-comparison","title":"Equality Comparison","type":"Section","content":[{"type":"Paragraph","content":[{"text":"When two tables are not equal, WebTau generates all the required info to investigate:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def summary = loadFromCsv(\"summary.csv\")\ndef expected = [  \"ColumnA\" | \"ColumnB\" ] {\n               ____________________________\n                    10      | greaterThan(15)\n              anyOf(20, 22) | 40 }\nsummary.should == expected","surroundedBy":"table-equal-mismatch","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var summary = loadFromCsv(\"summary.csv\");\nTableData expected = table(\"ColumnA\", \"ColumnB\",\n                          _________________________,\n                                  10, greaterThan(15),\n                       anyOf(20, 22), 40);\n\nactual(summary).should(equal(expected));","surroundedBy":"table-equal-mismatch","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[35mColumnA          \u001B[33m │ \u001B[35mColumnB          ","                                                   \u001B[34m10\u001B[33m │ \u001B[33m<\u001B[36mgreater than \u001B[34m15\u001B[33m>","                                    \u001B[33m<\u001B[36many of \u001B[33m[\u001B[34m20\u001B[33m, \u001B[34m22\u001B[33m]\u001B[33m>\u001B[33m │                \u001B[34m40\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][1].ColumnA\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m: \u001B[34m30\u001B[0m \u001B[33m<java.lang.Integer>\u001B[0m","\u001B[0m    \u001B[0m                   \u001B[36mexpected\u001B[0m: \u001B[34m20\u001B[0m \u001B[33m<java.lang.Integer>\u001B[0m","\u001B[0m    \u001B[0m                   \u001B[0m  \u001B[36mactual\u001B[0m: \u001B[34m30\u001B[0m \u001B[33m<java.lang.Integer>\u001B[0m","\u001B[0m    \u001B[0m                   \u001B[36mexpected\u001B[0m: \u001B[34m22\u001B[0m \u001B[33m<java.lang.Integer>\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[35mColumnA\u001B[33m │ \u001B[35mColumnB\u001B[0m","       \u001B[34m10\u001B[33m │      \u001B[34m20\u001B[0m","   \u001B[31m**30**\u001B[33m │      \u001B[34m40\u001B[0m"],"anchorId":"equality-comparison-console-output","type":"CliOutput"}]},{"id":"contain","title":"Contain","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" matcher to check if one map is a subset of another:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def summary = loadFromCsv(\"summary.csv\")\nsummary.should contain([\"ColumnA\": 20, \"ColumnB\": greaterThan(15)])","surroundedBy":"table-contain-mismatch","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"var summary = loadFromCsv(\"summary.csv\");\nactual(summary).should(contain(map(\"ColumnA\", 20, \"ColumnB\", greaterThan(15))));","surroundedBy":"table-contain-mismatch","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto contain \u001B[33m{\u001B[35m\"ColumnA\"\u001B[33m: \u001B[34m20\u001B[33m, \u001B[35m\"ColumnB\"\u001B[33m: \u001B[33m<\u001B[36mgreater than \u001B[34m15\u001B[33m>\u001B[33m}\u001B[0m: \u001B[31mno match found\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[35mColumnA\u001B[33m │ \u001B[35mColumnB\u001B[0m","       \u001B[34m10\u001B[33m │      \u001B[34m20\u001B[0m","       \u001B[34m30\u001B[33m │      \u001B[34m40\u001B[0m"],"anchorId":"contain-console-output","type":"CliOutput"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Tables","pageMeta":{},"dirName":"matchers","fileName":"tables","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Equality Comparison","id":"equality-comparison"},{"title":"Contain","id":"contain"}]}},{"type":"Page","content":[{"id":"match-any-provided-value","title":"Match Any Provided Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"anyOf","type":"InlinedCode"},{"text":" matcher to match an expected value against any of the provided values.","type":"SimpleText"},{"type":"SoftLineBreak"},{"url":"/webtau/matchers/universal-compare","isFile":false,"type":"Link","content":[{"text":"Universal Compare","type":"SimpleText"}]},{"text":" rule is applicable.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def dateAsText = \"2018-06-10\"\ndateAsText.should == anyOf(\"2018-06-11\", LocalDate.of(2018, 6, 10))","entry":"any of matcher example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String dateAsText = \"2018-06-10\";\nactual(dateAsText).shouldBe(anyOf(\"2018-06-11\", LocalDate.of(2018, 6, 10)));","entry":"anyOfMatcherExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"mixing-values-and-matchers","title":"Mixing Values And Matchers","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can mix values and other matchers passed to ","type":"SimpleText"},{"code":"anyOf","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def dateAsText = \"2018-06-10\"\ndateAsText.should == anyOf(\"2018-06-11\", greaterThan(LocalDate.of(2018, 1, 1)))\n\ndef message = \"hello world\"\nmessage.shouldNot == anyOf(\"hello\", contain(\"super\"))","entry":"any of matcher with other matcher example","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"String dateAsText = \"2018-06-10\";\nactual(dateAsText).shouldBe(anyOf(\"2018-06-11\", greaterThan(LocalDate.of(2018, 1, 1))));\n\nString message = \"hello world\";\nactual(message).shouldNotBe(anyOf(\"hello\", contain(\"super\")));","entry":"anyOfMatcherWithOtherMatcherExample","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"static-import","title":"Static Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Examples assume ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The class contains useful utility methods and matchers.","type":"SimpleText"}]},{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","include":"WebTauCore.*","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Any Of","pageMeta":{},"dirName":"matchers","fileName":"any-of","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Match Any Provided Value","id":"match-any-provided-value"},{"title":"Mixing Values And Matchers","id":"mixing-values-and-matchers"},{"title":"Static Import","id":"static-import"}]}},{"type":"Page","content":[{"id":"match-every-value","title":"Match Every Value","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"anyValue","type":"InlinedCode"},{"text":" matcher to match every expected value. Use it in places of complex data expectations where you need to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"provide a value but your focus is on different data.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"TableData summaryTable = loadFromCsv(\"summary.csv\")\nsummaryTable.should == [\"ColumnA\" | \"ColumnB\" ] {\n                        _________________________\n                                10| anyValue\n                                30| 40 }","surroundedBy":"any-value-table-example","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData summaryTable = loadFromCsv(\"summary.csv\");\nactual(summaryTable).should(equal(table(\"ColumnA\", \"ColumnB\",\n                                       ____________________,\n                                               10, anyValue,\n                                               30, 40)));","surroundedBy":"any-value-table-example","type":"Snippet"}]}],"type":"Tabs"},{"title":"console output","lines":["\u001B[32m. \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mequals \u001B[35mColumnA\u001B[33m │ \u001B[35mColumnB    ","                      \u001B[34m10\u001B[33m │ \u001B[33m<\u001B[36many value\u001B[33m>","                      \u001B[34m30\u001B[33m │          \u001B[34m40\u001B[33m (\u001B[32m3ms\u001B[33m)\u001B[0m"],"anchorId":"match-every-value-console-output","type":"CliOutput"}]},{"id":"static-import","title":"Static Import","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Examples assume ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The class contains useful utility methods and matchers.","type":"SimpleText"}]},{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","include":"WebTauCore.*","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Any Value","pageMeta":{},"dirName":"matchers","fileName":"any-value","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Match Every Value","id":"match-every-value"},{"title":"Static Import","id":"static-import"}]}},{"type":"Page","content":[{"id":"handler-vs-matcher","title":"Handler vs Matcher","type":"Section","content":[{"type":"Paragraph","content":[{"text":"A lot of times you need to check if two things are equal.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Instead of creating multiple matchers like ","type":"SimpleText"},{"code":"arraysEqual","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"pathsEqual","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"myDataEqual","type":"InlinedCode"},{"text":", you define additional equality rule.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Adding a new equality and greater/less rules is done by creating and registering new ","type":"SimpleText"},{"code":"CompareToHandler","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"style":"api","id":"comparetohandler","title":"CompareToHandler","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To add a new handler you need to","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"implement ","type":"SimpleText"},{"code":"CompareToHandler","type":"InlinedCode"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"register new class using Java Services","type":"SimpleText"}]}]}]},{"id":"comparetohandler-interface","level":2,"title":"Interface","type":"SubHeading"},{"lang":"java","snippet":"public interface CompareToHandler {\n    /**\n     * determines whether supports equality comparison\n     * @param actual actual value\n     * @param expected expected value\n     * @return true if comparison can be handled\n     */\n    boolean handleEquality(Object actual, Object expected);\n\n    /**\n     * value optionally can be converted to another value to be passed down comparison chain.\n     * exposed as outside method for more precise reporting of actual values in case of a failure.\n     *\n     * @param actual original actual\n     * @param expected expected value\n     * @return optionally converted actual\n     */\n    default Object convertedActual(Object actual, Object expected) {\n        return actual;\n    }\n\n    /**\n     * value optionally can be converted to another value to be passed down comparison chain.\n     * exposed as outside method for more precise reporting of expected values for reporting\n     *\n     * @param actual original actual\n     * @param expected original expected\n     * @return optionally converted expected\n     */\n    default Object convertedExpected(Object actual, Object expected) {\n        return expected;\n    }\n\n    /**\n     * determines whether supports greater/less than comparison family\n     * @param actual actual value\n     * @param expected expected value\n     * @return true if comparison can be handled\n     */\n    default boolean handleGreaterLessEqual(Object actual, Object expected) {\n        return false;\n    }\n\n    /**\n     * determines whether handler can handle nulls. usually left unimplemented\n     * @return true if handler can match nulls\n     */\n    default boolean handleNulls() {\n        return false;\n    }\n\n    /**\n     * implementation logic of equality only\n     * @param comparator comparator to delegate comparison to\n     * @param actualPath path to use for reporting\n     * @param actual actual value\n     * @param expected expected value\n     */\n    void compareEqualOnly(CompareToComparator comparator,\n                          ValuePath actualPath, Object actual,\n                          Object expected);\n\n    /**\n     * implementation logic of greater/less than family\n     * @param comparator comparator to delegate comparison to\n     * @param actualPath path to use for reporting\n     * @param actual actual value\n     * @param expected expected value\n     */\n    default void compareGreaterLessEqual(CompareToComparator comparator,\n                                         ValuePath actualPath, Object actual,\n                                         Object expected) {\n        throw new UnsupportedOperationException(\"greater-less comparison is not implemented\");\n    }\n}","title":"interface to implement","entry":"CompareToHandler","anchorId":"comparetohandler-interface-interface-to-implement","type":"Snippet"},{"id":"comparetohandler-example-implementation","level":2,"title":"Example Implementation","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"Below is an existing implementation of handler to deal with Java Beans and Java Records as actual and Map as expected","type":"SimpleText"}]},{"lang":"java","snippet":"public class MapAndJavaBeanOrRecordCompareToHandler extends MapAsExpectedCompareToHandlerBase {\n    @Override\n    protected boolean handleEquality(Object actual) {\n        return !(actual instanceof Iterable || actual instanceof Map);\n    }\n\n    @Override\n    public Object convertedActual(Object actual, Object expected) {\n        if (actual instanceof ObjectProperties) {\n            return ((ObjectProperties) actual).getTopLevelProperties();\n        }\n\n        if (JavaRecordUtils.isRecord(actual)) {\n            return JavaRecordUtils.convertRecordToMap(actual);\n        }\n\n        return JavaBeanUtils.convertBeanToMap(actual);\n    }\n}","title":"map and bean/record comparison handler","entry":"MapAndJavaBeanOrRecordCompareToHandler","commentsType":"inline","anchorId":"comparetohandler-example-implementation-map-and-bean-record-comparison-handler","type":"Snippet"},{"id":"comparetohandler-registration","level":2,"title":"Registration","type":"SubHeading"},{"type":"Paragraph","content":[{"text":"WebTau uses ","type":"SimpleText"},{"url":"https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html","isFile":false,"type":"Link","content":[{"text":"Service Loaders","type":"SimpleText"}]},{"text":" to discover implementations of handlers.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To register an additional handler you need to create a file under resources","type":"SimpleText"}]},{"lang":"","snippet":"META-INF/services/org.testingisdocumenting.webtau.expectation.equality.CompareToHandler\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"with the content file containing a line per implementing class","type":"SimpleText"}]},{"lang":"CompareToHandler","snippet":"org.testingisdocumenting.webtau.expectation.equality.handlers.MapAndJavaBeanOrRecordCompareToHandler","autoTitle":true,"includeRegexp":"MapAndJavaBeanOrRecordCompareToHandler","title":"src/main/resources/META-INF/services/org.testingisdocumenting.webtau.expectation.equality.CompareToHandler","anchorId":"comparetohandler-registration-src-main-resources-meta-inf-services-org-testingisdocumenting-webtau-expectation-equality-comparetohandler","type":"Snippet"}]},{"id":"custom-complex-domain-data","title":"Custom Complex Domain Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Another example to use custom handler is to provide better mismatch details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Imagine you have some ","type":"SimpleText"},{"code":"CustomComplexData","type":"InlinedCode"},{"text":" class that contains important data from you domain.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"This class also has ","type":"SimpleText"},{"code":"equals","type":"InlinedCode"},{"text":" defined, and you can use it to check if two values are the same.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But when it comes to use it during testing, you find that failure report is hard to comprehend: default assertion","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"only prints ","type":"SimpleText"},{"code":"toString","type":"InlinedCode"},{"text":" representation leaving you to eyeball the rest.","type":"SimpleText"}]},{"lang":"java","snippet":"CustomComplexData calculated = new CustomComplexData(\"cA\", \"cB\");\ncalculated.addRow(1, 2);\ncalculated.addRow(3, 4);\n\nCustomComplexData expected = new CustomComplexData(\"cA\", \"cB\");\nexpected.addRow(1, 2);\nexpected.addRow(3, 5);\n\nAssert.assertEquals(expected, calculated);","title":"default assertion example","surroundedBy":["complex-data-fail-preparation","default-assertion"],"surroundedBySeparator":"","anchorId":"custom-complex-domain-data-default-assertion-example","type":"Snippet"},{"title":"console output","lines":["expected:<CustomComplexData{columnNames=[cA, cB], values=[[1, 2], [3, 5]]}> but was:<CustomComplexData{columnNames=[cA, cB], values=[[1, 2], [3, 4]]}>"],"anchorId":"custom-complex-domain-data-console-output","type":"CliOutput"},{"type":"Paragraph","content":[{"text":"To improve the situation, we will define ","type":"SimpleText"},{"code":"CustomComplexData","type":"InlinedCode"},{"text":" ","type":"SimpleText"},{"code":"CompareToHandler","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"lang":"java","snippet":"package org.example.domain;\n\nimport org.testingisdocumenting.webtau.data.ValuePath;\nimport org.testingisdocumenting.webtau.data.table.TableData;\nimport org.testingisdocumenting.webtau.data.table.header.TableDataHeader;\nimport org.testingisdocumenting.webtau.expectation.equality.CompareToComparator;\nimport org.testingisdocumenting.webtau.expectation.equality.CompareToHandler;\n\npublic class CustomComplexDataCompareToHandler implements CompareToHandler {\n    @Override\n    public boolean handleEquality(Object actual, Object expected) {\n        return actual instanceof CustomComplexData && ( // handler for actual as your data\n                expected instanceof CustomComplexData || // and expected as either your data or TableData\n                        expected instanceof TableData);\n    }\n\n    @Override\n    public Object convertedActual(Object actual, Object expected) {\n        return createTableDataFromCustomData((CustomComplexData) actual);\n    }\n\n    @Override\n    public Object convertedExpected(Object actual, Object expected) {\n        if (expected instanceof TableData) {\n            return expected;\n        }\n\n        return createTableDataFromCustomData((CustomComplexData) expected);\n    }\n\n    @Override\n    public void compareEqualOnly(CompareToComparator comparator, ValuePath actualPath, Object actual, Object expected) {\n        comparator.compareUsingEqualOnly(actualPath, actual, expected); // delegate back to WebTau to compare using converted types\n    }\n\n    private TableData createTableDataFromCustomData(CustomComplexData actual) {\n        TableData tableData = new TableData(new TableDataHeader(actual.getColumnNames().stream()));\n        actual.forEach(tableData::addRow); // create TableData from complex domain data\n\n        return tableData;\n    }\n}","autoTitle":true,"startLine":"package","commentsType":"inline","title":"org/example/domain/CustomComplexDataCompareToHandler.java","anchorId":"custom-complex-domain-data-org-example-domain-customcomplexdatacomparetohandler-java","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Once handler is registered, additional information will be printed during mismatch:","type":"SimpleText"}]},{"lang":"CompareToHandler","snippet":"org.example.domain.CustomComplexDataCompareToHandler","autoTitle":true,"includeRegexp":"CustomComplex","title":"src/test/resources/META-INF/services/org.testingisdocumenting.webtau.expectation.equality.CompareToHandler","anchorId":"custom-complex-domain-data-src-test-resources-meta-inf-services-org-testingisdocumenting-webtau-expectation-equality-comparetohandler","type":"Snippet"},{"lang":"java","snippet":"CustomComplexData calculated = new CustomComplexData(\"cA\", \"cB\");\ncalculated.addRow(1, 2);\ncalculated.addRow(3, 4);\n\nCustomComplexData expected = new CustomComplexData(\"cA\", \"cB\");\nexpected.addRow(1, 2);\nexpected.addRow(3, 5);\n\nactual(calculated).should(equal(expected));","title":"webtau assertion example","surroundedBy":["complex-data-fail-preparation","webtau-assertion"],"surroundedBySeparator":"","anchorId":"custom-complex-domain-data-webtau-assertion-example","type":"Snippet"},{"title":"console output","lines":["\u001B[31mX \u001B[31mfailed \u001B[34mexpecting \u001B[0m\u001B[1m[value] \u001B[0m\u001B[0m\u001B[34mto equal \u001B[35mcA\u001B[33m │ \u001B[35mcB","                                     \u001B[34m1\u001B[33m │  \u001B[34m2","                                     \u001B[34m3\u001B[33m │  \u001B[34m5\u001B[0m:\u001B[0m","\u001B[0m    \u001B[0m\u001B[1m[value][1].cB\u001B[0m\u001B[0m:\u001B[0m  \u001B[36mactual\u001B[0m: \u001B[34m4\u001B[0m \u001B[33m<java.lang.Integer>\u001B[0m","\u001B[0m    \u001B[0m              \u001B[36mexpected\u001B[0m: \u001B[34m5\u001B[0m \u001B[33m<java.lang.Integer>\u001B[33m (\u001B[32m99ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[35mcA\u001B[33m │ \u001B[35mcB   \u001B[0m","   \u001B[34m1\u001B[33m │     \u001B[34m2\u001B[0m","   \u001B[34m3\u001B[33m │ \u001B[31m**4**\u001B[0m"],"anchorId":"custom-complex-domain-data-console-output-2","type":"CliOutput"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Matchers","pageTitle":"Custom Compare To Handler","pageMeta":{"identifier":["{validationPath: \"org/testingisdocumenting/webtau/expectation/equality/CompareToHandler.java\"}`"]},"dirName":"matchers","fileName":"custom-compare-to-handler","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Handler vs Matcher","id":"handler-vs-matcher"},{"title":"CompareToHandler","id":"comparetohandler","style":"api"},{"title":"Custom Complex Domain Data","id":"custom-complex-domain-data"}]}},{"type":"Page","content":[{"id":"standalone-cli","title":"Standalone CLI","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau has a standalone runner, so you can author and run tests without needing a build system or IDEs.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You can fire your editor of choice and start creating automations without worrying about imports and packages","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to get your first result.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In Enterprise setups WebTau command line tool can be shared with everyone through mount drives or other similar","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"mechanisms which makes local testing and CI testing to be much more streamlined.","type":"SimpleText"}]}]},{"id":"setup","title":"Setup","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"url":"https://brew.sh","isFile":false,"type":"Link","content":[{"text":"brew","type":"SimpleText"}]},{"text":" installed in your system use","type":"SimpleText"}]},{"lang":"","snippet":"brew install testingisdocumenting/brew/webtau\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"url":"https://sdkman.io","isFile":false,"type":"Link","content":[{"text":"sdkman","type":"SimpleText"}]},{"text":" installed in your system use","type":"SimpleText"}]},{"lang":"","snippet":"sdk install webtau\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Alternatively, download and unzip ","type":"SimpleText"},{"url":"https://repo.maven.apache.org/maven2/org/testingisdocumenting/webtau/webtau-dist/2.0/webtau-dist-2.0-webtau.zip","isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Add it to your ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: WebTau installed manually requires Java 17+ to be present in ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"}]},{"command":"webtau --example","paramsToHighlight":[],"type":"CliCommand"},{"type":"Paragraph","content":[{"text":"Navigate into ","type":"SimpleText"},{"code":"todo","type":"InlinedCode"},{"text":" example","type":"SimpleText"}]},{"command":"cd examples/todo","paramsToHighlight":[],"type":"CliCommand"},{"lang":"groovy","snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('fetch todo item') {\n    http.get('/todos/1') {\n        title.should == 'delectus aut autem'\n        completed.should == false\n    }\n}","title":"todolist.groovy","anchorId":"setup-todolist-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To run test","type":"SimpleText"}]},{"command":"webtau todolist.groovy --url=https://jsonplaceholder.typicode.com","paramsToHighlight":["url"],"type":"CliCommand"}]},{"id":"repl","title":"REPL","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau standalone runner comes with ","type":"SimpleText"},{"code":"repl","type":"InlinedCode"},{"text":" mode that let you experiment with API and write tests incrementally.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Repl mode preserves context of the runs which significantly speeds up tests development.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Even if you don't want to use Groovy for your tests, you can still benefit from REPL mode as you experiment with APIs","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and system under tests.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"url":"/webtau/REPL/experiments","isFile":false,"type":"Link","content":[{"text":"Learn more about REPL","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Introduction","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Standalone CLI","id":"standalone-cli"},{"title":"Setup","id":"setup"},{"title":"REPL","id":"repl"}]}},{"type":"Page","content":[{"id":"dynamic-scenarios","title":"Dynamic Scenarios","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Every time you call ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":" method a new scenario is being registered.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Define scenarios in a loop to have dynamic scenarios based on provided data.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n[1, 2, 3].each { number ->\n    scenario(\"number $number\") {\n        println number\n    }\n}","title":"dynamic scenarios","anchorId":"dynamic-scenarios-dynamic-scenarios","type":"Snippet"}]},{"id":"csv","title":"CSV","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"url":"/webtau/data/csv#list-of-map","isFile":false,"type":"Link","content":[{"text":"data.csv","type":"SimpleText"}]},{"text":" to conveniently build your scenarios from an external ","type":"SimpleText"},{"code":"CSV","type":"InlinedCode"},{"text":" data set.","type":"SimpleText"}]},{"lang":"csv","snippet":"title, input, output\nhello, 10, 20\nworld, 30, 40","title":"examples/use-cases.csv","anchorId":"csv-examples-use-cases-csv","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndata.csv.table('use-cases.csv').each { row ->\n    scenario(\"use case ${row.title}\") {\n        println row.input\n        println row.output\n    }\n}","title":"CSV-driven tests","anchorId":"csv-csv-driven-tests","type":"Snippet"}]},{"id":"table-data","title":"Table Data","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" if you want to derive data and/or have a convenience of collocating data and tests","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef lever = 10\n\ndef useCases = ['title'  | 'input'    | 'output'] {\n               ____________________________________\n                'hello'  | lever      | lever + 10\n                'world'  | lever + 30 | lever + 40 }\n\nuseCases.each { row ->\n    scenario(\"use case ${row.title}\") {\n        println row.input\n        println row.output\n    }\n}","title":"TableData-driven tests","anchorId":"table-data-tabledata-driven-tests","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Data Driven Scenarios","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"data-driven-scenarios","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Dynamic Scenarios","id":"dynamic-scenarios"},{"title":"CSV","id":"csv"},{"title":"Table Data","id":"table-data"}]}},{"type":"Page","content":[{"id":"terminate-all","title":"Terminate All","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"terminateAll","type":"InlinedCode"},{"text":" if you need to stop a current scenario and all the scenarios after that. Consequent scenarios will be marked","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"as skipped in the produced report.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"first test\") {\n    terminateAll('hard stop of the rest of the tests')\n}\n\nscenario(\"second test\") {\n    browser.open(\"/app\")\n}\n\nscenario(\"third test\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe < 100\n    }\n}","title":"tests termination","anchorId":"terminate-all-tests-termination","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Test two and three in the example above will not be executed. Browser will not be opened and REST API will not be called.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Tests Hard Stops","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"tests-hard-stops","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Terminate All","id":"terminate-all"}]}},{"type":"Page","content":[{"id":"sscenario","title":"sscenario","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Define tests with ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"singleScenario","type":"InlinedCode"},{"text":" to only run those tests and skip all the other tests defined in all the test files.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Useful during tests creation or debugging.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('step one') {\n    http.post('/reset') {\n        // ...\n    }\n}\n\nsscenario('step two') {\n    // test that you want to focus on\n}\n\nsingleScenario('step three') {\n    // test that you want to focus on\n}\n\nscenario('step four') {\n    http.put('/extra') {\n        // ...\n    }\n}","title":"Selective tests run","highlight":[10,14],"anchorId":"sscenario-selective-tests-run","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"webtau","type":"InlinedCode"},{"text":" command line will exit with non zero code if there are ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" tests present","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Selective Run","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"selective-run","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"sscenario","id":"sscenario"}]}},{"type":"Page","content":[{"id":"skipping-tests-on-condition","title":"Skipping Tests on Condition","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"onlyWhen","type":"InlinedCode"},{"text":" if you need to skip tests based on a condition.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nString emailHost = cfg.emailHost\n\nonlyWhen('email server is internal', { -> emailHost.contains('internal.server')}) {\n    scenario('confirmation emails should be sent') {\n        // ...\n        http.get(emailHost) {\n            subjects.should contain('my message')\n        }\n    }\n}","title":"Conditional tests skip","anchorId":"skipping-tests-on-condition-conditional-tests-skip","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Tests will still appear as part of your report but will be marked as skipped.","type":"SimpleText"}]}]},{"id":"skipping-tests-based-on-env","title":"Skipping Tests Based on Env","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use the ","type":"SimpleText"},{"code":"skipForEnv","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"onlyForEnv","type":"InlinedCode"},{"text":" shortcuts if you need to skip or enable tests for a certain environment.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nonlyForEnv('experimental') {\n    scenario('this scenario will only be executed in \"experimental\" env') {\n        http.get('/new-endpoint') {\n            price.shouldBe > 0\n        }\n    }\n}\n\nskipForEnv('experimental') {\n    scenario('this scenario will not be executed in \"experimental\" env') {\n        http.get('/new-endpoint') {\n            price.shouldBe > 0\n        }\n    }\n}","title":"Environment specific tests","anchorId":"skipping-tests-based-on-env-environment-specific-tests","type":"Snippet"}]},{"id":"custom-shortcuts","title":"Custom Shortcuts","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Consider creating your project specific shortcuts to avoid boilerplate.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Here is an example of ","type":"SimpleText"},{"code":"onlyForEnv","type":"InlinedCode"},{"text":" shortcut definition.","type":"SimpleText"}]},{"lang":"groovy","snippet":"static void onlyForEnv(String env, Closure registrationCode) {\n    onlyWhen(\"only for <$env> environment\",\n            { -> cfg.getEnv() == env },\n            registrationCode)\n}","entry":"onlyForEnv","title":"Custom shortcut","type":"Snippet"}]},{"id":"unconditionally-skipping-tests","title":"Unconditionally Skipping Tests","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Instead of ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":", use ","type":"SimpleText"},{"code":"dscenario","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"disabledScenario","type":"InlinedCode"},{"text":" to always skip a test.  This is analogous to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Junit's ","type":"SimpleText"},{"code":"@Ignore","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"@Disabled","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndscenario('do not execute this scenario') {\n    http.get('/non-existing-endpoint') {\n        price.shouldBe > 0\n    }\n}\n\ndisabledScenario('do not execute this scenario either') {\n    http.get('/non-existing-endpoint') {\n        price.shouldBe > 0\n    }\n}","title":"Disable tests","anchorId":"unconditionally-skipping-tests-disable-tests","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Alternatively, if you name file as ","type":"SimpleText"},{"code":"<fileName>.disabled.groovy","type":"InlinedCode"},{"text":" WebTau will skip all the scenarios inside.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Skipping Tests","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"skipping-tests","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Skipping Tests on Condition","id":"skipping-tests-on-condition"},{"title":"Skipping Tests Based on Env","id":"skipping-tests-based-on-env"},{"title":"Custom Shortcuts","id":"custom-shortcuts"},{"title":"Unconditionally Skipping Tests","id":"unconditionally-skipping-tests"}]}},{"type":"Page","content":[{"id":"specifying-test-metadata","title":"Specifying Test Metadata","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To attach custom metadata to a test use ","type":"SimpleText"},{"code":"metadata","type":"InlinedCode"},{"text":" from ","type":"SimpleText"},{"code":"WebTauGroovyDsl","type":"InlinedCode"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nmetadata([owner: \"team A\"]) // setting owner for all the scenarios below\n\nscenario(\"one\") {\n}\n\nscenario(\"two\") {\n}\n\nscenario(\"three\") {\n    metadata([owner: \"team B\"]) // owner is overridden for scenario \"three\"\n}\n\nscenario(\"four\") {\n}","title":"test metadata","commentsType":"inline","anchorId":"specifying-test-metadata-test-metadata","type":"Snippet"},{"type":"Paragraph","content":[{"code":"metadata","type":"InlinedCode"},{"text":" can be called multiple times outside of ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":". It will be applied to all the scenarios below.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nmetadata([owner: \"team A\"]) // setting owner for scenarios \"one\" and \"two\"\n\nscenario(\"one\") {\n}\n\nscenario(\"two\") {\n}\n\nmetadata([owner: \"team B\"]) // setting owner for scenarios \"three\" and \"four\"\n\nscenario(\"three\") {\n}\n\nscenario(\"four\") {\n}","title":"multiple top-level metadata","commentsType":"inline","anchorId":"specifying-test-metadata-multiple-top-level-metadata","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Unlike previous example, \"team B\" will be set for scenario \"three\" and \"four\".","type":"SimpleText"}]}]},{"id":"metadata-encapsulation","title":"Metadata Encapsulation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can encapsulate repeated metadata into a separate file.","type":"SimpleText"}]},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nSupport.teamA()\n\nscenario(\"one\") {\n}\n\nscenario(\"two\") {\n}\n\nscenario(\"three\") {\n    Support.teamB()\n}\n\nscenario(\"four\") {\n}","title":"encapsulated metadata","anchorId":"metadata-encapsulation-encapsulated-metadata","type":"Snippet"},{"lang":"groovy","snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nclass Support {\n    static void owner(String name) {\n        metadata([owner: name])\n    }\n\n    static void severity(int level) {\n        metadata([severity: level])\n    }\n\n    static void teamA() {\n        owner(\"team A\")\n    }\n\n    static void teamB() {\n        owner(\"team B\")\n    }\n\n    static void critical() {\n        severity(100)\n    }\n\n    static void low() {\n        severity(1)\n    }\n}","title":"Support.groovy","anchorId":"metadata-encapsulation-support-groovy","type":"Snippet"}]},{"id":"report","title":"Report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Test metadata will be available in a generated report as well as in test listeners.","type":"SimpleText"}]},{"annotationsPath":"doc-artifacts/reports/report-test-metadata.json","imageSrc":"/webtau/doc-artifacts/reports/report-test-metadata.png","timestamp":1692272692686,"shapes":[{"type":"badge","text":"1","x":664,"y":238,"align":"Center","invertedColors":false}],"width":1310.0,"height":798.0,"type":"AnnotatedImage"},{"delimiter":".","startNumber":1,"type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"If metadata is present, it will be displayed at the test summary page","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Test Metadata","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"test-metadata","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Specifying Test Metadata","id":"specifying-test-metadata"},{"title":"Metadata Encapsulation","id":"metadata-encapsulation"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"id":"test-listener-interface","title":"Test Listener Interface","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To define a custom test listener you need to implement the ","type":"SimpleText"},{"code":"TestListener","type":"InlinedCode"},{"text":" interface","type":"SimpleText"}]},{"lang":"java","snippet":"/*\n * Copyright 2020 webtau maintainers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.testingisdocumenting.webtau;\n\nimport org.testingisdocumenting.webtau.reporter.WebTauTest;\n\nimport java.util.List;\n\n/**\n * Lowest common denominator for Groovy Standalone Tests, JUnit4, JUnit5\n */\npublic interface TestListener {\n    /**\n     * before any test is ran\n     */\n    default void beforeFirstTest() {}\n\n    /**\n     * before test code is invoked\n     * @param test test\n     */\n    default void beforeTestRun(WebTauTest test) {}\n\n    /**\n     * after test code is invoked\n     * @param test test\n     */\n    default void afterTestRun(WebTauTest test) {}\n\n    /**\n     * after all the tests are invoked\n     */\n    default void afterAllTests() {}\n\n    /**\n     * after test is ran but before its first statement.\n     * executed code in this listener is considered to be part of a test.\n     * @param test test\n     */\n    default void beforeFirstTestStatement(WebTauTest test) {}\n\n    /**\n     * right before test considered to be complete. May not be executed if the test didn't reach the last statement.\n     * executed code in this listener is considered to be part of a test.\n     * @param test test\n     */\n    default void afterLastTestStatement(WebTauTest test) {}\n\n    /**\n     * after all the tests are discovered\n     * @param tests stream of discovered tests\n     */\n    default void afterTestsRegistration(List<WebTauTest> tests) {}\n}","title":"TestListener.java","anchorId":"test-listener-interface-testlistener-java","type":"Snippet"}]},{"id":"config","title":"Config","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Once you have an implementation, use the ","type":"SimpleText"},{"code":"testListeners","type":"InlinedCode"},{"text":" key in your config file to use it","type":"SimpleText"}]},{"lang":"groovy","snippet":"import listeners.MetadataValidationTestListener\n\ntestListeners = [MetadataValidationTestListener]","title":"webtau.cfg.groovy","anchorId":"config-webtau-cfg-groovy","type":"Snippet"},{"lang":"groovy","snippet":"package listeners\n\nimport org.testingisdocumenting.webtau.TestListener\nimport org.testingisdocumenting.webtau.reporter.WebTauTest\n\nclass MetadataValidationTestListener implements TestListener {\n    @Override\n    void afterLastTestStatement(WebTauTest test) {\n        if (!test.isSynthetic() && !test.metadata.has('owner')) {\n            throw new RuntimeException('owner for <' + test.scenario + '> is not set')\n        }\n    }\n}","title":"listeners/MetadataValidationTestListener.groovy","anchorId":"config-listeners-metadatavalidationtestlistener-groovy","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Test Listeners","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"test-listeners","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Test Listener Interface","id":"test-listener-interface"},{"title":"Config","id":"config"}]}},{"type":"Page","content":[{"id":"serial-execution","title":"Serial execution","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The default mode for running tests is serially; in other words, scenario files are executed one after the other.","type":"SimpleText"}]}]},{"id":"parallel-execution","title":"Parallel execution","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau supports executing tests in parallel.  In this mode, ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"scenario files","type":"SimpleText"}]},{"text":" are executed in parallel.  ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Individual","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"scenarios","type":"SimpleText"}]},{"text":" are still executed sequentially.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For large test suites, it is therefore advisable to create many small focused scenario files instead of few large files.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"--parallel","type":"InlinedCode"},{"text":" parameter to run each test file in a separate thread.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"numberOfThreads","type":"InlinedCode"},{"text":" to specify the maximum number of threads either through the configuration file","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"or as a CLI parameter. Value of ","type":"SimpleText"},{"code":"-1","type":"InlinedCode"},{"text":" is equivalent of using ","type":"SimpleText"},{"code":"--parallel","type":"InlinedCode"},{"text":" and will use as many threads as there are files.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: scenario file execution order is not guaranteed.","type":"SimpleText"}]}]},{"id":"scenario-discovery","title":"Scenario discovery","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau via CLI or Maven plugin supports a number of methods for specifying and discovering scenarios.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The simplest way is to list the scenario files explicitly:","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"command":"webtau scenarios/rest/simpleGet.groovy scnearios/rest/simplePost.groovy","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Maven","content":[{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/simpleGet.groovy</include>\n                <include>scenarios/simplePost.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Wildcard matching is also supported.  In the CLI version this is normal shell ","type":"SimpleText"},{"url":"https://en.wikipedia.org/wiki/Glob_(programming)","isFile":false,"type":"Link","content":[{"text":"glob","type":"SimpleText"}]},{"type":"SoftLineBreak"},{"text":"and in Maven it's a standard Maven file inclusion block:","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"command":"webtau scenarios/rest/simple*.groovy","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Maven","content":[{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/simple*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"It is also possible to include a set of base directories and WebTau will then find all ","type":"SimpleText"},{"code":"*.groovy","type":"InlinedCode"},{"text":" files within","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"them, recursively:","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"command":"webtau scenarios/rest","paramsToHighlight":[],"type":"CliCommand"}]},{"name":"Maven","content":[{"lang":"xml","snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>2.0</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"In this mode, the HTML report that WebTau generates will show paths to the files relative to the","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"requested directories.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"Test Execution","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"test-execution","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Serial execution","id":"serial-execution"},{"title":"Parallel execution","id":"parallel-execution"},{"title":"Scenario discovery","id":"scenario-discovery"}]}},{"type":"Page","content":[{"id":"autocompletion-dependency","title":"Autocompletion Dependency","type":"Section","content":[{"type":"Paragraph","content":[{"text":"If you use standalone runner outside of Maven/Gradle, your IDE won't know about packages and classes to make auto-completion work.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To mitigate that, manually register ","type":"SimpleText"},{"code":"webtau-all.jar","type":"InlinedCode"},{"text":" as a global library. Jar is located in the ","type":"SimpleText"},{"code":"lib","type":"InlinedCode"},{"text":" directory next to the ","type":"SimpleText"},{"code":"webtau","type":"InlinedCode"},{"text":" executable.","type":"SimpleText"}]}]},{"id":"intellij-idea","title":"Intellij IDEA","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Follow ","type":"SimpleText"},{"url":"https://www.jetbrains.com/help/idea/libraries-and-global-libraries.html","isFile":false,"type":"Link","content":[{"text":"documentation","type":"SimpleText"}]},{"text":" to register ","type":"SimpleText"},{"code":"webtau-all.jar","type":"InlinedCode"},{"text":" as a global library.","type":"SimpleText"}]}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Groovy Standalone Runner","pageTitle":"IDE Setup","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"IDE-setup","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Autocompletion Dependency","id":"autocompletion-dependency"},{"title":"Intellij IDEA","id":"intellij-idea"}]}},{"type":"Page","content":[{"id":"basic-properties","title":"Basic Properties","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use assignment to register a config value","type":"SimpleText"}]},{"lang":"groovy","snippet":"email = 'hello'\ncliPath = ['p1', 'p2']","title":"webtau.cfg.groovy","surroundedBy":"basic-properties","anchorId":"basic-properties-webtau-cfg-groovy","type":"Snippet"}]},{"id":"complex-properties","title":"Complex Properties","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Multiple ways to register complex properties","type":"SimpleText"}]},{"lang":"groovy","snippet":"complex.my_var.nested = 'webtau' // direct nested assignment\n\ncomplex { // scope definition for multiple assignment\n    abc = 'abc_value'\n    EDF = 'edf_value'\n    subNested {\n        nested = 'nested_nested'\n    }\n}\n\nanotherComplex = [nested: 'vn'] // map based assignment\nanotherComplex.anotherNested = 'an'","title":"webtau.cfg.groovy","surroundedBy":"complex-properties","commentsType":"inline","anchorId":"complex-properties-webtau-cfg-groovy","type":"Snippet"}]},{"id":"environments","title":"Environments","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"environments","type":"InlinedCode"},{"text":" block to define environment specific values and overrides","type":"SimpleText"}]},{"lang":"groovy","snippet":"email = 'hello'\nserver = 'my-server'\nenvironments {\n    dev {\n        email = 'dev-hello'\n    }\n\n    beta {\n        email = 'beta'\n    }\n\n    prod {\n        server = 'prod-server'\n    }\n}","title":"webtau.cfg.groovy","surroundedBy":"environment-override","anchorId":"environments-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Environment specific complex object overrides","type":"SimpleText"}]},{"lang":"groovy","snippet":"complex = [id1: 'value1', id2: 'value2']\nenvironments {\n    dev {\n        complex.id1 = 'value1-dev'\n        complex.id3 = 'value3-dev'\n    }\n\n    beta {\n        complex.id3 = 'value3-beta'\n    }\n}","title":"webtau.cfg.groovy","surroundedBy":"environment-complex-override","anchorId":"environments-webtau-cfg-groovy-2","type":"Snippet"},{"command":"webtau --env=dev","paramsToHighlight":[],"type":"CliCommand"}]},{"id":"personas","title":"Personas","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"personas","type":"InlinedCode"},{"text":" block to define persona specific values and overrides","type":"SimpleText"}]},{"lang":"groovy","snippet":"email = 'hello'\npersonas {\n    Alice {\n        email = 'alice-email'\n    }\n\n    Bob {\n        email = 'bob-email'\n    }\n}","title":"webtau.cfg.groovy","surroundedBy":"persona-overrides","anchorId":"personas-webtau-cfg-groovy","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Persona specific complex object overrides","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliEnv = [\n        COMMON: 'common value',\n        ANOTHER_COMMON: 'another common value']\n\npersonas {\n    Alice {\n        cliEnv.CREDENTIALS = 'alice-token'\n        cliEnv.EXTRA_ALICE = 'extra alice'\n    }\n\n    Bob {\n        cliEnv.CREDENTIALS = 'bob-token'\n        cliEnv.EXTRA_BOB = 'extra bob'\n    }\n}","title":"webtau.cfg.groovy","surroundedBy":"persona-complex-overrides","anchorId":"personas-webtau-cfg-groovy-2","type":"Snippet"}]},{"id":"persona-inside-environment","title":"Persona Inside Environment","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"personas","type":"InlinedCode"},{"text":" block inside specific environment within ","type":"SimpleText"},{"code":"environments","type":"InlinedCode"},{"text":" block to have persona override for an environment","type":"SimpleText"}]},{"lang":"groovy","snippet":"cliEnv = [\n        COMMON: 'common value',\n        ANOTHER_COMMON: 'another common value']\n\npersonas {\n    Alice {\n        cliEnv.CREDENTIALS = 'alice-token' // default Alice's specific values\n        cliEnv.EXTRA_ALICE = 'extra alice'\n    }\n\n    Bob {\n        cliEnv.CREDENTIALS = 'bob-token'\n        cliEnv.EXTRA_BOB = 'extra bob'\n    }\n}\n\nenvironments {\n    dev {\n        personas {\n            Alice {\n                cliEnv.CREDENTIALS = 'alice-dev-token' // Alice's overrides for dev environment\n                cliEnv.EXTRA_ALICE = 'extra dev alice'\n                cliEnv.EXTRA_DEV_V = 'extra dev alice v'\n            }\n\n            Bob {\n                cliEnv.CREDENTIALS = 'bob-dev-token'\n                cliEnv.EXTRA_BOB = 'extra dev bob'\n            }\n        }\n    }\n\n    beta {\n        personas {\n            Alice {\n                cliEnv.CREDENTIALS = 'alice-beta-token'\n                cliEnv.EXTRA_ALICE = 'extra beta alice'\n                cliEnv.EXTRA_BETA_V = 'extra beta alice v'\n            }\n\n            Bob {\n                cliEnv.CREDENTIALS = 'bob-beta-token'\n                cliEnv.EXTRA_BOB = 'extra beta bob'\n            }\n        }\n    }\n}","title":"webtau.cfg.groovy","surroundedBy":"complex-environment-persona","commentsType":"inline","anchorId":"persona-inside-environment-webtau-cfg-groovy","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Configuration","pageTitle":"Groovy Config File","pageMeta":{},"dirName":"configuration","fileName":"groovy-config-file","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Basic Properties","id":"basic-properties"},{"title":"Complex Properties","id":"complex-properties"},{"title":"Environments","id":"environments"},{"title":"Personas","id":"personas"},{"title":"Persona Inside Environment","id":"persona-inside-environment"}]}},{"type":"Page","content":[{"id":"cli-and-configuration-file-options","title":"CLI and configuration file options","type":"Section","content":[{"parameters":[{"name":"browserDisableExtensions","type":[],"anchorId":"browserDisableExtensions","description":[{"type":"Paragraph","content":[{"text":"run browser without extensions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"browserHeadless","type":[],"anchorId":"browserHeadless","description":[{"type":"Paragraph","content":[{"text":"run browser in headless mode","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"browserHeight","type":[],"anchorId":"browserHeight","description":[{"type":"Paragraph","content":[{"text":"browser window height","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}]},{"name":"browserId","type":[],"anchorId":"browserId","description":[{"type":"Paragraph","content":[{"text":"browser to use: chrome, firefox","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": chrome","type":"SimpleText"}]}]},{"name":"browserRemoteDriverUrl","type":[],"anchorId":"browserRemoteDriverUrl","description":[{"type":"Paragraph","content":[{"text":"browser remote driver url","type":"SimpleText"}]}]},{"name":"browserSameDriverInThreads","type":[],"anchorId":"browserSameDriverInThreads","description":[{"type":"Paragraph","content":[{"text":"set to true if you want only a single browser across multiple threads. Use case is notebook like apps.Personas will still have their own drivers","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"browserStaleElementRetry","type":[],"anchorId":"browserStaleElementRetry","description":[{"type":"Paragraph","content":[{"text":"number of times to automatically retry for browser stale element actions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5","type":"SimpleText"}]}]},{"name":"browserStaleElementRetryWait","type":[],"anchorId":"browserStaleElementRetryWait","description":[{"type":"Paragraph","content":[{"text":"wait time in between browser stale element retries","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 100","type":"SimpleText"}]}]},{"name":"browserTestcontainersEnabled","type":[],"anchorId":"browserTestcontainersEnabled","description":[{"type":"Paragraph","content":[{"text":"pass true to get connection to web drivers using Test Containers","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"browserUrl","type":[],"anchorId":"browserUrl","description":[{"type":"Paragraph","content":[{"text":"browser base url for application under test. It is being used instead of url when provided","type":"SimpleText"}]}]},{"name":"browserUseFakeMedia","type":[],"anchorId":"browserUseFakeMedia","description":[{"type":"Paragraph","content":[{"text":"use fake microphone/camera to avoid asking for permission on browser/OS level","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"browserVersion","type":[],"anchorId":"browserVersion","description":[{"type":"Paragraph","content":[{"text":"browser version for automatic driver download","type":"SimpleText"}]}]},{"name":"browserWidth","type":[],"anchorId":"browserWidth","description":[{"type":"Paragraph","content":[{"text":"browser window width","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}]},{"name":"cachePath","type":[],"anchorId":"cachePath","description":[{"type":"Paragraph","content":[{"text":"user driven cache base dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/.webtau-cache","type":"SimpleText"}]}]},{"name":"chromeBinPath","type":[],"anchorId":"chromeBinPath","description":[{"type":"Paragraph","content":[{"text":"path to chrome binary","type":"SimpleText"}]}]},{"name":"chromeDriverPath","type":[],"anchorId":"chromeDriverPath","description":[{"type":"Paragraph","content":[{"text":"path to chrome driver binary","type":"SimpleText"}]}]},{"name":"cliEnv","type":[],"anchorId":"cliEnv","description":[{"type":"Paragraph","content":[{"text":"cli common environment variables","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": {}","type":"SimpleText"}]}]},{"name":"cliPath","type":[],"anchorId":"cliPath","description":[{"type":"Paragraph","content":[{"text":"path items to append to path used for cli runs","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": []","type":"SimpleText"}]}]},{"name":"cliTimeout","type":[],"anchorId":"cliTimeout","description":[{"type":"Paragraph","content":[{"text":"cli foreground command run timeout (ms)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}]},{"name":"config","type":[],"anchorId":"config","description":[{"type":"Paragraph","content":[{"text":"config file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau.cfg.groovy","type":"SimpleText"}]}]},{"name":"consoleOutputCaptureDir","type":[],"anchorId":"consoleOutputCaptureDir","description":[{"type":"Paragraph","content":[{"text":"path to a directory where overall and per test console output will be stored","type":"SimpleText"}]}]},{"name":"consolePayloadOutputLimit","type":[],"anchorId":"consolePayloadOutputLimit","description":[{"type":"Paragraph","content":[{"text":"max number of lines to display in console for outputs (e.g. http response)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 500","type":"SimpleText"}]}]},{"name":"dbDriverClassName","type":[],"anchorId":"dbDriverClassName","description":[{"type":"Paragraph","content":[{"text":"primary database driver class name","type":"SimpleText"}]}]},{"name":"dbPassword","type":[],"anchorId":"dbPassword","description":[{"type":"Paragraph","content":[{"text":"primary database password","type":"SimpleText"}]}]},{"name":"dbUrl","type":[],"anchorId":"dbUrl","description":[{"type":"Paragraph","content":[{"text":"primary database url","type":"SimpleText"}]}]},{"name":"dbUserName","type":[],"anchorId":"dbUserName","description":[{"type":"Paragraph","content":[{"text":"primary database user name","type":"SimpleText"}]}]},{"name":"disableConsoleOverallReport","type":[],"anchorId":"disableConsoleOverallReport","description":[{"type":"Paragraph","content":[{"text":"do not print failed tests, overall summary and path to the generated report at the end","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"disableRedirects","type":[],"anchorId":"disableRedirects","description":[{"type":"Paragraph","content":[{"text":"disable following of redirects from HTTP calls","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"docPath","type":[],"anchorId":"docPath","description":[{"type":"Paragraph","content":[{"text":"path for captured request/responses, screenshots and other generated artifacts for documentation","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/doc-artifacts","type":"SimpleText"}]}]},{"name":"env","type":[],"anchorId":"env","description":[{"type":"Paragraph","content":[{"text":"environment id","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": local","type":"SimpleText"}]}]},{"name":"failedReportPath","type":[],"anchorId":"failedReportPath","description":[{"type":"Paragraph","content":[{"text":"failed report file path","type":"SimpleText"}]}]},{"name":"firefoxBinPath","type":[],"anchorId":"firefoxBinPath","description":[{"type":"Paragraph","content":[{"text":"path to firefox binary","type":"SimpleText"}]}]},{"name":"firefoxDriverPath","type":[],"anchorId":"firefoxDriverPath","description":[{"type":"Paragraph","content":[{"text":"path to firefox driver binary","type":"SimpleText"}]}]},{"name":"fullStackTrace","type":[],"anchorId":"fullStackTrace","description":[{"type":"Paragraph","content":[{"text":"print full stack trace to console","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"graphQLEndpoint","type":[],"anchorId":"graphQLEndpoint","description":[{"type":"Paragraph","content":[{"text":"override the default graphQL endpoint","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /graphql","type":"SimpleText"}]}]},{"name":"graphQLIgnoreIntrospectionFailures","type":[],"anchorId":"graphQLIgnoreIntrospectionFailures","description":[{"type":"Paragraph","content":[{"text":"ignore graphQL introspection failures, introspection is required for coverage reporting","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}]},{"name":"graphQLShowOperationAsQueryParam","type":[],"anchorId":"graphQLShowOperationAsQueryParam","description":[{"type":"Paragraph","content":[{"text":"pass the graphQL operation as operation=","type":"SimpleText"},{"text":" query parameter if present","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}]},{"name":"httpDataCoverageOutput","type":[],"anchorId":"httpDataCoverageOutput","description":[{"type":"Paragraph","content":[{"text":"path to generated data coverage JSON result for additional processing","type":"SimpleText"}]}]},{"name":"httpProxy","type":[],"anchorId":"httpProxy","description":[{"type":"Paragraph","content":[{"text":"http proxy host:port","type":"SimpleText"}]}]},{"name":"httpRoutesPath","type":[],"anchorId":"httpRoutesPath","description":[{"type":"Paragraph","content":[{"text":"path to a file or a resource with operations in a format METHOD route","type":"SimpleText"}]}]},{"name":"httpTimeout","type":[],"anchorId":"httpTimeout","description":[{"type":"Paragraph","content":[{"text":"http connect and read timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}]},{"name":"jsonSchemasDir","type":[],"anchorId":"jsonSchemasDir","description":[{"type":"Paragraph","content":[{"text":"url of directory containing JSON schemas","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /home/runner/work/webtau/webtau/webtau-groovy-app","type":"SimpleText"}]}]},{"name":"maxRedirects","type":[],"anchorId":"maxRedirects","description":[{"type":"Paragraph","content":[{"text":"Maximum number of redirects to follow for an HTTP call","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 20","type":"SimpleText"}]}]},{"name":"noColor","type":[],"anchorId":"noColor","description":[{"type":"Paragraph","content":[{"text":"disable ANSI colors","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"numberOfThreads","type":[],"anchorId":"numberOfThreads","description":[{"type":"Paragraph","content":[{"text":"number of threads on which to run test files (one file per thread), -1 will use as many threads as there are files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 1","type":"SimpleText"}]}]},{"name":"openApiIgnoreAdditionalProperties","type":[],"anchorId":"openApiIgnoreAdditionalProperties","description":[{"type":"Paragraph","content":[{"text":"ignore additional OpenAPI properties","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"openApiSpecUrl","type":[],"anchorId":"openApiSpecUrl","description":[{"type":"Paragraph","content":[{"text":"url of OpenAPI 2 spec against which to validate http calls","type":"SimpleText"}]}]},{"name":"parallel","type":[],"anchorId":"parallel","description":[{"type":"Paragraph","content":[{"text":"run tests in parallel using numberOfThreads equals to number of files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"removeWebTauFromUserAgent","type":[],"anchorId":"removeWebTauFromUserAgent","description":[{"type":"Paragraph","content":[{"text":"By default webtau appends webtau and its version to the user-agent, this disables that part","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"reportName","type":[],"anchorId":"reportName","description":[{"type":"Paragraph","content":[{"text":"report name to show","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": WebTau report","type":"SimpleText"}]}]},{"name":"reportNameUrl","type":[],"anchorId":"reportNameUrl","description":[{"type":"Paragraph","content":[{"text":"report name url to navigate to when clicked","type":"SimpleText"}]}]},{"name":"reportPath","type":[],"anchorId":"reportPath","description":[{"type":"Paragraph","content":[{"text":"report file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/webtau.report.html","type":"SimpleText"}]}]},{"name":"serverProxyMaxThreads","type":[],"anchorId":"serverProxyMaxThreads","description":[{"type":"Paragraph","content":[{"text":"max number of threads for proxy servers (default number of CPUs * 2)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 4","type":"SimpleText"}]}]},{"name":"tableVerticalSeparator","type":[],"anchorId":"tableVerticalSeparator","description":[{"type":"Paragraph","content":[{"text":"string to use as a vertical separator when print TableData","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":":  │","type":"SimpleText"}]}]},{"name":"termui","type":[],"anchorId":"termui","description":[{"type":"Paragraph","content":[{"text":"enable terminal UI to monitor tests (experimental)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"url","type":[],"anchorId":"url","description":[{"type":"Paragraph","content":[{"text":"base url for application under test","type":"SimpleText"}]}]},{"name":"userAgent","type":[],"anchorId":"userAgent","description":[{"type":"Paragraph","content":[{"text":"User agent to send on HTTP requests","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau/2.0","type":"SimpleText"}]}]},{"name":"verbosityLevel","type":[],"anchorId":"verbosityLevel","description":[{"type":"Paragraph","content":[{"text":"output verbosity level. 0 - no output; 1 - test names; 2 - first level steps; etc","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 2147483647","type":"SimpleText"}]}]},{"name":"waitTick","type":[],"anchorId":"waitTick","description":[{"type":"Paragraph","content":[{"text":"wait tick in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 100","type":"SimpleText"}]}]},{"name":"waitTimeout","type":[],"anchorId":"waitTimeout","description":[{"type":"Paragraph","content":[{"text":"wait timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5000","type":"SimpleText"}]}]},{"name":"webSocketMaxMessages","type":[],"anchorId":"webSocketMaxMessages","description":[{"type":"Paragraph","content":[{"text":"max number of received messages to keep for polling/waiting","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 1000","type":"SimpleText"}]}]},{"name":"webSocketPollTimeout","type":[],"anchorId":"webSocketPollTimeout","description":[{"type":"Paragraph","content":[{"text":"poll new message timeout","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5000","type":"SimpleText"}]}]},{"name":"workingDir","type":[],"anchorId":"workingDir","description":[{"type":"Paragraph","content":[{"text":"logical working dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ","type":"SimpleText"}]}]}],"noWrap":true,"type":"ApiParameters"}]},{"id":"environment-variable-options","title":"Environment variable options","type":"Section","content":[{"parameters":[{"name":"WEBTAU_BROWSER_DISABLE_EXTENSIONS","type":[],"anchorId":"WEBTAU_BROWSER_DISABLE_EXTENSIONS","description":[{"type":"Paragraph","content":[{"text":"run browser without extensions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_HEADLESS","type":[],"anchorId":"WEBTAU_BROWSER_HEADLESS","description":[{"type":"Paragraph","content":[{"text":"run browser in headless mode","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_HEIGHT","type":[],"anchorId":"WEBTAU_BROWSER_HEIGHT","description":[{"type":"Paragraph","content":[{"text":"browser window height","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_ID","type":[],"anchorId":"WEBTAU_BROWSER_ID","description":[{"type":"Paragraph","content":[{"text":"browser to use: chrome, firefox","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": chrome","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_REMOTE_DRIVER_URL","type":[],"anchorId":"WEBTAU_BROWSER_REMOTE_DRIVER_URL","description":[{"type":"Paragraph","content":[{"text":"browser remote driver url","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_SAME_DRIVER_IN_THREADS","type":[],"anchorId":"WEBTAU_BROWSER_SAME_DRIVER_IN_THREADS","description":[{"type":"Paragraph","content":[{"text":"set to true if you want only a single browser across multiple threads. Use case is notebook like apps.Personas will still have their own drivers","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY","type":[],"anchorId":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY","description":[{"type":"Paragraph","content":[{"text":"number of times to automatically retry for browser stale element actions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY_WAIT","type":[],"anchorId":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY_WAIT","description":[{"type":"Paragraph","content":[{"text":"wait time in between browser stale element retries","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 100","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_TESTCONTAINERS_ENABLED","type":[],"anchorId":"WEBTAU_BROWSER_TESTCONTAINERS_ENABLED","description":[{"type":"Paragraph","content":[{"text":"pass true to get connection to web drivers using Test Containers","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_URL","type":[],"anchorId":"WEBTAU_BROWSER_URL","description":[{"type":"Paragraph","content":[{"text":"browser base url for application under test. It is being used instead of url when provided","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_USE_FAKE_MEDIA","type":[],"anchorId":"WEBTAU_BROWSER_USE_FAKE_MEDIA","description":[{"type":"Paragraph","content":[{"text":"use fake microphone/camera to avoid asking for permission on browser/OS level","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_VERSION","type":[],"anchorId":"WEBTAU_BROWSER_VERSION","description":[{"type":"Paragraph","content":[{"text":"browser version for automatic driver download","type":"SimpleText"}]}]},{"name":"WEBTAU_BROWSER_WIDTH","type":[],"anchorId":"WEBTAU_BROWSER_WIDTH","description":[{"type":"Paragraph","content":[{"text":"browser window width","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}]},{"name":"WEBTAU_CACHE_PATH","type":[],"anchorId":"WEBTAU_CACHE_PATH","description":[{"type":"Paragraph","content":[{"text":"user driven cache base dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/.webtau-cache","type":"SimpleText"}]}]},{"name":"WEBTAU_CHROME_BIN_PATH","type":[],"anchorId":"WEBTAU_CHROME_BIN_PATH","description":[{"type":"Paragraph","content":[{"text":"path to chrome binary","type":"SimpleText"}]}]},{"name":"WEBTAU_CHROME_DRIVER_PATH","type":[],"anchorId":"WEBTAU_CHROME_DRIVER_PATH","description":[{"type":"Paragraph","content":[{"text":"path to chrome driver binary","type":"SimpleText"}]}]},{"name":"WEBTAU_CLI_ENV","type":[],"anchorId":"WEBTAU_CLI_ENV","description":[{"type":"Paragraph","content":[{"text":"cli common environment variables","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": {}","type":"SimpleText"}]}]},{"name":"WEBTAU_CLI_PATH","type":[],"anchorId":"WEBTAU_CLI_PATH","description":[{"type":"Paragraph","content":[{"text":"path items to append to path used for cli runs","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": []","type":"SimpleText"}]}]},{"name":"WEBTAU_CLI_TIMEOUT","type":[],"anchorId":"WEBTAU_CLI_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"cli foreground command run timeout (ms)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}]},{"name":"WEBTAU_CONFIG","type":[],"anchorId":"WEBTAU_CONFIG","description":[{"type":"Paragraph","content":[{"text":"config file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau.cfg.groovy","type":"SimpleText"}]}]},{"name":"WEBTAU_CONSOLE_OUTPUT_CAPTURE_DIR","type":[],"anchorId":"WEBTAU_CONSOLE_OUTPUT_CAPTURE_DIR","description":[{"type":"Paragraph","content":[{"text":"path to a directory where overall and per test console output will be stored","type":"SimpleText"}]}]},{"name":"WEBTAU_CONSOLE_PAYLOAD_OUTPUT_LIMIT","type":[],"anchorId":"WEBTAU_CONSOLE_PAYLOAD_OUTPUT_LIMIT","description":[{"type":"Paragraph","content":[{"text":"max number of lines to display in console for outputs (e.g. http response)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 500","type":"SimpleText"}]}]},{"name":"WEBTAU_DB_DRIVER_CLASS_NAME","type":[],"anchorId":"WEBTAU_DB_DRIVER_CLASS_NAME","description":[{"type":"Paragraph","content":[{"text":"primary database driver class name","type":"SimpleText"}]}]},{"name":"WEBTAU_DB_PASSWORD","type":[],"anchorId":"WEBTAU_DB_PASSWORD","description":[{"type":"Paragraph","content":[{"text":"primary database password","type":"SimpleText"}]}]},{"name":"WEBTAU_DB_URL","type":[],"anchorId":"WEBTAU_DB_URL","description":[{"type":"Paragraph","content":[{"text":"primary database url","type":"SimpleText"}]}]},{"name":"WEBTAU_DB_USER_NAME","type":[],"anchorId":"WEBTAU_DB_USER_NAME","description":[{"type":"Paragraph","content":[{"text":"primary database user name","type":"SimpleText"}]}]},{"name":"WEBTAU_DISABLE_CONSOLE_OVERALL_REPORT","type":[],"anchorId":"WEBTAU_DISABLE_CONSOLE_OVERALL_REPORT","description":[{"type":"Paragraph","content":[{"text":"do not print failed tests, overall summary and path to the generated report at the end","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_DISABLE_REDIRECTS","type":[],"anchorId":"WEBTAU_DISABLE_REDIRECTS","description":[{"type":"Paragraph","content":[{"text":"disable following of redirects from HTTP calls","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_DOC_PATH","type":[],"anchorId":"WEBTAU_DOC_PATH","description":[{"type":"Paragraph","content":[{"text":"path for captured request/responses, screenshots and other generated artifacts for documentation","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/doc-artifacts","type":"SimpleText"}]}]},{"name":"WEBTAU_ENV","type":[],"anchorId":"WEBTAU_ENV","description":[{"type":"Paragraph","content":[{"text":"environment id","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": local","type":"SimpleText"}]}]},{"name":"WEBTAU_FAILED_REPORT_PATH","type":[],"anchorId":"WEBTAU_FAILED_REPORT_PATH","description":[{"type":"Paragraph","content":[{"text":"failed report file path","type":"SimpleText"}]}]},{"name":"WEBTAU_FIREFOX_BIN_PATH","type":[],"anchorId":"WEBTAU_FIREFOX_BIN_PATH","description":[{"type":"Paragraph","content":[{"text":"path to firefox binary","type":"SimpleText"}]}]},{"name":"WEBTAU_FIREFOX_DRIVER_PATH","type":[],"anchorId":"WEBTAU_FIREFOX_DRIVER_PATH","description":[{"type":"Paragraph","content":[{"text":"path to firefox driver binary","type":"SimpleText"}]}]},{"name":"WEBTAU_FULL_STACK_TRACE","type":[],"anchorId":"WEBTAU_FULL_STACK_TRACE","description":[{"type":"Paragraph","content":[{"text":"print full stack trace to console","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_GRAPH_QLENDPOINT","type":[],"anchorId":"WEBTAU_GRAPH_QLENDPOINT","description":[{"type":"Paragraph","content":[{"text":"override the default graphQL endpoint","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /graphql","type":"SimpleText"}]}]},{"name":"WEBTAU_GRAPH_QLIGNORE_INTROSPECTION_FAILURES","type":[],"anchorId":"WEBTAU_GRAPH_QLIGNORE_INTROSPECTION_FAILURES","description":[{"type":"Paragraph","content":[{"text":"ignore graphQL introspection failures, introspection is required for coverage reporting","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}]},{"name":"WEBTAU_GRAPH_QLSHOW_OPERATION_AS_QUERY_PARAM","type":[],"anchorId":"WEBTAU_GRAPH_QLSHOW_OPERATION_AS_QUERY_PARAM","description":[{"type":"Paragraph","content":[{"text":"pass the graphQL operation as operation=","type":"SimpleText"},{"text":" query parameter if present","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}]},{"name":"WEBTAU_HTTP_DATA_COVERAGE_OUTPUT","type":[],"anchorId":"WEBTAU_HTTP_DATA_COVERAGE_OUTPUT","description":[{"type":"Paragraph","content":[{"text":"path to generated data coverage JSON result for additional processing","type":"SimpleText"}]}]},{"name":"WEBTAU_HTTP_PROXY","type":[],"anchorId":"WEBTAU_HTTP_PROXY","description":[{"type":"Paragraph","content":[{"text":"http proxy host:port","type":"SimpleText"}]}]},{"name":"WEBTAU_HTTP_ROUTES_PATH","type":[],"anchorId":"WEBTAU_HTTP_ROUTES_PATH","description":[{"type":"Paragraph","content":[{"text":"path to a file or a resource with operations in a format METHOD route","type":"SimpleText"}]}]},{"name":"WEBTAU_HTTP_TIMEOUT","type":[],"anchorId":"WEBTAU_HTTP_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"http connect and read timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}]},{"name":"WEBTAU_JSON_SCHEMAS_DIR","type":[],"anchorId":"WEBTAU_JSON_SCHEMAS_DIR","description":[{"type":"Paragraph","content":[{"text":"url of directory containing JSON schemas","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /home/runner/work/webtau/webtau/webtau-groovy-app","type":"SimpleText"}]}]},{"name":"WEBTAU_MAX_REDIRECTS","type":[],"anchorId":"WEBTAU_MAX_REDIRECTS","description":[{"type":"Paragraph","content":[{"text":"Maximum number of redirects to follow for an HTTP call","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 20","type":"SimpleText"}]}]},{"name":"WEBTAU_NO_COLOR","type":[],"anchorId":"WEBTAU_NO_COLOR","description":[{"type":"Paragraph","content":[{"text":"disable ANSI colors","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_NUMBER_OF_THREADS","type":[],"anchorId":"WEBTAU_NUMBER_OF_THREADS","description":[{"type":"Paragraph","content":[{"text":"number of threads on which to run test files (one file per thread), -1 will use as many threads as there are files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 1","type":"SimpleText"}]}]},{"name":"WEBTAU_OPEN_API_IGNORE_ADDITIONAL_PROPERTIES","type":[],"anchorId":"WEBTAU_OPEN_API_IGNORE_ADDITIONAL_PROPERTIES","description":[{"type":"Paragraph","content":[{"text":"ignore additional OpenAPI properties","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_OPEN_API_SPEC_URL","type":[],"anchorId":"WEBTAU_OPEN_API_SPEC_URL","description":[{"type":"Paragraph","content":[{"text":"url of OpenAPI 2 spec against which to validate http calls","type":"SimpleText"}]}]},{"name":"WEBTAU_PARALLEL","type":[],"anchorId":"WEBTAU_PARALLEL","description":[{"type":"Paragraph","content":[{"text":"run tests in parallel using numberOfThreads equals to number of files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_REMOVE_WEB_TAU_FROM_USER_AGENT","type":[],"anchorId":"WEBTAU_REMOVE_WEB_TAU_FROM_USER_AGENT","description":[{"type":"Paragraph","content":[{"text":"By default webtau appends webtau and its version to the user-agent, this disables that part","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_REPORT_NAME","type":[],"anchorId":"WEBTAU_REPORT_NAME","description":[{"type":"Paragraph","content":[{"text":"report name to show","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": WebTau report","type":"SimpleText"}]}]},{"name":"WEBTAU_REPORT_NAME_URL","type":[],"anchorId":"WEBTAU_REPORT_NAME_URL","description":[{"type":"Paragraph","content":[{"text":"report name url to navigate to when clicked","type":"SimpleText"}]}]},{"name":"WEBTAU_REPORT_PATH","type":[],"anchorId":"WEBTAU_REPORT_PATH","description":[{"type":"Paragraph","content":[{"text":"report file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/webtau.report.html","type":"SimpleText"}]}]},{"name":"WEBTAU_SERVER_PROXY_MAX_THREADS","type":[],"anchorId":"WEBTAU_SERVER_PROXY_MAX_THREADS","description":[{"type":"Paragraph","content":[{"text":"max number of threads for proxy servers (default number of CPUs * 2)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 4","type":"SimpleText"}]}]},{"name":"WEBTAU_TABLE_VERTICAL_SEPARATOR","type":[],"anchorId":"WEBTAU_TABLE_VERTICAL_SEPARATOR","description":[{"type":"Paragraph","content":[{"text":"string to use as a vertical separator when print TableData","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":":  │","type":"SimpleText"}]}]},{"name":"WEBTAU_TERMUI","type":[],"anchorId":"WEBTAU_TERMUI","description":[{"type":"Paragraph","content":[{"text":"enable terminal UI to monitor tests (experimental)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}]},{"name":"WEBTAU_URL","type":[],"anchorId":"WEBTAU_URL","description":[{"type":"Paragraph","content":[{"text":"base url for application under test","type":"SimpleText"}]}]},{"name":"WEBTAU_USER_AGENT","type":[],"anchorId":"WEBTAU_USER_AGENT","description":[{"type":"Paragraph","content":[{"text":"User agent to send on HTTP requests","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau/2.0","type":"SimpleText"}]}]},{"name":"WEBTAU_VERBOSITY_LEVEL","type":[],"anchorId":"WEBTAU_VERBOSITY_LEVEL","description":[{"type":"Paragraph","content":[{"text":"output verbosity level. 0 - no output; 1 - test names; 2 - first level steps; etc","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 2147483647","type":"SimpleText"}]}]},{"name":"WEBTAU_WAIT_TICK","type":[],"anchorId":"WEBTAU_WAIT_TICK","description":[{"type":"Paragraph","content":[{"text":"wait tick in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 100","type":"SimpleText"}]}]},{"name":"WEBTAU_WAIT_TIMEOUT","type":[],"anchorId":"WEBTAU_WAIT_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"wait timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5000","type":"SimpleText"}]}]},{"name":"WEBTAU_WEB_SOCKET_MAX_MESSAGES","type":[],"anchorId":"WEBTAU_WEB_SOCKET_MAX_MESSAGES","description":[{"type":"Paragraph","content":[{"text":"max number of received messages to keep for polling/waiting","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 1000","type":"SimpleText"}]}]},{"name":"WEBTAU_WEB_SOCKET_POLL_TIMEOUT","type":[],"anchorId":"WEBTAU_WEB_SOCKET_POLL_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"poll new message timeout","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5000","type":"SimpleText"}]}]},{"name":"WEBTAU_WORKING_DIR","type":[],"anchorId":"WEBTAU_WORKING_DIR","description":[{"type":"Paragraph","content":[{"text":"logical working dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ","type":"SimpleText"}]}]}],"noWrap":true,"type":"ApiParameters"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Configuration","pageTitle":"Options","pageMeta":{},"dirName":"configuration","fileName":"options","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"CLI and configuration file options","id":"cli-and-configuration-file-options"},{"title":"Environment variable options","id":"environment-variable-options"}]}},{"type":"Page","content":[{"id":"integration-benefits","title":"Integration Benefits","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau can be used as is, without any special integration with ","type":"SimpleText"},{"url":"https://junit.org/junit5/","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"However, integration provides:","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/junit5/reporting","isFile":false,"type":"Link","content":[{"text":"Rich Reporting","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Additional ","type":"SimpleText"},{"url":"/webtau/junit5/dynamic-tests","isFile":false,"type":"Link","content":[{"text":"Dynamic Tests Capabilities","type":"SimpleText"}]}]}]}]}]},{"id":"maven-import","title":"Maven Import","type":"Section","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit5</artifactId>\n    <version>2.0</version>\n</dependency>","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"JUnit 5","pageTitle":"Getting Started","pageMeta":{},"dirName":"junit5","fileName":"getting-started","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Integration Benefits","id":"integration-benefits"},{"title":"Maven Import","id":"maven-import"}]}},{"type":"Page","content":[{"id":"webtau-report","title":"WebTau Report","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use WebTau ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"graphql.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" modules without any additional setup, but to include a test into generated report and to get extra console output you need to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"@WebTau","type":"InlinedCode"},{"text":" annotation or enable global extension (see below)","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package com.example.tests.junit5\n\nimport org.testingisdocumenting.webtau.junit5.WebTau\nimport org.junit.jupiter.api.*\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau // annotation to enable rich console output and html reporting\n@TestMethodOrder(MethodOrderer.OrderAnnotation) // forcing methods execution order\n@DisplayName(\"customer CRUD\")\nclass CustomerCrudSeparatedGroovyTest {\n    private static def customerPayload = [firstName: 'FN',\n                                          lastName : 'LN']\n    private static def changedCustomerPayload = [*: customerPayload, lastName: 'NLN']\n\n    private static def id\n\n    @BeforeAll\n    @DisplayName(\"create customer\") // optional friendly name for reporting purposes\n    static void createCustomer() {\n        id = http.post(\"/customers\", customerPayload) {\n            body.id // using body prefix is required in this case as id conflicts with class field name\n        }\n\n        id.shouldNot == 0\n    }\n\n    @Test\n    @Order(1)\n    @DisplayName(\"read customer\")\n    void read() {\n        http.get(\"/customers/$id\") {\n            body.should == customerPayload\n        }\n    }\n\n    @Test\n    @Order(2) // order dependence saves from creating customer on every test\n    @DisplayName(\"update customer\")\n    void update() {\n        http.put(\"/customers/$id\", changedCustomerPayload) {\n            body.should == changedCustomerPayload\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should == changedCustomerPayload\n        }\n    }\n\n    @Test\n    @Order(3) // but you can still run each method independently\n    @DisplayName(\"delete customer\")\n    void delete() {\n        http.delete(\"/customers/$id\") {\n            header.statusCode.should == 204\n        }\n\n        http.get(\"/customers/$id\") {\n            header.statusCode.should == 404\n        }\n\n        id = -1 // marking as deleted to let cleanup step know that no delete is required\n    }\n\n    @AfterAll\n    static void cleanup() { // optional (since we create new ids all the time) step to keep your environment clean\n        if (id == -1) {\n            return\n        }\n\n        http.delete(\"/customers/$id\")\n    }\n}","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.testingisdocumenting.webtau.http.request.HttpRequestBody;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport org.junit.jupiter.api.*;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau // annotation to enable rich console output and html reporting\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class) // forcing methods execution order\n@DisplayName(\"customer CRUD\")\npublic class CustomerCrudSeparatedJavaTest {\n    private static final HttpRequestBody customerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"LN\");\n\n    private static final HttpRequestBody changedCustomerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"NLN\");\n\n    private static int id;\n\n    @BeforeAll\n    @DisplayName(\"create customer\") // optional friendly name for reporting purposes\n    public static void createCustomer() {\n        id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n\n        actual(id).shouldNot(equal(0));\n    }\n\n    @Test\n    @Order(1)\n    @DisplayName(\"read customer\")\n    public void read() {\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n    }\n\n    @Test\n    @Order(2) // order dependence saves from creating customer on every test\n    @DisplayName(\"update customer\")\n    public void update() {\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n    }\n\n    @Test\n    @Order(3) // but you can still run each method independently\n    @DisplayName(\"delete customer\")\n    public void delete() {\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(404));\n        }));\n\n        id = -1; // marking as deleted to let cleanup step know that no delete is required\n    }\n\n    @AfterAll\n    public static void cleanup() { // optional (since we create new ids all the time) step to keep your environment clean\n        if (id == -1) {\n            return;\n        }\n\n        http.delete(\"/customers/\" + id);\n    }\n}","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"extra-console-output","title":"Extra Console Output","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau produces extra console output when you enable reporting either via annotation or globally (see below).","type":"SimpleText"}]},{"title":"console output","readMore":true,"readMoreVisibleLines":20,"lines":["\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m create customers \u001B[35m(customer query)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mPOST \u001B[35mhttp://localhost:38809/customers\u001B[0m","  \u001B[33mrequest\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"CQ_FN1\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"CQ_LN1\"\u001B[0m","  \u001B[33m}\u001B[0m","  \u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m201\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[34m7\u001B[33m,\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"CQ_FN1\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"CQ_LN1\"\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mPOST \u001B[35mhttp://localhost:38809/customers\u001B[33m (\u001B[32m35ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mPOST \u001B[35mhttp://localhost:38809/customers\u001B[0m","  \u001B[33mrequest\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"CQ_FN1\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"CQ_LN2\"\u001B[0m","  \u001B[33m}\u001B[0m","  \u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m201\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[34m8\u001B[33m,\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"CQ_FN1\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"CQ_LN2\"\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mPOST \u001B[35mhttp://localhost:38809/customers\u001B[33m (\u001B[32m30ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mPOST \u001B[35mhttp://localhost:38809/customers\u001B[0m","  \u001B[33mrequest\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"CQ_FN2\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"CQ_LN2\"\u001B[0m","  \u001B[33m}\u001B[0m","  \u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m201\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"id\"\u001B[33m: \u001B[34m9\u001B[33m,\u001B[0m","    \u001B[35m\"firstName\"\u001B[33m: \u001B[32m\"CQ_FN2\"\u001B[33m,\u001B[0m","    \u001B[35m\"lastName\"\u001B[33m: \u001B[32m\"CQ_LN2\"\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mPOST \u001B[35mhttp://localhost:38809/customers\u001B[33m (\u001B[32m24ms\u001B[33m)\u001B[0m","\u001B[32m[.] \u001B[34mcreate customers \u001B[35m(customer query)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m query by last name \u001B[35m(customer query)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:38809/customers/search/last-name?name=CQ_LN2\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody \u001B[0m\u001B[0m\u001B[34mequals \u001B[33m*\u001B[35mid\u001B[33m │ \u001B[35mfirstName\u001B[33m │ \u001B[35mlastName","                  \u001B[34m8\u001B[33m │ \u001B[32m\"CQ_FN1\" \u001B[33m │ \u001B[32m\"CQ_LN2\"","                  \u001B[34m9\u001B[33m │ \u001B[32m\"CQ_FN2\" \u001B[33m │ \u001B[32m\"CQ_LN2\"\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m[\u001B[0m","    \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[1m\u001B[32m__8__\u001B[33m, \u001B[35m\"firstName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_FN1\"__\u001B[33m, \u001B[35m\"lastName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_LN2\"__\u001B[33m}\u001B[33m,\u001B[0m","    \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[1m\u001B[32m__9__\u001B[33m, \u001B[35m\"firstName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_FN2\"__\u001B[33m, \u001B[35m\"lastName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_LN2\"__\u001B[33m}\u001B[0m","  \u001B[33m]\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:38809/customers/search/last-name?name=CQ_LN2\u001B[33m (\u001B[32m14ms\u001B[33m)\u001B[0m","\u001B[32m[.] \u001B[34mquery by last name \u001B[35m(customer query)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m query by first name \u001B[35m(customer query)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mGET \u001B[35mhttp://localhost:38809/customers/search/first-name?name=CQ_FN1\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mbody \u001B[0m\u001B[0m\u001B[34mequals \u001B[33m*\u001B[35mid\u001B[33m │ \u001B[35mfirstName\u001B[33m │ \u001B[35mlastName","                  \u001B[34m7\u001B[33m │ \u001B[32m\"CQ_FN1\" \u001B[33m │ \u001B[32m\"CQ_LN1\"","                  \u001B[34m8\u001B[33m │ \u001B[32m\"CQ_FN1\" \u001B[33m │ \u001B[32m\"CQ_LN2\"\u001B[33m (\u001B[32m2ms\u001B[33m)\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m200\u001B[33m (\u001B[32m1ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33mresponse\u001B[36m (application/json):\u001B[0m","  \u001B[33m[\u001B[0m","    \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[1m\u001B[32m__7__\u001B[33m, \u001B[35m\"firstName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_FN1\"__\u001B[33m, \u001B[35m\"lastName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_LN1\"__\u001B[33m}\u001B[33m,\u001B[0m","    \u001B[33m{\u001B[35m\"id\"\u001B[33m: \u001B[1m\u001B[32m__8__\u001B[33m, \u001B[35m\"firstName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_FN1\"__\u001B[33m, \u001B[35m\"lastName\"\u001B[33m: \u001B[1m\u001B[32m__\"CQ_LN2\"__\u001B[33m}\u001B[0m","  \u001B[33m]\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mGET \u001B[35mhttp://localhost:38809/customers/search/first-name?name=CQ_FN1\u001B[33m (\u001B[32m40ms\u001B[33m)\u001B[0m","\u001B[32m[.] \u001B[34mquery by first name \u001B[35m(customer query)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean up \u001B[35m(customer query)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mDELETE \u001B[35mhttp://localhost:38809/customers/7\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m204\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m[no content]\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mDELETE \u001B[35mhttp://localhost:38809/customers/7\u001B[33m (\u001B[32m30ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mDELETE \u001B[35mhttp://localhost:38809/customers/8\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m204\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m[no content]\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mDELETE \u001B[35mhttp://localhost:38809/customers/8\u001B[33m (\u001B[32m15ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mexecuting HTTP \u001B[36mDELETE \u001B[35mhttp://localhost:38809/customers/9\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[0m\u001B[0m\u001B[34mequals \u001B[34m204\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[0m","  \u001B[33m[no content]\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP \u001B[36mDELETE \u001B[35mhttp://localhost:38809/customers/9\u001B[33m (\u001B[32m8ms\u001B[33m)\u001B[0m","\u001B[32m[.] \u001B[34mclean up \u001B[35m(customer query)\u001B[0m","\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m after all tests \u001B[35m(Teardown)\u001B[0m","\u001B[32m[.] \u001B[34mafter all tests \u001B[35m(Teardown)\u001B[0m","\u001B[0m","\u001B[0m","\u001B[34mTotal time: \u001B[35m206ms\u001B[0m","Total: 5, \u001B[32m Passed: 5, \u001B[33m Skipped: 0, \u001B[31m Failed: 0,  Errored: 0\u001B[0m","\u001B[34mreport is generated: \u001B[35m/home/runner/work/webtau/webtau/webtau-junit5-examples/webtau-reports/com.example.tests.junit5.CustomerQueryJavaTest.html\u001B[0m"],"anchorId":"extra-console-output-console-output","type":"CliOutput"}]},{"id":"automatic-extension","title":"Automatic Extension","type":"Section","content":[{"type":"Paragraph","content":[{"text":"To enable report for all the tests without annotating each of them, use JUnit5 ","type":"SimpleText"},{"url":"https://junit.org/junit5/docs/current/user-guide/#extensions-registration-automatic","isFile":false,"type":"Link","content":[{"text":"automatic extension registration","type":"SimpleText"}]}]},{"lang":"Extension","snippet":"org.testingisdocumenting.webtau.junit5.WebTauJunitExtension","autoTitle":true,"title":"src/test/resources/META-INF/services/org.junit.jupiter.api.extension.Extension","anchorId":"automatic-extension-src-test-resources-meta-inf-services-org-junit-jupiter-api-extension-extension","type":"Snippet"},{"lang":"properties","snippet":"junit.jupiter.extensions.autodetection.enabled=true","autoTitle":true,"title":"src/test/resources/junit-platform.properties","anchorId":"automatic-extension-src-test-resources-junit-platform-properties","type":"Snippet"}]},{"id":"beforeall-afterall-reporting","title":"BeforeAll/AfterAll Reporting","type":"Section","content":[{"type":"Paragraph","content":[{"code":"@BeforeAll","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"@AfterAll","type":"InlinedCode"},{"text":" are separate entries in the generated report","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package com.example.tests.junit5\n\nimport org.testingisdocumenting.webtau.junit5.WebTau\nimport org.junit.jupiter.api.AfterAll\nimport org.junit.jupiter.api.BeforeAll\nimport org.junit.jupiter.api.DisplayName\nimport org.junit.jupiter.api.Test\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau\n@DisplayName(\"customer query\")\nclass CustomerQueryGroovyTest {\n    private static def id1 // keep track of created ids to assert and cleanup later\n    private static def id2\n    private static def id3\n\n    @BeforeAll\n    @DisplayName(\"create customers\")\n    static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\")\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\")\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\")\n    }\n\n    @Test\n    @DisplayName(\"query by first name\")\n    void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", [name: \"CQ_FN1\"]) {\n            body.should == [\"*id\" | \"firstName\" | \"lastName\"] { // star(*) marks key column so assertion is order agnostic\n                           __________________________________\n                             id1  | \"CQ_FN1\"    | \"CQ_LN1\"\n                             id2  | \"CQ_FN1\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @Test\n    @DisplayName(\"query by last name\")\n    void queryByLastName() {\n        http.get(\"/customers/search/last-name\", [name: \"CQ_LN2\"]) {\n            body.should == [\"*id\" | \"firstName\" | \"lastName\"] {\n                           __________________________________\n                             id2  | \"CQ_FN1\"    | \"CQ_LN2\"\n                             id3  | \"CQ_FN2\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @AfterAll\n    @DisplayName(\"clean up\")\n    static void cleanup() {\n        [id1, id2, id3].each { http.delete(\"/customers/$it\") }\n    }\n\n    private static def createCustomer(String firstName, String lastName) {\n        return http.post(\"/customers\", [firstName: firstName, lastName: lastName]) { id }\n    }\n}","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.AfterAll;\nimport org.junit.jupiter.api.BeforeAll;\nimport org.junit.jupiter.api.DisplayName;\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport java.util.Map;\nimport java.util.stream.Stream;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\n@DisplayName(\"customer query\")\nclass CustomerQueryJavaTest {\n    private static Integer id1; // keep track of created ids to assert and cleanup later\n    private static Integer id2;\n    private static Integer id3;\n\n    @BeforeAll\n    @DisplayName(\"create customers\")\n    static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\");\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\");\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\");\n    }\n\n    @Test\n    @DisplayName(\"query by first name\")\n    void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", http.query(\"name\", \"CQ_FN1\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\", // star(*) marks key column so assertion is order agnostic\n                                   ________________________________,\n                                      id1, \"CQ_FN1\"   , \"CQ_LN1\",\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @Test\n    @DisplayName(\"query by last name\")\n    void queryByLastName() {\n        http.get(\"/customers/search/last-name\", http.query(\"name\", \"CQ_LN2\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\",\n                                    ________________________________,\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\",\n                                      id3, \"CQ_FN2\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @AfterAll\n    @DisplayName(\"clean up\")\n    static void cleanup() {\n        Stream.of(id1, id2, id3).forEach(id -> http.delete(\"/customers/\" + id));\n    }\n\n    private static int createCustomer(String firstName, String lastName) {\n        Map<String, Object> payload = map(\n                \"firstName\", firstName,\n                \"lastName\", lastName);\n\n        return http.post(\"/customers\", payload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n    }\n}","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"},{"title":"web report","fit":true,"border":true,"imageSrc":"/webtau/doc-artifacts/reports/junit5-report-afterall.png","timestamp":1692272672938,"shapes":[],"width":1310.0,"height":798.0,"anchorId":"beforeall-afterall-reporting-web-report","type":"AnnotatedImage"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"JUnit 5","pageTitle":"Reporting","pageMeta":{},"dirName":"junit5","fileName":"reporting","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"WebTau Report","id":"webtau-report"},{"title":"Extra Console Output","id":"extra-console-output"},{"title":"Automatic Extension","id":"automatic-extension"},{"title":"BeforeAll/AfterAll Reporting","id":"beforeall-afterall-reporting"}]}},{"type":"Page","content":[{"id":"testfactory","title":"TestFactory","type":"Section","content":[{"type":"Paragraph","content":[{"text":"With the additional annotation ","type":"SimpleText"},{"code":"@TestFactory","type":"InlinedCode"},{"text":" you can use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" as an easy-to-read source of","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"similar but independent tests where each row is treated as its own test, optionally with a descriptive label.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here are some examples of parameterized tests with and without labels:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"@TestFactory\ndef \"individual tests use generated display labels\"() {\n    [\"price\" | \"quantity\" | \"outcome\"] {\n    _________________________________\n        10.0 |  30        |  300.0\n       -10.0 |  30        | -300.0\n    }.test {\n        PriceCalculator.calculate(price, quantity).should == outcome\n    }\n}","title":"parameterized tests without explicit label","entry":"individual tests use generated display labels","type":"Snippet"},{"lang":"groovy","snippet":"@TestFactory\ndef \"individual tests label to clarify the use case\"() {\n    [\"label\"           | \"price\" | \"quantity\" | \"outcome\"] {\n    _____________________________________________________\n      \"positive price\" |  10.0   |  30        |  300.0\n      \"negative price\" | -10.0   |  30        | -300.0\n    }.test {\n        PriceCalculator.calculate(price, quantity).should == outcome\n    }\n}","title":"parameterized tests with explicit label","entry":"individual tests label to clarify the use case","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"@TestFactory\npublic Stream<DynamicTest> individualTestsUseGeneratedDisplayLabels() {\n    TableData useCases = table(\"price\", \"quantity\", \"outcome\",\n                               ______________________________,\n                                 10.0 ,         30,     300.0,\n                                -10.0 ,         30,    -300.0);\n\n    return DynamicTests.fromTable(useCases, r -> {\n        double price = r.get(\"price\");\n        int quantity = r.get(\"quantity\");\n        double outcome = r.get(\"outcome\");\n\n        actual(PriceCalculator.calculate(price, quantity)).should(equal(outcome));\n    });\n}","title":"parameterized tests without explicit label","entry":"individualTestsUseGeneratedDisplayLabels","anchorId":"testfactory-parameterized-tests-without-explicit-label","type":"Snippet"},{"lang":"java","snippet":"@TestFactory\npublic Stream<DynamicTest> individualTestsLabelToClarifyUseCase() {\n    TableData useCases = table(\"label\"         , \"price\", \"quantity\", \"outcome\",\n                              _________________________________________________,\n                               \"positive price\",   10.0 ,         30,     300.0,\n                               \"negative price\",  -10.0 ,         30,    -300.0);\n\n    return DynamicTests.fromTable(useCases, r -> {\n        double price = r.get(\"price\");\n        int quantity = r.get(\"quantity\");\n        double outcome = r.get(\"outcome\");\n\n        actual(PriceCalculator.calculate(price, quantity)).should(equal(outcome));\n    });\n}","title":"parameterized tests with explicit label","entry":"individualTestsLabelToClarifyUseCase","anchorId":"testfactory-parameterized-tests-with-explicit-label","type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"JUnit 5","pageTitle":"Dynamic Tests","pageMeta":{},"dirName":"junit5","fileName":"dynamic-tests","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"TestFactory","id":"testfactory"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"Note: Limited features development for JUnit4 runner. Please consider migration to ","type":"SimpleText"},{"url":"/webtau/junit5/getting-started","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]}]},{"id":"webtau-runner","title":"WebTau Runner","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You can use WebTau ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"graphql.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" methods as in a junit 4 tests, but to enable reporting you need to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"@RunWith(WebTauRunner.class)","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.* // convenient single import for DSL methods and props like http\n\n@RunWith(WebTauRunner)  // runner is required to have this test to be a part of generated html report\nclass CustomerCrudSingleGroovyTest {\n    private def customerPayload = [firstName: 'FN',\n                                   lastName: 'LN']\n    private def changedCustomerPayload = [*:customerPayload, lastName: 'NLN']\n\n    @Test\n    void crud() {\n        def id = http.post(\"/customers\", customerPayload) {\n            return id\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should == customerPayload\n        }\n\n        http.put(\"/customers/$id\", changedCustomerPayload) {\n            body.should == changedCustomerPayload\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should == changedCustomerPayload\n        }\n\n        http.delete(\"/customers/$id\") {\n            statusCode.should == 204\n        }\n\n        http.get(\"/customers/$id\") {\n            statusCode.should == 404\n        }\n    }\n}","title":"CRUD test in a single method","commentsType":"inline","anchorId":"webtau-runner-crud-test-in-a-single-method","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport org.testingisdocumenting.webtau.http.request.HttpRequestBody;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*; // convenient single import for DSL methods and props like http and equal, mapOf, etc\n\n@RunWith(WebTauRunner.class) // runner is required to have this test to be a part of generated html report\npublic class CustomerCrudSingleJavaTest {\n    private final HttpRequestBody customerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"LN\");\n\n    private final HttpRequestBody changedCustomerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"NLN\");\n\n    @Test\n    public void crud() {\n        int id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode.should(equal(404));\n        }));\n    }\n}","title":"CRUD test in a single method","commentsType":"inline","anchorId":"webtau-runner-crud-test-in-a-single-method-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"before-after","title":"Before/After","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"@Before","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"@After","type":"InlinedCode"},{"text":" standard ","type":"SimpleText"},{"code":"JUnit 4","type":"InlinedCode"},{"text":" annotations to implement init and cleanup logic for each test.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport org.junit.After\nimport org.junit.Before\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@RunWith(WebTauRunner.class)\nclass CustomerCrudBeforeAfterGroovyTest {\n    private def customerPayload = [firstName: 'FN',\n                                   lastName: 'LN']\n    private def changedCustomerPayload = [*:customerPayload, lastName: 'NLN']\n\n    private int customerId\n\n    @Before\n    void \"create customer\"() {\n        customerId = http.post(\"/customers\", customerPayload) {\n            return id // We deliberately named field as \"customerId\" to avoid conflict with response field. Alternatively you can use body.id to avoid the conflict\n        }\n    }\n\n    @Test\n    void \"query customer\"() {\n        http.get(\"/customers/$customerId\") {\n            body.should == customerPayload\n        }\n    }\n\n    @Test\n    void \"update customer\"() {\n        http.put(\"/customers/$customerId\", changedCustomerPayload) {\n            body.should == changedCustomerPayload\n        }\n\n        http.get(\"/customers/$customerId\") {\n            body.should == changedCustomerPayload\n        }\n    }\n\n    @After\n    void \"delete customer\"() {\n        http.delete(\"/customers/$customerId\") {\n            statusCode.should == 204\n        }\n\n        http.get(\"/customers/$customerId\") {\n            statusCode.should == 404\n        }\n    }\n}","title":"CRUD test with @Before and @After annotations","commentsType":"inline","anchorId":"before-after-crud-test-with-before-and-after-annotations","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.http.request.HttpRequestBody;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class CustomerCrudBeforeAfterJavaTest {\n    private final HttpRequestBody customerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"LN\");\n\n    private final HttpRequestBody changedCustomerPayload = http.json(\n            \"firstName\", \"FN\",\n            \"lastName\", \"NLN\");\n\n    private int customerId;\n\n    @Before\n    public void createCustomer() {\n        customerId = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n    }\n\n    @Test\n    public void queryCustomer() {\n        http.get(\"/customers/\" + customerId, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n    }\n\n    @Test\n    public void updateCustomer() {\n        http.put(\"/customers/\" + customerId, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + customerId, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n    }\n\n    @After\n    public void deleteCustomer() {\n        http.delete(\"/customers/\" + customerId, (header, body) -> {\n            header.statusCode.should(equal(204));\n        });\n\n        http.get(\"/customers/\" + customerId, ((header, body) -> {\n            header.statusCode.should(equal(404));\n        }));\n    }\n}","title":"CRUD test with @Before and @After annotations","commentsType":"inline","anchorId":"before-after-crud-test-with-before-and-after-annotations-2","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"beforeclass-afterclass","title":"BeforeClass/AfterClass","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"@BeforeClass","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"@AfterClass","type":"InlinedCode"},{"text":" to prepare and cleanup resources required for multiple test methods.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"package com.example.tests.junit4\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport org.junit.AfterClass\nimport org.junit.BeforeClass\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@RunWith(WebTauRunner.class)\nclass CustomerQueryGroovyTest {\n    private static def id1 // keep track of created ids to assert and cleanup later\n    private static def id2\n    private static def id3\n\n    @BeforeClass\n    static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\")\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\")\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\")\n    }\n\n    @Test\n    void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", [name: \"CQ_FN1\"]) {\n            body.should == [\"*id\" | \"firstName\" | \"lastName\"] { // star(*) marks key column so assertion is order agnostic\n                            __________________________________\n                             id1  | \"CQ_FN1\"    | \"CQ_LN1\"\n                             id2  | \"CQ_FN1\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @Test\n    void queryByLastName() {\n        http.get(\"/customers/search/last-name\", [name: \"CQ_LN2\"]) {\n           body.should == [\"*id\" | \"firstName\" | \"lastName\"] {\n                          __________________________________\n                            id2  | \"CQ_FN1\"    | \"CQ_LN2\"\n                            id3  | \"CQ_FN2\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @AfterClass\n    static void cleanup() {\n        [id1, id2, id3].each { http.delete(\"/customers/$it\") }\n    }\n\n    private static def createCustomer(String firstName, String lastName) {\n        return http.post(\"/customers\", [firstName: firstName, lastName: lastName]) { id }\n    }\n}","commentsType":"inline","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"package com.example.tests.junit4;\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport java.util.Map;\nimport java.util.stream.Stream;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class CustomerQueryJavaTest {\n    private static Integer id1; // keep track of created ids to assert and cleanup later\n    private static Integer id2;\n    private static Integer id3;\n\n    @BeforeClass\n    public static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\");\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\");\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\");\n    }\n\n    @Test\n    public void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", http.query(\"name\", \"CQ_FN1\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\", // star(*) marks key column so assertion is order agnostic\n                                   ________________________________,\n                                      id1, \"CQ_FN1\"   , \"CQ_LN1\",\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @Test\n    public void queryByLastName() {\n        http.get(\"/customers/search/last-name\", http.query(\"name\", \"CQ_LN2\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\",\n                                    ________________________________,\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\",\n                                      id3, \"CQ_FN2\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @AfterClass\n    public static void cleanup() {\n        Stream.of(id1, id2, id3).forEach(id -> http.delete(\"/customers/\" + id));\n    }\n\n    private static int createCustomer(String firstName, String lastName) {\n        Map<String, Object> payload = map(\n                \"firstName\", firstName,\n                \"lastName\", lastName);\n\n        return http.post(\"/customers\", payload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n    }\n}","commentsType":"inline","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"maven-import","title":"Maven Import","type":"Section","content":[{"lang":"xml","snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit4</artifactId>\n    <version>2.0</version>\n</dependency>","type":"Snippet"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"JUnit 5","pageTitle":"JUnit 4","pageMeta":{},"dirName":"junit5","fileName":"JUnit-4","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"WebTau Runner","id":"webtau-runner"},{"title":"Before/After","id":"before-after"},{"title":"BeforeClass/AfterClass","id":"beforeclass-afterclass"},{"title":"Maven Import","id":"maven-import"}]}},{"type":"Page","content":[{"id":"data-focused-tests","title":"Data Focused Tests","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau simplifies writing REST/GraphQL/Browser/DB/CLI tests. On top of that if the logic behind those layers is written in JVM based language,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"WebTau also simplifies testing logic behind those layers directly.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau makes tests to be focused on input and output by reducing boilerplate.","type":"SimpleText"}]}]},{"id":"simplified-input-preparation","title":"Simplified Input Preparation","type":"Section","content":[{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"@Test\nvoid \"diversified teams should have various levels and time at company\"() {\n    def employeeData = [ \"id\"    | \"level\" | \"monthsAtCompany\"] {\n                       _______________________________________\n                         \"bob\"   |       2 |  12\n                         \"smith\" |       4 |  34\n                         \"john\"  |       3 |  20 }\n\n    def diversified = peopleManagement.diversityLevel(employees(employeeData))\n    diversified.should == true\n}","entry":"diversified teams should have various levels and time at company","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"@Test\npublic void diversifiedTeamsShouldHaveVariousLevelsAndTimeAtCompany() {\n    TableData employeeData = table(     \"id\", \"level\", \"monthsAtCompany\").values(\n                                       \"bob\",       2, 12,\n                                     \"smith\",       4, 34,\n                                      \"john\",       3, 20);\n\n    boolean diversified = peopleManagement.diversityLevel(employees(employeeData));\n    actual(diversified).should(equal(true));\n}","entry":"diversifiedTeamsShouldHaveVariousLevelsAndTimeAtCompany","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"simplified-output-validation","title":"Simplified Output Validation","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Complex data and assertions are first class citizens.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"@Test\nvoid \"provides access to new joiners\"() {\n    TableData allEmployees = [\"id\"    | \"level\" | \"monthsAtCompany\"] {\n                              ______________________________________\n                              \"alice\" |       5 |  1\n                              \"bob\"   |       3 |  0\n                              \"smith\" |       4 |  1\n                              \"cat\"   |       4 |  0 }\n\n    addEmployees(allEmployees)\n\n    dao.thisWeekJoiners().should == [\"id\"    | \"level\" | \"monthsAtCompany\"] {\n                                     ______________________________________\n                                     \"bob\"   | 3       | 0\n                                     \"cat\"   | 4       | 0  }\n}","entry":"provides access to new joiners","type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"@Test\npublic void providesAccessToNewJoiners() {\n    TableData allEmployees = table(    \"id\", \"level\", \"monthsAtCompany\",\n                                    ____________________________________,\n                                    \"alice\",       5,   1,\n                                      \"bob\",       3,   0,\n                                    \"smith\",       4,   1,\n                                      \"cat\",       4,   0);\n    addEmployees(allEmployees);\n\n    actual(dao.thisWeekJoiners()).should(equal(table(   \"*id\", \"level\", \"monthsAtCompany\",\n                                                        ____________________________________,\n                                                        \"bob\",       3,   0,\n                                                        \"cat\",       4,   0)));\n}","entry":"providesAccessToNewJoiners","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: The examples above assumes ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauCore.*","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauDsl.*","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"For more ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" features, check ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"reference page","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"JVM Business Logic","pageTitle":"Data Driven","pageMeta":{},"dirName":"JVM-business-logic","fileName":"data-driven","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Data Focused Tests","id":"data-focused-tests"},{"title":"Simplified Input Preparation","id":"simplified-input-preparation"},{"title":"Simplified Output Validation","id":"simplified-output-validation"}]}},{"type":"Page","content":[{"id":"living-document","title":"Living Document","type":"Section","content":[{"type":"Paragraph","content":[{"text":"In your test you can capture input and output and save it to a file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"By using documentation systems you can use the captured artifacts to render business friendly documentation.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"As system evolves, so do your tests and so does your documentation. Essentially you will have a living document describing aspects of your system.","type":"SimpleText"}]}]},{"id":"capture-input","title":"Capture Input","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"doc.capture","type":"InlinedCode"},{"text":" to save a test captured value to a file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Example below assumes ","type":"SimpleText"},{"code":"core","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"}]},{"lang":"java","snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","includeRegexp":"import.*Core","type":"Snippet"},{"lang":"java","snippet":"TableData allEmployees = table(    \"id\", \"level\", \"monthsAtCompany\",\n                               ____________________________________,\n                                \"alice\",       5,   1,\n                                  \"bob\",       3,   0,\n                                \"smith\",       4,   1,\n                                  \"cat\",       4,   0);\naddEmployees(allEmployees);\n\ndoc.capture(\"all-employees\", allEmployees); // capture all employees for documentation purposes","title":"capturing a value","entry":"initEmployees","commentsType":"inline","bodyOnly":true,"anchorId":"capture-input-capturing-a-value","type":"Snippet"}]},{"id":"capture-expected-output","title":"Capture Expected Output","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"doc.expected.capture","type":"InlinedCode"},{"text":" to save most recent expected value.","type":"SimpleText"}]},{"lang":"java","snippet":"actual(dao.thisWeekJoiners()).should(equal(table(   \"*id\", \"level\", \"monthsAtCompany\",\n                                                ____________________________________,\n                                                    \"bob\",       3,   0,\n                                                    \"cat\",       4,   0)));\n\ndoc.expected.capture(\"new-joiners\"); // capture expected new joiners for documentation purposes","title":"capturing most recent expected","entry":"validateNewJoiners","commentsType":"inline","bodyOnly":true,"anchorId":"capture-expected-output-capturing-most-recent-expected","type":"Snippet"},{"type":"Paragraph","content":[{"text":"WebTau documentation is created using ","type":"SimpleText"},{"url":"https://github.org/testingisdocumenting/znai","isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It has ","type":"SimpleText"},{"code":"include-table","type":"InlinedCode"},{"text":" plugin to render a table giving a json or CSV file.","type":"SimpleText"}]},{"lang":"text","snippet":":include-table: doc-artifacts/all-employees.json\n:include-table: doc-artifacts/new-joiners.json\n","lineNumber":"","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Below is the example of the business logic rendered as documentation.","type":"SimpleText"}]},{"type":"ThematicBreak"},{"type":"Paragraph","content":[{"text":"Our HR system consider all employees that has been in the company less than a month as new joiners.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"For example, giving employees:","type":"SimpleText"}]},{"table":{"columns":[{"title":"id"},{"title":"level"},{"title":"monthsAtCompany"}],"data":[[[{"type":"Paragraph","content":[{"text":"alice","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"5","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"smith","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"cat","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]]]},"type":"Table"},{"type":"Paragraph","content":[{"text":"System will list following employees as new joiners:","type":"SimpleText"}]},{"table":{"columns":[{"title":"id"},{"title":"level"},{"title":"monthsAtCompany"}],"data":[[[{"type":"Paragraph","content":[{"text":"bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"cat","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]]]},"type":"Table"}]},{"id":"capture-console-output","title":"Capture Console Output","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"doc.console.capture","type":"InlinedCode"},{"text":" to capture console output of a provided code block","type":"SimpleText"}]},{"lang":"java","snippet":"doc.console.capture(\"http-get-console-output\", () -> {\n    http.get(\"/end-point\", ((header, body) -> {\n        DataNode price = body.get(\"price\");\n        price.should(equal(100));\n    }));\n});","title":"capture console output","entry":"captureConsoleOutputExample","bodyOnly":true,"anchorId":"capture-console-output-capture-console-output","type":"Snippet"},{"lang":"txt","snippet":"","title":"raw content of doc-artifacts/http-get-console-output.txt","anchorId":"capture-console-output-raw-content-of-doc-artifacts-http-get-console-output-txt","type":"Snippet"},{"type":"Paragraph","content":[{"url":"https://github.org/testingisdocumenting/znai","isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}]},{"text":" has ","type":"SimpleText"},{"code":"cli-output","type":"InlinedCode"},{"text":" plugin to render ANSI output","type":"SimpleText"}]},{"lang":"","snippet":":include-cli-output: doc-artifacts/http-get-console-output.txt\n","lineNumber":"","type":"Snippet"},{"lines":[""],"type":"CliOutput"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"JVM Business Logic","pageTitle":"Documentation Artifacts","pageMeta":{},"dirName":"JVM-business-logic","fileName":"documentation-artifacts","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Living Document","id":"living-document"},{"title":"Capture Input","id":"capture-input"},{"title":"Capture Expected Output","id":"capture-expected-output"},{"title":"Capture Console Output","id":"capture-console-output"}]}},{"type":"Page","content":[{"id":"uploading-reports","title":"Uploading Reports","type":"Section","content":[{"type":"Paragraph","content":[{"text":"WebTau generates ","type":"SimpleText"},{"url":"/webtau/report/introduction","isFile":false,"type":"Link","content":[{"text":"HTML Reports","type":"SimpleText"}]},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To make reports accessible after your build run, use this step:","type":"SimpleText"}]},{"lang":"yaml","snippet":"- name: Upload all reports\n  uses: actions/upload-artifact@v2\n  if: failure()\n  with:\n    name: all-webtau-reports\n    path: \"*/**/webtau.report.html\"\n    retention-days: 1","title":"step to upload all reports","startLine":"Upload all reports","endLine":"retention-days","replace":["\\*webtau-","webtau."],"anchorId":"uploading-reports-step-to-upload-all-reports","type":"Snippet"},{"type":"Paragraph","content":[{"text":"To only upload failed reports, configure ","type":"SimpleText"},{"url":"/webtau/report/configuration#failed-report-path","isFile":false,"type":"Link","content":[{"text":"failed report name","type":"SimpleText"}]},{"text":" and update the step:","type":"SimpleText"}]},{"lang":"yaml","snippet":"- name: Upload failed test reports\n  uses: actions/upload-artifact@v2\n  if: failure()\n  with:\n    name: failed-webtau-reports\n    path: \"*/**/*-failed*.html\"\n    retention-days: 2","title":"step to upload only failed test reports","startLine":"Upload failed test reports","endLine":"retention-days","anchorId":"uploading-reports-step-to-upload-only-failed-test-reports","type":"Snippet"}]}],"lastModifiedTime":1692271721150,"tocItem":{"chapterTitle":"Continuous Integration","pageTitle":"GitHub","pageMeta":{},"dirName":"continuous-integration","fileName":"GitHub","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Uploading Reports","id":"uploading-reports"}]}},{"type":"Page","content":[{"id":"create","title":"Create","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use language specific DSL to create ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" instance:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Col A\" | \"Col B\" | \"Col C\"] {\n________________________________\n   \"v1a\" |   \"v1b\" | \"v1c\"\n   \"v2a\" |   \"v2b\" | \"v2c\" }","entry":"createTableWithUnderscore","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Col A\", \"Col B\", \"Col C\",\n      ________________________________,\n        \"v1a\",   \"v1b\", \"v1c\",\n        \"v2a\",   \"v2b\", \"v2c\")","entry":"createTableDataInOneGo","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"},{"type":"Paragraph","content":[{"text":"Note: The example above assumes ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauCore.*","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauDsl.*","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Additionally ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" has header-separating","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"lines defined using underscores ","type":"SimpleText"},{"code":"___","type":"InlinedCode"},{"text":" of various lengths, which you can optionally use for aesthetics.","type":"SimpleText"}]}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Using ","type":"SimpleText"},{"code":"____","type":"InlinedCode"},{"text":" underscore is optional and is there for aesthetics only","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Col A\" | \"Col B\" | \"Col C\"] {\n   \"v1a\" |   \"v1b\" | \"v1c\"\n   \"v2a\" |   \"v2b\" | \"v2c\" }","entry":"createTableWithoutUnderscore","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Col A\", \"Col B\", \"Col C\").values(\n        \"v1a\",   \"v1b\", \"v1c\",\n        \"v2a\",   \"v2b\", \"v2c\")","entry":"createTableDataSeparateValues","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"}]},{"id":"key-columns","title":"Key Columns","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"*","type":"InlinedCode"},{"text":" in front of a column to specify it as a key column","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"*id\" | \"Name\" | \"Type\"] {\n___________________________\n \"id1\" | \"N\"    | \"T\"\n \"id2\" | \"N2\"   | \"T2\"\n \"id3\" | \"N\"    | \"T\" }","entry":"createTableWithKeyColumn","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"*id\" , \"Name\" , \"Type\",\n      _______________________,\n      \"id1\" , \"N\"    , \"T\",\n      \"id2\" , \"N2\"   , \"T2\",\n      \"id3\" , \"N\"    , \"T\")","entry":"createTableWithKeyColumn","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To access a value by key column","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def found = tableData.findByKey(\"id2\")\nfound.Name.should == \"N2\"","entry":"findByKeyAndValidate","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"Record found = tableData.findByKey(\"id2\");\nString name = found.get(\"Name\");\nactual(name).should(equal(\"N2\"));","entry":"findByKeyAndValidate","bodyOnly":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To change key columns of an existing table","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"tableData.withNewKeyColumns(\"Name\", \"Type\")","entry":"changeKeyColumns","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"tableData.withNewKeyColumns(\"Name\", \"Type\")","entry":"changeKeyColumns","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"withNewKeyColumns","type":"InlinedCode"},{"text":" creates new table and validates new key column uniqueness","type":"SimpleText"}]}]},{"id":"create-from-list","title":"Create From List","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fromListOfMaps","type":"InlinedCode"},{"text":" to create ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from a list of maps.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def list = [\n        [k1: \"v1\", k2: \"v2\"],\n        [k1: \"v3\", k3: \"v4\"]]\n\nTableData tableData = TableData.fromListOfMaps(list)\n\nTableData expected = [\"k1\" | \"k2\" | \"k3\"] {\n                      ____________________\n                      \"v1\" | \"v2\" | null\n                      \"v3\" | null | \"v4\" }\n\ntableData.should == expected","title":"from list of maps","entry":"table creation from list of maps","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"List<Map<String, ?>> list = new ArrayList<>();\nlist.add(CollectionUtils.map(\"k1\", \"v1\", \"k2\", \"v2\"));\nlist.add(CollectionUtils.map(\"k1\", \"v3\", \"k3\", \"v4\"));\n\nTableData tableData = TableData.fromListOfMaps(list);\n\nTableData expected = table(\"k1\", \"k2\", \"k3\",\n                           _________________,\n                           \"v1\", \"v2\", null,\n                           \"v3\", null, \"v4\");\n\nactual(tableData).should(equal(expected));","title":"from list of maps","entry":"tableCreationFromListOfMaps","bodyOnly":true,"anchorId":"create-from-list-from-list-of-maps","type":"Snippet"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: WebTau merges keys from all list elements to create the table header","type":"SimpleText"}]}]},{"id":"create-from-existing-rows","title":"Create From Existing Rows","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fromRowsByKeys","type":"InlinedCode"},{"text":" to create ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from existing rows.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def table = [\"*id\" | \"description\"] {\n            __________________________\n             \"id1\" | \"description one\"\n             \"id2\" | \"description two\"\n             \"id3\" | \"description three\" }\n\ndef newTable = table.fromRowsByKeys(\"id1\", \"id3\")\nnewTable.should ==  [\"*id\" | \"description\"] {\n                    __________________________\n                     \"id1\" | \"description one\"\n                     \"id3\" | \"description three\" }","title":"from existing rows by keys","entry":"should create a new table by selecting rows by id","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"def table = [\"*id1\" | \"*id2\" | \"description\"] {\n            _____________________________________\n             \"id11\" | \"id21\" | \"description one\"\n             \"id21\" | \"id22\" | \"description two\"\n             \"id31\" | \"id32\" | \"description three\" }\n\ndef newTable = table.fromRowsByKeys(key(\"id11\", \"id21\"), key(\"id31\", \"id32\"))\nnewTable.should ==  [\"*id1\" | \"*id2\" | \"description\"] {\n                     _____________________________________\n                     \"id11\" | \"id21\" | \"description one\"\n                     \"id31\" | \"id32\" | \"description three\" }","title":"from existing rows by composite keys","entry":"should create a new table by selecting rows by composite keys","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableData table = table(\"*id\", \"description\",\n                        __________________________,\n                        \"id1\", \"description one\",\n                        \"id2\", \"description two\",\n                        \"id3\", \"description three\");\n\nTableData newTable = table.fromRowsByKeys(\"id1\", \"id3\");\nactual(newTable).should(equal(table(\"*id\", \"description\",\n                                    __________________________,\n                                    \"id1\", \"description one\",\n                                    \"id3\", \"description three\")));","title":"from existing rows by keys","entry":"shouldCreateANewTableBySelectingRowsById","bodyOnly":true,"anchorId":"create-from-existing-rows-from-existing-rows-by-keys","type":"Snippet"},{"lang":"java","snippet":"TableData table = table(\"*id1\", \"*id2\", \"description\",\n                        ____________________________________,\n                        \"id11\", \"id12\", \"description one\",\n                        \"id21\", \"id22\", \"description two\",\n                        \"id31\", \"id32\", \"description three\");\n\nTableData newTable = table.fromRowsByKeys(key(\"id11\", \"id12\"), key(\"id31\", \"id32\"));\nactual(newTable).should(equal(table(\"*id1\", \"*id2\", \"description\",\n                                    ____________________________________,\n                                    \"id11\", \"id12\", \"description one\",\n                                    \"id31\", \"id32\", \"description three\")));","title":"from existing rows by composite keys","entry":"shouldCreateANewTableBySelectingRowsByCompositeKeys","bodyOnly":true,"anchorId":"create-from-existing-rows-from-existing-rows-by-composite-keys","type":"Snippet"}]}],"type":"Tabs"}]},{"id":"serialization","title":"Serialization","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"toJson","type":"InlinedCode"},{"text":" to serialize as ","type":"SimpleText"},{"code":"JSON","type":"InlinedCode"}]},{"lang":"java","snippet":"System.out.println(tableData.toJson());","title":"serialize as JSON","surroundedBy":"print table data json","noGap":true,"anchorId":"serialization-serialize-as-json","type":"Snippet"},{"lang":"txt","snippet":"[ {\n  \"A\" : 1.3,\n  \"B\" : 2\n}, {\n  \"A\" : \"Hello\",\n  \"B\" : \"World\"\n} ]","title":"console output","noGap":true,"anchorId":"serialization-console-output","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"toCsv","type":"InlinedCode"},{"text":" to serialize as ","type":"SimpleText"},{"code":"CSV","type":"InlinedCode"}]},{"lang":"java","snippet":"System.out.println(tableData.toCsv());","title":"serialize as CSV","surroundedBy":"print table data csv","noGap":true,"anchorId":"serialization-serialize-as-csv","type":"Snippet"},{"lang":"txt","snippet":"A,B\n1.3,2\nHello,World","title":"console output","noGap":true,"anchorId":"serialization-console-output-2","type":"Snippet"}]},{"id":"serialization-to-file","title":"Serialization To File","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"url":"/webtau/data/csv#write-table","isFile":false,"type":"Link","content":[{"text":"data.csv.write","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/data/json#write-table-data","isFile":false,"type":"Link","content":[{"text":"data.json.write","type":"SimpleText"}]},{"text":" to serialize Table Data to a file","type":"SimpleText"}]}]},{"id":"permutations","title":"Permutations","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"permute(v1, v2)","type":"InlinedCode"},{"text":" to automatically generate multiple rows.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Col A\"              | \"Col B\"         | \"Col C\"] {\n___________________________________________________________\n permute(true, false) | \"v1b\"           | permute('a', 'b')\n \"v2a\"                | permute(10, 20) | \"v2c\" }","entry":"createTableDataWithPermute","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Col A\"              , \"Col B\"         , \"Col C\",\n      ________________________________________________________________,\n       permute(true, false), \"v1b\"           , permute('a', 'b'),\n       \"v2a\"               , permute(10, 20) , \"v2c\")","entry":"createTableDataWithPermute","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"table":{"columns":[{"title":"Col A"},{"title":"Col B"},{"title":"Col C"}],"data":[[[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]]]},"type":"Table"}]},{"id":"guid","title":"GUID","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cell.guid","type":"InlinedCode"},{"text":" to automatically generate unique ids.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"ID\"      | \"Col A\"              | \"Col B\"         | \"Col C\"] {\n________________________________________________________________________\n cell.guid | permute(true, false) | \"v1b\"           | permute('a', 'b')\n cell.guid | \"v2a\"                | permute(10, 20) | \"v2c\" }","entry":"createTableDataWithPermuteAndGuid","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"ID\"      , \"Col A\"              , \"Col B\"         , \"Col C\",\n      ______________________________________________________________________,\n       cell.guid, permute(true, false), \"v1b\"           , permute('a', 'b'),\n       cell.guid, \"v2a\"               , permute(10, 20) , \"v2c\")","entry":"createTableDataWithPermuteAndGuid","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"table":{"columns":[{"title":"ID"},{"title":"Col A"},{"title":"Col B"},{"title":"Col C"}],"data":[[[{"type":"Paragraph","content":[{"text":"395c9a81-cfb7-4c22-83fb-7fe6608040b4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"803ce20e-ced0-460b-9cc8-7bcf32cf3d76","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"bd9c1ce4-48c5-4197-a7eb-117cfaa2d1a3","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"6d279a9f-6149-4a27-986b-846619046c26","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"72053cd2-a5d9-4362-8e5b-dcee64c7c7aa","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"d8a13eba-5a05-4505-a087-ea5ef7a99908","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]]]},"type":"Table"}]},{"id":"replace","title":"Replace","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"table.replace(before, after)","type":"InlinedCode"},{"text":" to replace values in a table.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Col A\" | \"Col B\" | \"Col C\"] {\n________________________________\n   \"v1a\" |   \"v1b\" | \"v1c\"\n   \"v2a\" |   \"v2b\" | \"v2c\" }","entry":"createTableWithUnderscore","bodyOnly":true,"type":"Snippet"},{"lang":"groovy","snippet":"tableData.replace(\"v1b\", \"v1b_\")","entry":"replaceValue","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Col A\", \"Col B\", \"Col C\",\n      ________________________________,\n        \"v1a\",   \"v1b\", \"v1c\",\n        \"v2a\",   \"v2b\", \"v2c\")","entry":"createTableDataInOneGo","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"},{"lang":"java","snippet":"tableData.replace(\"v1b\", \"v1b_\")","entry":"replaceValue","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"table":{"columns":[{"title":"Col A"},{"title":"Col B"},{"title":"Col C"}],"data":[[[{"type":"Paragraph","content":[{"text":"v1a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b_","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1c","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]]]},"type":"Table"}]},{"id":"cell-above-value-reference","title":"Cell Above Value Reference","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cell.above","type":"InlinedCode"},{"text":" to refer to the previous row value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                |  8\n \"Mike\" | cell.above                | 14\n\n \"Drew\" | LocalDate.of(2016, 6, 22) | 10\n \"Pete\" | cell.above                | 11\n \"Max\"  | cell.above                |  3 }","entry":"createTableDataWithAboveRef","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Name\", \"Start Date\"             , \"Games To Play\",\n      __________________________________________________,\n      \"John\", LocalDate.of(2016, 6, 20), 10,\n      \"Bob\" , cell.above               ,  8,\n      \"Mike\", cell.above               , 14,\n\n      \"Drew\", LocalDate.of(2016, 6, 22), 10,\n      \"Pete\", cell.above               , 11,\n      \"Max\" , cell.above               ,  3)","entry":"createTableDataWithAboveRef","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"table":{"columns":[{"title":"Name"},{"title":"Start Date"},{"title":"Games To Play"}],"data":[[[{"type":"Paragraph","content":[{"text":"John","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"8","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Mike","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"14","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Drew","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-22","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Pete","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-22","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"11","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Max","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-22","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}]]]},"type":"Table"}]},{"id":"cell-above-math","title":"Cell Above Math","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cell.above.plus|minus","type":"InlinedCode"},{"text":" to generate a derived value based on the previous row value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                | cell.above + 1\n \"Mike\" | cell.above                | cell.above + 1 }","entry":"createTableDataWithAboveRefAndMath","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"table(\"Name\", \"Start Date\"             , \"Games To Play\",\n     ________________________________________________________________,\n      \"John\", LocalDate.of(2016, 6, 20), 10,\n      \"Bob\" , cell.above               , cell.above.plus(1),\n      \"Mike\", cell.above               , cell.above.plus(1))","entry":"createTableDataWithAboveRefAndMath","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"},{"table":{"columns":[{"title":"Name"},{"title":"Start Date"},{"title":"Games To Play"}],"data":[[[{"type":"Paragraph","content":[{"text":"John","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"11","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Mike","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"12","type":"SimpleText"}]}]]]},"type":"Table"},{"type":"Paragraph","content":[{"text":"Extract ","type":"SimpleText"},{"code":"cell.above.operation","type":"InlinedCode"},{"text":" to make your intentions clearer","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"lang":"groovy","snippet":"def increment = cell.above + 1\n\n[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                | increment\n \"Mike\" | cell.above                | increment }","entry":"createTableDataWithAboveRefAndMathExtracted","bodyOnly":true,"type":"Snippet"}]},{"name":"Java","content":[{"lang":"java","snippet":"TableDataCellValueGenerator<?> increment = cell.above.plus(1)\n\ntable(\"Name\", \"Start Date\"             , \"Games To Play\",\n     ________________________________________________________________,\n      \"John\", LocalDate.of(2016, 6, 20), 10,\n      \"Bob\" , cell.above               , increment,\n      \"Mike\", cell.above               , increment)","entry":["createIncrementExample","createTableDataWithAboveRefAndMathExtracted"],"entrySeparator":"","bodyOnly":true,"removeReturn":true,"removeSemicolon":true,"type":"Snippet"}]}],"type":"Tabs"}]}],"lastModifiedTime":1692271721154,"tocItem":{"chapterTitle":"Reference","pageTitle":"Table Data","pageMeta":{},"dirName":"reference","fileName":"table-data","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Create","id":"create"},{"title":"Key Columns","id":"key-columns"},{"title":"Create From List","id":"create-from-list"},{"title":"Create From Existing Rows","id":"create-from-existing-rows"},{"title":"Serialization","id":"serialization"},{"title":"Serialization To File","id":"serialization-to-file"},{"title":"Permutations","id":"permutations"},{"title":"GUID","id":"guid"},{"title":"Replace","id":"replace"},{"title":"Cell Above Value Reference","id":"cell-above-value-reference"},{"title":"Cell Above Math","id":"cell-above-math"}]}},{"type":"Page","content":[{"id":"2-1","title":"2.1","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: browser ","type":"SimpleText"},{"url":"/webtau/browser/finders-and-filters#parent-finder-by-css","isFile":false,"type":"Link","content":[{"text":"element.parent(css)","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: actual value path is now printed with default terminal color and not with the previous token color","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/servers/introduction","isFile":false,"type":"Link","content":[{"text":"Servers","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"fullUrl","type":"InlinedCode"},{"text":" now includes ","type":"SimpleText"},{"code":"queryString","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/matchers/strings#contains","isFile":false,"type":"Link","content":[{"text":"string contain","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/matchers/strings#regexp","isFile":false,"type":"Link","content":[{"text":"string regexp","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/matchers/tables","isFile":false,"type":"Link","content":[{"text":"TableData Matcher","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/any-value","isFile":false,"type":"Link","content":[{"text":"any value matcher","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/maps#contain","isFile":false,"type":"Link","content":[{"text":"Map Contain","type":"SimpleText"}]},{"text":" displays missing keys inlined","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/maps#equality-comparison","isFile":false,"type":"Link","content":[{"text":"Map Equal","type":"SimpleText"}]},{"text":" displays missing keys inlined","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/tables#extracting-table-data","isFile":false,"type":"Link","content":[{"text":"Browser tableEl.extratTableData","type":"SimpleText"}]},{"text":" to get table data from a page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":".addRowsExistingColumnsOnly(otherTable)","type":"InlinedCode"},{"text":" to merge other tables into","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":".getColumnNames()","type":"InlinedCode"},{"text":" shortcut","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/tables","isFile":false,"type":"Link","content":[{"text":"browser.table","type":"SimpleText"}]},{"text":" to validate and scrap page data in tabular format","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/tables#supported-tables-flavor","isFile":false,"type":"Link","content":[{"text":"browser.table AG Grid","type":"SimpleText"}]},{"text":" flavor","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/introduction","isFile":false,"type":"Link","content":[{"text":"Browser","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"visible","type":"InlinedCode"},{"text":" matcher is now part of core matchers and not browser specific","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"anyOf","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"containAll","type":"InlinedCode"},{"text":" matchers toString is pretty printable","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/servers/introduction","isFile":false,"type":"Link","content":[{"text":"Servers","type":"SimpleText"}]},{"text":" shortcut to access ","type":"SimpleText"},{"url":"/webtau/servers/server-router#request-properties","isFile":false,"type":"Link","content":[{"text":"queryParam","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/servers/introduction","isFile":false,"type":"Link","content":[{"text":"Servers","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"request","type":"InlinedCode"},{"text":" object now exposes ","type":"SimpleText"},{"code":"query","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"pathWithQuery","type":"InlinedCode"}]}]}]}]},{"id":"2-0","title":"2.0","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Warning: Java 17+ JRE is required for version 2.0","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Warning: All deprecated methods from 1.x are now removed","type":"SimpleText"}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: pretty printing tokenized messages properly resets bold font on tokens that should not use bold","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Leverage ","type":"SimpleText"},{"url":"/webtau/junit5/getting-started","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]},{"text":" listeners to generate report at the end of plan execution instead of shutdown hook","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Browser ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"Page Element","type":"SimpleText"}]},{"text":" pretty print method falls back to a regular printing when can't parse HTML properly","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Simplified ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"Browser Page Element Declaration","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: use Java ","type":"SimpleText"},{"code":"var","type":"InlinedCode"},{"text":" in examples where it makes sense","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: use ","type":"SimpleText"},{"code":"browser.keys","type":"InlinedCode"},{"text":" in ","type":"SimpleText"},{"url":"/webtau/browser/forms#custom-form-elements","isFile":false,"type":"Link","content":[{"text":"custom form element","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Breaking: remove ","type":"SimpleText"},{"code":"DataRenderers","type":"InlinedCode"},{"text":" in favor of ","type":"SimpleText"},{"code":"PrettyPrinter","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Breaking: remove all deprecated methods","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Breaking: minimum Java requirement is 17 to build and to run","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Do not print actual string values in case of failure when they have already been printed as part of mismatch details","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Nested ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]},{"text":" are pretty printable","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Breaking: Browser ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"Page Element","type":"SimpleText"}]},{"text":" is now a concrete class","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Breaking: Browser ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"Page Element","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":".getCount()","type":"InlinedCode"},{"text":" and company replaced with ","type":"SimpleText"},{"code":".count","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/alerts","isFile":false,"type":"Link","content":[{"text":"Browser Alert","type":"SimpleText"}]},{"text":" shortcuts","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/java-beans-and-records#java-records","isFile":false,"type":"Link","content":[{"text":"Java Records And Map/Table","type":"SimpleText"}]},{"text":" comparison","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Browser ","type":"SimpleText"},{"url":"/webtau/browser/finders-and-filters#parent-finder","isFile":false,"type":"Link","content":[{"text":"el.parent","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Report for ","type":"SimpleText"},{"url":"/webtau/browser/forms","isFile":false,"type":"Link","content":[{"text":"Browser Page Element","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" uses ","type":"SimpleText"},{"code":"<enter>","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"<f1>","type":"InlinedCode"},{"text":" etc for special symbols","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Expose Browser ","type":"SimpleText"},{"url":"/webtau/browser/element-values-reference#attribute-value","isFile":false,"type":"Link","content":[{"text":"attribute value","type":"SimpleText"}]},{"text":" for streamlined assertion/waiting","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/web-socket/introduction","isFile":false,"type":"Link","content":[{"text":"WebSocket","type":"SimpleText"}]},{"text":" module is now using ","type":"SimpleText"},{"code":"java.net.http","type":"InlinedCode"},{"text":" module as implementation and not embedded tomcat","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/web-socket/header","isFile":false,"type":"Link","content":[{"text":"WebSocket Header","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/HTTP/introduction","isFile":false,"type":"Link","content":[{"text":"HTTP","type":"SimpleText"}]},{"text":" module is now using ","type":"SimpleText"},{"code":"java.net.http","type":"InlinedCode"},{"text":" module as implementation and not ","type":"SimpleText"},{"code":"HttpURLConnection","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" toString() uses pretty printed version without colors","type":"SimpleText"}]}]}]}]},{"id":"1-53","title":"1.53","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Standalone Runner","type":"SimpleText"}]},{"text":" headless mode by default is back: no more java app popup","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: WebTau won't attempt to reopen browser at the end of tests if there is a failed test with ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"PageElement","type":"SimpleText"}]},{"text":" related assertions","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/getting-started/what-is-this#scripting-and-junit","isFile":false,"type":"Link","content":[{"text":"mention scripting","type":"SimpleText"}]},{"text":" in the docs intro page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/configuration/options#browserUseFakeMedia","isFile":false,"type":"Link","content":[{"text":"browserUseFakeMedia","type":"SimpleText"}]},{"text":" to bypass permission asking for microphone/camera","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"PageElement","type":"SimpleText"}]},{"text":" pretty print for REPL/notebooks now includes HTML representation and prints first ten elements","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Expose ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"PageElement","type":"SimpleText"}]},{"text":" extract html nodes","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Browser ","type":"SimpleText"},{"url":"/webtau/browser/page-element-and-value","isFile":false,"type":"Link","content":[{"text":"Page Element","type":"SimpleText"}]},{"text":" highlight when run in ","type":"SimpleText"},{"url":"https://github.com/Kotlin/kotlin-jupyter","isFile":false,"type":"Link","content":[{"text":"Kotlin Notebook","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Print complete expected value in case of matcher failure, and not just first 5 lines","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Expose ","type":"SimpleText"},{"code":"cfg","type":"InlinedCode"},{"text":" instead of ","type":"SimpleText"},{"code":"getCfg","type":"InlinedCode"},{"text":" through ","type":"SimpleText"},{"code":"WebTauDsl","type":"InlinedCode"},{"text":" for Kotlin Notebooks","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: shortcut to set base url from Kotlin Notebook","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"PrettyPrintableToHtmlConverter","type":"InlinedCode"},{"text":" to use in ","type":"SimpleText"},{"url":"https://github.com/Kotlin/kotlin-jupyter","isFile":false,"type":"Link","content":[{"text":"Kotlin Notebook","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: automatically recreate ","type":"SimpleText"},{"url":"/webtau/browser/introduction","isFile":false,"type":"Link","content":[{"text":"browser","type":"SimpleText"}]},{"text":" driver when user manually close it during REPL or Notebook experience","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/configuration/options#browserSameDriverInThreads","isFile":false,"type":"Link","content":[{"text":"browserSameDriverInThreads","type":"SimpleText"}]},{"text":" option to force the same browser instance when running code from Notebook cells","type":"SimpleText"}]}]}]}]},{"id":"1-52-1","title":"1.52.1","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"tableVerticalSeparator","type":"InlinedCode"},{"text":" option to override what vertical separator to use when printing ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"disableConsoleOverallReport","type":"InlinedCode"},{"text":" option to disable printing of overall test summary and report link","type":"SimpleText"}]}]}]}]},{"id":"1-52","title":"1.52","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"code":"notEqual","type":"InlinedCode"},{"text":" ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matcher","type":"SimpleText"}]},{"text":" now properly delegates to nested matcher such as ","type":"SimpleText"},{"code":"anyOf","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"code":"containsAll","type":"InlinedCode"},{"text":" ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matcher","type":"SimpleText"}]},{"text":" now properly renders java bean details when compared against multiple maps","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"code":"anyOf","type":"InlinedCode"},{"text":" ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matcher","type":"SimpleText"}]},{"text":" now properly renders java bean details when compared against multiple maps","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]},{"text":" contain messages to use ","type":"SimpleText"},{"code":"not","type":"InlinedCode"},{"text":" in details report in case of ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/HTTP/introduction","isFile":false,"type":"Link","content":[{"text":"HTTP","type":"SimpleText"}]},{"text":" java module now automatically handles config file, without requiring larger WebTau dependency","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: matchers Web Report mis-alignment fix","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: chrome driver init workaround for origin to work with new chrome","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/IDE-setup","isFile":false,"type":"Link","content":[{"text":"IDE Setup","type":"SimpleText"}]},{"text":" for auto-completion","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: redo ","type":"SimpleText"},{"url":"/webtau/getting-started/what-is-this","isFile":false,"type":"Link","content":[{"text":"WebTau intro","type":"SimpleText"}]},{"text":" and include HTTP Resource and Web Socket section","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/HTTP/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"HTTP imports","type":"SimpleText"}]},{"text":", and sprinkle links to the page from various HTTP pages","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Combined HTTP CRUD and CRUD separated pages into ","type":"SimpleText"},{"url":"/webtau/HTTP/CRUD-example","isFile":false,"type":"Link","content":[{"text":"CRUD Example","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/continuous-integration/GitHub","isFile":false,"type":"Link","content":[{"text":"GitHub CI","type":"SimpleText"}]},{"text":" reports upload","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/matchers/strings","isFile":false,"type":"Link","content":[{"text":"string matcher","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/custom-compare-to-handler#custom-complex-domain-data","isFile":false,"type":"Link","content":[{"text":"CompareToHandler","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"convertedExpected","type":"InlinedCode"},{"text":". It now participates in matching step output and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"uses converted values for failed and matched messaging.","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/steps","isFile":false,"type":"Link","content":[{"text":"Steps","type":"SimpleText"}]},{"text":" reporter prints error details on a next line as long as there is additional pretty printed details present (even if one liner)","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" Record is pretty printable","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: List Of Beans And Map ","type":"SimpleText"},{"url":"/webtau/matchers/java-beans-and-records#java-beans-contain-map","isFile":false,"type":"Link","content":[{"text":"contain","type":"SimpleText"}]}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: List Of Beans And Table ","type":"SimpleText"},{"url":"/webtau/matchers/java-beans-and-records#java-beans-contain-table-data","isFile":false,"type":"Link","content":[{"text":"contain","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/HTTP/introduction","isFile":false,"type":"Link","content":[{"text":"HTTP","type":"SimpleText"}]},{"text":" body ","type":"SimpleText"},{"url":"/webtau/HTTP/matchers#contain-table","isFile":false,"type":"Link","content":[{"text":"contain TableData","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/configuration/options#waitTick","isFile":false,"type":"Link","content":[{"text":"waitTick","type":"SimpleText"}]},{"text":" globally configurable value","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/HTTP/HTTP-resource","isFile":false,"type":"Link","content":[{"text":"HTTP Resource","type":"SimpleText"}]},{"text":" to define lazy values to be waited or asserted on later","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" is now part of core instead of ","type":"SimpleText"},{"code":"http","type":"InlinedCode"},{"text":" module","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/web-socket/introduction","isFile":false,"type":"Link","content":[{"text":"WebSocket","type":"SimpleText"}]},{"text":" support","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: browser handle set select form value ","type":"SimpleText"},{"url":"/webtau/browser/forms#select","isFile":false,"type":"Link","content":[{"text":"by text","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: add ","type":"SimpleText"},{"code":"browser.element","type":"InlinedCode"},{"text":" as alias to ","type":"SimpleText"},{"code":"$","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: string matcher ","type":"SimpleText"},{"url":"/webtau/matchers/strings#different-number-of-empty-lines","isFile":false,"type":"Link","content":[{"text":"extra new lines check","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: always render ","type":"SimpleText"},{"url":"/webtau/HTTP/introduction","isFile":false,"type":"Link","content":[{"text":"HTTP","type":"SimpleText"}]},{"text":" JSON request/response as multiline even when the content is small enough to fit a single line","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"Path","type":"InlinedCode"},{"text":" pretty printable with different colors for file and extension","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: pretty print ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" inside maps as a block to maintain indentation","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: code matchers (e.g. should throw exception) is now a step and use tokenized colored messages","type":"SimpleText"}]}]}]}]},{"id":"1-51","title":"1.51","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: JUnit5 correctly registers failed matcher step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: HTML report long test names replaced with ellipsis","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Console output of failed steps and their output order at the end of tests run","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/GraphQL/introduction","isFile":false,"type":"Link","content":[{"text":"GraphQL","type":"SimpleText"}]},{"text":" won't make schema calls for report when no GraphQL calls were performed during test","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction#waitto","isFile":false,"type":"Link","content":[{"text":"waitTo label","type":"SimpleText"}]},{"text":" fix preposition messaging","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: remove extra spacing before delimiters when render ","type":"SimpleText"},{"url":"/webtau/report/steps","isFile":false,"type":"Link","content":[{"text":"Web Report Steps","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: move ","type":"SimpleText"},{"url":"/webtau/report/tracing","isFile":false,"type":"Link","content":[{"text":"trace","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/report/warnings","isFile":false,"type":"Link","content":[{"text":"warning","type":"SimpleText"}]},{"text":" to their own documentation pages and document import prerequisites","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/data/json#write-table-data","isFile":false,"type":"Link","content":[{"text":"data.json.write","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" add missing report output","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: move ","type":"SimpleText"},{"url":"/webtau/junit5/getting-started","isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}]},{"text":" to its own section","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: JUnit5 ","type":"SimpleText"},{"url":"/webtau/junit5/dynamic-tests","isFile":false,"type":"Link","content":[{"text":"Dynamic Tests","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Java config is handled when only webtau-core dependency is present. No need for junit specific dependency.","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" ","type":"SimpleText"},{"url":"/webtau/report/tracing#object-properties","isFile":false,"type":"Link","content":[{"text":"complex objects","type":"SimpleText"}]},{"text":" like list of java beans with nested beans","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: pretty print string in a special way when newline symbol is present","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: highlight elements inside lists that match criteria when shouldn't (when using ","type":"SimpleText"},{"code":"shouldNot contain","type":"InlinedCode"},{"text":")","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: initial pretty printer of ","type":"SimpleText"},{"code":"class","type":"InlinedCode"},{"text":" instances","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: use colored messages for ","type":"SimpleText"},{"url":"/webtau/matchers/introduction#failure-output","isFile":false,"type":"Link","content":[{"text":"failed assertion details","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Display actual value with markers on Web Report in case of a failure","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Pretty Print for Regexp Pattern instance with displaying flags","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/tracing","isFile":false,"type":"Link","content":[{"text":"tracing","type":"SimpleText"}]},{"text":" pretty prints complex values like maps and ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/database/data-setup#cleaning-tables","isFile":false,"type":"Link","content":[{"text":"databaseTable.clear","type":"SimpleText"}]},{"text":" shortcut to delete from tables","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data#create-from-existing-rows","isFile":false,"type":"Link","content":[{"text":"TableData.fromRowsByKeys","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Empty ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" pretty print explicitly states \"empty\" for empty tables","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/steps","isFile":false,"type":"Link","content":[{"text":"Steps","type":"SimpleText"}]},{"text":" input info additional indentation when printed to console","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]},{"text":" only print minimal details in case of match, extra details in case of failure","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]},{"text":" only print first 5 lines of ","type":"SimpleText"},{"code":"expected","type":"InlinedCode"},{"text":" for ","type":"SimpleText"},{"code":"in progress","type":"InlinedCode"},{"text":" message to reduce data duplication","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Failed Test ","type":"SimpleText"},{"url":"/webtau/report/introduction#failed-test-summary","isFile":false,"type":"Link","content":[{"text":"Summary","type":"SimpleText"}]},{"text":" auto expands failed step and removed duplicated error message from parent step during rendering","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]},{"text":" won't print failed matching details twice. Now it only prints during step rendering, and actual assertion message asks to check info above","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"findByKey","type":"InlinedCode"},{"text":" validation for keys presence and composite key size match","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Merge: ","type":"SimpleText"},{"url":"/webtau/database/introduction","isFile":false,"type":"Link","content":[{"text":"Database","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"DatabaseFacade","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"Database","type":"InlinedCode"},{"text":" to have consistent import of DB module only","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/database/introduction","isFile":false,"type":"Link","content":[{"text":"Database","type":"SimpleText"}]},{"text":" comparison and inserts automatically convert from camelCase to UNDER_SCORE","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/database/introduction","isFile":false,"type":"Link","content":[{"text":"Database","type":"SimpleText"}]},{"text":" Spring Boot ","type":"SimpleText"},{"url":"/webtau/database/spring-boot-example","isFile":false,"type":"Link","content":[{"text":"Example","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/database/introduction","isFile":false,"type":"Link","content":[{"text":"Database","type":"SimpleText"}]},{"text":" pretty print query results in case of failure","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/database/introduction","isFile":false,"type":"Link","content":[{"text":"Database","type":"SimpleText"}]},{"text":" instance creation from explicit jdbc url","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/introduction","isFile":false,"type":"Link","content":[{"text":"browser","type":"SimpleText"}]},{"text":" implicit ","type":"SimpleText"},{"url":"/webtau/browser/test-containers","isFile":false,"type":"Link","content":[{"text":"Test Containers","type":"SimpleText"}]},{"text":" support","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/browser/basic-configuration#access-to-base-url","isFile":false,"type":"Link","content":[{"text":"browser.getBaseUrlPort","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/java-beans-and-records#java-beans-equal-table-data","isFile":false,"type":"Link","content":[{"text":"Beans And Table","type":"SimpleText"}]},{"text":" comparison pretty prints beans as table","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/java-beans-and-records#java-bean-equals-map","isFile":false,"type":"Link","content":[{"text":"Bean And Map","type":"SimpleText"}]},{"text":" comparison pretty prints actual bean data in case of mismatch","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" new comparison report with colors and better failure highlight","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: properly render Arrays as actual instead of reference hash","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"list","type":"InlinedCode"},{"text":" companion to ","type":"SimpleText"},{"code":"map","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/json#parse-map","isFile":false,"type":"Link","content":[{"text":"data.json.mapFromString","type":"SimpleText"}]},{"text":", ","type":"SimpleText"},{"url":"/webtau/data/json#parse-list","isFile":false,"type":"Link","content":[{"text":"data.json.listFromString","type":"SimpleText"}]},{"text":",","type":"SimpleText"},{"type":"SoftLineBreak"},{"url":"/webtau/data/json#parse-tabledata","isFile":false,"type":"Link","content":[{"text":"data.json.tableFromString","type":"SimpleText"}]},{"text":", ","type":"SimpleText"},{"url":"/webtau/data/json#parse-object","isFile":false,"type":"Link","content":[{"text":"data.json.objectFromString","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: renamed ","type":"SimpleText"},{"code":"aMapOf","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"map","type":"InlinedCode"},{"text":" and deprecated former","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"waitTo","type":"SimpleText"}]},{"text":" on ","type":"SimpleText"},{"code":"LiveValue","type":"InlinedCode"},{"text":" support for greaterThan, lessThan kind of comparisons","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: pretty print output of actual value with failure markers in case of a ","type":"SimpleText"},{"url":"/webtau/matchers/introduction#failure-output","isFile":false,"type":"Link","content":[{"text":"Failed Matcher","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/matchers/introduction","isFile":false,"type":"Link","content":[{"text":"waitTo","type":"SimpleText"}]},{"text":" support for supplier","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: limit number of failed/errored tests printed at the end of run","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/configuration/options#consoleOutputCaptureDir","isFile":false,"type":"Link","content":[{"text":"consoleOutputCaptureDir","type":"SimpleText"}]},{"text":" for ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Standalone Runner","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/HTTP/body#form-url-encoded-data","isFile":false,"type":"Link","content":[{"text":"http.formDataUrlEncoded","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/base64","isFile":false,"type":"Link","content":[{"text":"data.base64","type":"SimpleText"}]},{"text":" to encode and decode strings","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/introduction","isFile":false,"type":"Link","content":[{"text":"Report","type":"SimpleText"}]},{"text":" shows first failed step in test summary instead of an exception message","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Report shows warning icon next to tests with warnings","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/steps","isFile":false,"type":"Link","content":[{"text":"Steps, Trace, Warnings","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Release Notes","pageTitle":"2023 Releases","pageMeta":{"title":["2023 Releases"]},"dirName":"release-notes","fileName":"2023","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"2.1","id":"2-1"},{"title":"2.0","id":"2-0"},{"title":"1.53","id":"1-53"},{"title":"1.52.1","id":"1-52-1"},{"title":"1.52","id":"1-52"},{"title":"1.51","id":"1-51"}]}},{"type":"Page","content":[{"id":"1-50","title":"1.50","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report properly prints browser ","type":"SimpleText"},{"code":"sendKeys","type":"InlinedCode"},{"text":" special keys like ","type":"SimpleText"},{"code":"escape","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"pageUp","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: DatabaseTable class is public now to be used in Java tests","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add examples and re-arrange ","type":"SimpleText"},{"url":"/webtau/getting-started/why","isFile":false,"type":"Link","content":[{"text":"Why","type":"SimpleText"}]},{"text":" page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/junit5/reporting#automatic-extension","isFile":false,"type":"Link","content":[{"text":"JUnit5 Automatic Extension","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/data/import-and-dependencies","isFile":false,"type":"Link","content":[{"text":"data dependencies and import","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add server responses to ","type":"SimpleText"},{"url":"/webtau/getting-started/what-is-this","isFile":false,"type":"Link","content":[{"text":"What Is This","type":"SimpleText"}]},{"text":" page and to README.md","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/data/csv","isFile":false,"type":"Link","content":[{"text":"data","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/data/introduction","isFile":false,"type":"Link","content":[{"text":"data","type":"SimpleText"}]},{"text":" more console output examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/persona/HTTP-persona","isFile":false,"type":"Link","content":[{"text":"HTTP Persona Java","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/servers/fake-server","isFile":false,"type":"Link","content":[{"text":"Fake Server","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/servers/static-server","isFile":false,"type":"Link","content":[{"text":"Static Server","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage","isFile":false,"type":"Link","content":[{"text":"HTTP Data Coverage","type":"SimpleText"}]},{"text":" output as ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage#json-output","isFile":false,"type":"Link","content":[{"text":"JSON","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/warnings","isFile":false,"type":"Link","content":[{"text":"warnings","type":"SimpleText"}]},{"text":" when ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage#text-routes","isFile":false,"type":"Link","content":[{"text":"HTTP Text Route","type":"SimpleText"}]},{"text":" is missing for a call","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/HTTP/openAPI-spec","isFile":false,"type":"Link","content":[{"text":"Open API","type":"SimpleText"}]},{"text":" validation reports uses ","type":"SimpleText"},{"url":"/webtau/report/warnings","isFile":false,"type":"Link","content":[{"text":"Warnings","type":"SimpleText"}]},{"text":" to report undefined URLs","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/report/warnings","isFile":false,"type":"Link","content":[{"text":"warnings","type":"SimpleText"}]},{"text":" concept","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Java ","type":"SimpleText"},{"url":"/webtau/getting-started/configuration#config-file","isFile":false,"type":"Link","content":[{"text":"config location","type":"SimpleText"}]},{"text":" override option","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Remove: HTTP Overall performance report Tab","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/csv#table-data-conversion","isFile":false,"type":"Link","content":[{"text":"Table Data Conversion","type":"SimpleText"}]},{"text":" function","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: HTTP text based ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage#text-routes","isFile":false,"type":"Link","content":[{"text":"routes definition","type":"SimpleText"}]},{"text":" to support performance and data coverage without Open API spec","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: JUnit5 and JUnit4 runners print failed tests and their failed steps at the end of test runs","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: HTTP data coverage Web Report summary card","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Generated Report Path is printed last so it is easier to find when there are failing tests","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" prints failed steps info in addition to the test exception at the end","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/json","isFile":false,"type":"Link","content":[{"text":"data.json.write","type":"SimpleText"}]},{"text":" methods to write list/map/","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/json","isFile":false,"type":"Link","content":[{"text":"data.json","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/json#read-tabledata","isFile":false,"type":"Link","content":[{"text":"data.json.table","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: create ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" from ","type":"SimpleText"},{"url":"/webtau/reference/table-data#create-from-list","isFile":false,"type":"Link","content":[{"text":"list of maps","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: return value variant of ","type":"SimpleText"},{"url":"/webtau/JVM-business-logic/documentation-artifacts#capture-console-output","isFile":false,"type":"Link","content":[{"text":"doc.console.capture","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/data/csv#write-table-data","isFile":false,"type":"Link","content":[{"text":"data.csv.write","type":"SimpleText"}]},{"text":" with ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"addRow","type":"InlinedCode"},{"text":" validates row size against header","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"url":"/webtau/reference/table-data#serialization","isFile":false,"type":"Link","content":[{"text":"toCsv","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"addRow","type":"InlinedCode"},{"text":" accepts ","type":"SimpleText"},{"code":"List<?>","type":"InlinedCode"},{"text":" instead of ","type":"SimpleText"},{"code":"List<Object>","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: properly report missing columns in case of list of maps and ","type":"SimpleText"},{"url":"/webtau/reference/table-data","isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}]},{"text":" comparison","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: HTTP data coverage ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage#detect-fields-that-were-skipped","isFile":false,"type":"Link","content":[{"text":"console warning","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: initial ","type":"SimpleText"},{"url":"/webtau/HTTP/data-coverage","isFile":false,"type":"Link","content":[{"text":"HTTP data coverage","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: render ","type":"SimpleText"},{"url":"/webtau/report/tracing","isFile":false,"type":"Link","content":[{"text":"trace","type":"SimpleText"}]},{"text":" console output in a special manner","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: setValue to Web Page ","type":"SimpleText"},{"url":"/webtau/browser/element-actions-reference#modifications-no-log","isFile":false,"type":"Link","content":[{"text":"without logging","type":"SimpleText"}]},{"text":" secret values","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: Better support for ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/introduction","isFile":false,"type":"Link","content":[{"text":"Groovy Runner","type":"SimpleText"}]},{"text":" without explicit scenario","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"url":"/webtau/persona/introduction","isFile":false,"type":"Link","content":[{"text":"Persona","type":"SimpleText"}]},{"text":" vararg signature for Java","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: remove indentation from ","type":"SimpleText"},{"url":"/webtau/JVM-business-logic/documentation-artifacts#capture-console-output","isFile":false,"type":"Link","content":[{"text":"Doc Capture Console Output","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: way to provide actual value ","type":"SimpleText"},{"url":"/webtau/matchers/universal-compare#reporting","isFile":false,"type":"Link","content":[{"text":"name","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: ","type":"SimpleText"},{"code":"server.removeOverride(WebTauServerOverride override)","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add: cache get ","type":"SimpleText"},{"url":"/webtau/utilities/cache#cached-value-with-expiration","isFile":false,"type":"Link","content":[{"text":"with expiration","type":"SimpleText"}]},{"text":" method","type":"SimpleText"}]}]}]}]},{"id":"1-49","title":"1.49","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Remove ","type":"SimpleText"},{"code":"highlight","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"cover","type":"InlinedCode"},{"text":" from ","type":"SimpleText"},{"url":"/webtau/browser/documentation-artifacts","isFile":false,"type":"Link","content":[{"text":"browser.doc.capture","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Maven Plugin race condition between shutdown hook and apache FileUtils class unload","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: global cleanup race condition, make sure it is called only once","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Web report tab names overflow ellipsis","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Report properly use ","type":"SimpleText"},{"url":"/webtau/report/configuration#report-name-and-url","isFile":false,"type":"Link","content":[{"text":"reportNameUrl","type":"SimpleText"}]},{"text":" parameter","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Web report always put ","type":"SimpleText"},{"code":"Setup","type":"InlinedCode"},{"text":" group first even if there are failed tests","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Make web report tab title stable (was changing name after javascript load)","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Web report entries and icons center alignment","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: update ","type":"SimpleText"},{"url":"/webtau/HTTP/documentation-artifacts","isFile":false,"type":"Link","content":[{"text":"HTTP Documentation Artifacts","type":"SimpleText"}]},{"text":" with ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/znai","isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}]},{"text":" and Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"url":"/webtau/data/pdf","isFile":false,"type":"Link","content":[{"text":"data.pdf","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Move ","type":"SimpleText"},{"url":"/webtau/data/introduction","isFile":false,"type":"Link","content":[{"text":"Data","type":"SimpleText"}]},{"text":" to its own chapter","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Consolidated HTTP report page with ","type":"SimpleText"},{"url":"/webtau/report/introduction","isFile":false,"type":"Link","content":[{"text":"Reports","type":"SimpleText"}]},{"text":" chapter","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add Persona Examples to ","type":"SimpleText"},{"url":"/webtau/getting-started/what-is-this","isFile":false,"type":"Link","content":[{"text":"Intro Page","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/HTTP/configuration","isFile":false,"type":"Link","content":[{"text":"HTTP Configuration","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"url":"/webtau/HTTP/HTTP-calls#ping","isFile":false,"type":"Link","content":[{"text":"ping","type":"SimpleText"}]},{"text":" reference documentation","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"url":"https://github.com/testingisdocumenting/webtau/discussions","isFile":false,"type":"Link","content":[{"text":"GitHub discussions","type":"SimpleText"}]},{"text":" to footer and support link","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Merged HTTP Form Data into ","type":"SimpleText"},{"url":"/webtau/HTTP/body#form-file-data","isFile":false,"type":"Link","content":[{"text":"HTTP/body","type":"SimpleText"}]},{"text":" page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Added ","type":"SimpleText"},{"url":"/webtau/getting-started/configuration#disable-ansi-colors","isFile":false,"type":"Link","content":[{"text":"Disable Anti Colors","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/report/configuration","isFile":false,"type":"Link","content":[{"text":"Report Configuration","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/HTTP/body#json-request-from-file","isFile":false,"type":"Link","content":[{"text":"HTTP JSON Body","type":"SimpleText"}]},{"text":" example from external file","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: HTTP extract complex value from ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node#extracting-values","isFile":false,"type":"Link","content":[{"text":"Data Node","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: consolidate and introduce ","type":"SimpleText"},{"url":"/webtau/HTTP/body","isFile":false,"type":"Link","content":[{"text":"HTTP Body","type":"SimpleText"}]},{"text":" page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Added ","type":"SimpleText"},{"url":"/webtau/HTTP/HTTP-calls","isFile":false,"type":"Link","content":[{"text":"HTTP Calls","type":"SimpleText"}]},{"text":" and example snippets now have links to referenced method","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: ","type":"SimpleText"},{"url":"/webtau/HTTP/query-parameters","isFile":false,"type":"Link","content":[{"text":"HTTP Query Parameters","type":"SimpleText"}]},{"text":" Java examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add Java examples to ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node","isFile":false,"type":"Link","content":[{"text":"HTTP DataNode","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add Java examples to ","type":"SimpleText"},{"url":"/webtau/HTTP/header#response-header","isFile":false,"type":"Link","content":[{"text":"HTTP Response Header","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add Java examples to ","type":"SimpleText"},{"url":"/webtau/HTTP/header#content-type-shortcut","isFile":false,"type":"Link","content":[{"text":"HTTP Content Type shorcuts","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Deprecate ","type":"SimpleText"},{"code":"pdf","type":"InlinedCode"},{"text":" method in favor of ","type":"SimpleText"},{"url":"/webtau/HTTP/body#pdf-response","isFile":false,"type":"Link","content":[{"text":"data.pdf.read","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Deprecate ","type":"SimpleText"},{"url":"/webtau/browser/matchers#state","isFile":false,"type":"Link","content":[{"text":"Browser Element","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"beVisble()","type":"InlinedCode"},{"text":" variants of matchers in favor of ","type":"SimpleText"},{"code":"visible","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/matchers/custom-compare-to-handler","isFile":false,"type":"Link","content":[{"text":"compare to rule","type":"SimpleText"}]},{"text":" to compare ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node","isFile":false,"type":"Link","content":[{"text":"DataNode","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/HTTP/body#json-request","isFile":false,"type":"Link","content":[{"text":"JsonRequestBody","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/browser/documentation-artifacts#annotation-types","isFile":false,"type":"Link","content":[{"text":"browser.doc.arrow","type":"SimpleText"}]},{"text":" that connects two elements","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/JVM-business-logic/documentation-artifacts#capture-console-output","isFile":false,"type":"Link","content":[{"text":"doc.console.capture","type":"SimpleText"}]},{"text":" to capture console output of a provided JVM code block","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/browser/documentation-artifacts#badge-shortcut","isFile":false,"type":"Link","content":[{"text":"Badge Shortcut","type":"SimpleText"}]},{"text":" to ","type":"SimpleText"},{"url":"/webtau/browser/documentation-artifacts","isFile":false,"type":"Link","content":[{"text":"browser.doc","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add sorting to report ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Config","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Environment Variables","type":"SimpleText"}]},{"text":" tables","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add extra ","type":"SimpleText"},{"url":"/webtau/getting-started/installation#groovy-runner","isFile":false,"type":"Link","content":[{"text":"Maven Plugin","type":"SimpleText"}]},{"text":" parameters: ","type":"SimpleText"},{"code":"confg","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"reportPath","type":"InlinedCode"},{"text":",","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"failedReportPath","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"reportName","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"reportNameUrl","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"noColor","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Reduce messaging in case of ","type":"SimpleText"},{"url":"/webtau/matchers/universal-compare","isFile":false,"type":"Link","content":[{"text":"matchers match","type":"SimpleText"}]},{"text":" event by removing \"Matches:\" prefix","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/HTTP/introduction","isFile":false,"type":"Link","content":[{"text":"HTTP","type":"SimpleText"}]},{"text":" invalid JSON request/response handling","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/HTTP/body#json-request","isFile":false,"type":"Link","content":[{"text":"HTTP body json","type":"SimpleText"}]},{"text":" shortcut","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/HTTP/body#raw-response","isFile":false,"type":"Link","content":[{"text":"HTTP body raw response access","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Equal Matcher delegates to expected matcher bypassing one level of nested message","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/matchers/any-of","isFile":false,"type":"Link","content":[{"text":"anyOf matcher","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Improve message for ","type":"SimpleText"},{"code":"expected exception","type":"InlinedCode"},{"text":" message when no exception is thrown","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node#find-all","isFile":false,"type":"Link","content":[{"text":"DataNode.findAll","type":"SimpleText"}]},{"text":" Java implementation","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/HTTP/data-node#find","isFile":false,"type":"Link","content":[{"text":"DataNode.find","type":"SimpleText"}]},{"text":" Java implementation","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Better error message in case of wrong ","type":"SimpleText"},{"code":"webtau","type":"InlinedCode"},{"text":" CLI argument name","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"--version","type":"InlinedCode"},{"text":" param to ","type":"SimpleText"},{"code":"webtau","type":"InlinedCode"},{"text":" CLI","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add Java common header values as exposed properties: ","type":"SimpleText"},{"code":"statusCode","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentType","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"location","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLocation","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLength","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentEncoding","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Deprecate ","type":"SimpleText"},{"code":"HttpHeader.merge","type":"InlinedCode"},{"text":" in favor of ","type":"SimpleText"},{"code":"HttpHeader.with","type":"InlinedCode"}]}]}]}]},{"id":"1-48","title":"1.48","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: trim web report generated by section in case of long version name (e.g. snapshot)","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Java access modifier to ","type":"SimpleText"},{"url":"/webtau/browser/cookies","isFile":false,"type":"Link","content":[{"text":"Cookies","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/browser/local-storage","isFile":false,"type":"Link","content":[{"text":"Local Storage","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add java examples for ","type":"SimpleText"},{"url":"/webtau/HTTP/header#implicit-header","isFile":false,"type":"Link","content":[{"text":"implicit header creation","type":"SimpleText"}]},{"text":" and example ","type":"SimpleText"},{"code":".with","type":"InlinedCode"},{"text":" usage","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add java examples for ","type":"SimpleText"},{"url":"/webtau/HTTP/header#explicit-header","isFile":false,"type":"Link","content":[{"text":"explicit header creation","type":"SimpleText"}]},{"text":" and example ","type":"SimpleText"},{"code":".with","type":"InlinedCode"},{"text":" usage","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add links to individual ","type":"SimpleText"},{"url":"/webtau/configuration/options#browserHeight","isFile":false,"type":"Link","content":[{"text":"Options and Environment Variables","type":"SimpleText"}]},{"text":" and update default values","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"url":"/webtau/matchers/custom-compare-to-handler","isFile":false,"type":"Link","content":[{"text":"custom compare to handler","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"url":"/webtau/matchers/universal-compare#dates","isFile":false,"type":"Link","content":[{"text":"dates universal comparison","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Update documentation and implementation details classes to have consistent WebTau naming","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add additional actual/expected label for first line mismatch message during strings comparison","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"HttpHeader.with","type":"InlinedCode"},{"text":" vararg support to conveniently provide multiple header values in Java","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add documentation screenshot with annotations ","type":"SimpleText"},{"url":"/webtau/browser/documentation-artifacts#screenshot-of-a-specific-element","isFile":false,"type":"Link","content":[{"text":"capture for specific element","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Disable scenarios by ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/skipping-tests#unconditionally-skipping-tests","isFile":false,"type":"Link","content":[{"text":"file name convention","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Selenium 4 upgrade","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Speedup ","type":"SimpleText"},{"url":"/webtau/data/csv#list-of-map","isFile":false,"type":"Link","content":[{"text":"CSV","type":"SimpleText"}]},{"text":" numbers auto conversion","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Contain handler for Map and Map","type":"SimpleText"}]}]}]}]},{"id":"1-47","title":"1.47","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: browser fetch int value fails on newer browsers","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: proper handling of ","type":"SimpleText"},{"code":"element.count","type":"InlinedCode"},{"text":" stale element Selenium exception","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix report code highlight lines when multiline comment is present (e.g. ","type":"SimpleText"},{"code":"/* */","type":"InlinedCode"},{"text":")","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/matchers/universal-compare","isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}]},{"text":" initial doc and placeholder","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add LocalDateTime and LocalDate(expected) comparison","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add scenario level elapsed time to Web Report in addition to suite level elapsed time","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add scenario level elapsed time to Web Report in addition to suite level elapsed time","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add browser ","type":"SimpleText"},{"url":"/webtau/browser/element-actions-reference#drag-and-drop","isFile":false,"type":"Link","content":[{"text":"drag and drop by","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Skip all the tests if ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/test-listeners","isFile":false,"type":"Link","content":[{"text":"before fist test setup","type":"SimpleText"}]},{"text":" has failed","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Brighter test status color in web report light theme","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add human-readable tests performance elapsed time to web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/utilities/file-system#temporary-dirs-and-files","isFile":false,"type":"Link","content":[{"text":"fs.tempFile","type":"SimpleText"}]}]}]}]}]},{"id":"1-46","title":"1.46","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/servers/proxy-server#preserve-original-call","isFile":false,"type":"Link","content":[{"text":"proxy server original call","type":"SimpleText"}]},{"text":" example and tweaks","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/servers/proxy-server","isFile":false,"type":"Link","content":[{"text":"proxy server","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"code":"serverProxyMaxThreads","type":"InlinedCode"},{"text":" config","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report failed code snippet font in light theme","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: examples generation via webtau cli","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report HTTP warning call color in light theme","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report scrollbar color in light theme","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Release Notes","pageTitle":"2022 Releases","pageMeta":{"title":["2022 Releases"]},"dirName":"release-notes","fileName":"2022","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"1.50","id":"1-50"},{"title":"1.49","id":"1-49"},{"title":"1.48","id":"1-48"},{"title":"1.47","id":"1-47"},{"title":"1.46","id":"1-46"}]}},{"type":"Page","content":[{"id":"1-45-1","title":"1.45.1","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report light theme HTTP response match color","type":"SimpleText"}]}]}]}]},{"id":"1-45","title":"1.45","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"url":"/webtau/servers/introduction","isFile":false,"type":"Link","content":[{"text":"Servers","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Wrap deletion of all ","type":"SimpleText"},{"url":"/webtau/utilities/file-system","isFile":false,"type":"Link","content":[{"text":"temp files","type":"SimpleText"}]},{"text":" in a parent step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document report ","type":"SimpleText"},{"url":"/webtau/report/steps","isFile":false,"type":"Link","content":[{"text":"step and trace","type":"SimpleText"}]},{"text":" core methods","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Move report tests status filter to the top and put theme switching to the bottom in its place","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" core method to report values to console and web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Report color theme toggle and auto OS dark/light detection","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Improved code snippet rendering in web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Check element presence before ","type":"SimpleText"},{"url":"/webtau/browser/element-actions-reference#scrolling","isFile":false,"type":"Link","content":[{"text":"scroll","type":"SimpleText"}]},{"text":" to provide better error message","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/utilities/cache#presence-check","isFile":false,"type":"Link","content":[{"text":"cache exists","type":"SimpleText"}]},{"text":" method","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command","isFile":false,"type":"Link","content":[{"text":"CLI run","type":"SimpleText"}]},{"text":" working dir matches config working dir if none specified for the process","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: remove internal info of ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command","isFile":false,"type":"Link","content":[{"text":"CLI run","type":"SimpleText"}]},{"text":" from web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/servers/static-server","isFile":false,"type":"Link","content":[{"text":"static content server","type":"SimpleText"}]},{"text":" capture of browser page request","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: remove call to open api schema end-point at the end of tests if no http calls were performed during tests","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: missing files message to use only path but not container id","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report step with 0ms now shows elapsed time","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/utilities/file-system","isFile":false,"type":"Link","content":[{"text":"waiting","type":"SimpleText"}]},{"text":" for non-existing file content is ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"not","type":"SimpleText"}]},{"text":" throwing error anymore","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: jansi Mac M1 exception","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report key-value color contrast","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report extra scroll bar on overall summary screen","type":"SimpleText"}]}]}]}]},{"id":"1-44-1","title":"1.44.1","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report extra scroll bar on test summary screen","type":"SimpleText"}]}]}]}]},{"id":"1-44","title":"1.44","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: HTTP JSON fullscreen payload alignment and colors","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: proxy server captures request and response now","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: string compare to handler show proper caret position of a change in case of ","type":"SimpleText"},{"code":"not","type":"InlinedCode"},{"text":" equal","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Report summary vertical scroll preserves tab selection at the top","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"code":"cli","type":"InlinedCode"},{"text":" background command ","type":"SimpleText"},{"url":"/webtau/cli/background-command#wait-timeout","isFile":false,"type":"Link","content":[{"text":"wait timeout","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"report steps render step output information","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"url":"/webtau/utilities/cache","isFile":false,"type":"Link","content":[{"text":"cache","type":"SimpleText"}]},{"text":" stored values validation and conversion to Path","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"static server serves from symlink by resolving it first","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"fs.zip","type":"InlinedCode"},{"text":" command to ","type":"SimpleText"},{"url":"/webtau/utilities/file-system#archive","isFile":false,"type":"Link","content":[{"text":"zip files","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" overload with config only parameter","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"Servers","type":"InlinedCode"},{"text":" section to a test data to display requests/responses that internal servers handled","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add \"generated by\" section to test report summary page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Ability to specify report name and optional associated URL","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Improvements on http call details page: proper vertical scroll and layout changes","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Web report card lists style change to make grouping more distinct and combined with title","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Changed web report to use dark theme","type":"SimpleText"}]}]}]}]},{"id":"1-43-1","title":"1.43.1","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/configuration/groovy-config-file","isFile":false,"type":"Link","content":[{"text":"groovy config","type":"SimpleText"}]},{"text":" parsing of empty lists and simple variables reference within config","type":"SimpleText"}]}]}]}]},{"id":"1-43","title":"1.43","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Fix ","type":"SimpleText"},{"url":"/webtau/persona/introduction","isFile":false,"type":"Link","content":[{"text":"Persona Intro","type":"SimpleText"}]},{"text":" example snippets","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"url":"/webtau/configuration/groovy-config-file","isFile":false,"type":"Link","content":[{"text":"Groovy Config","type":"SimpleText"}]},{"text":" complex objects, persona and overrides examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"url":"/webtau/persona/HTTP-persona","isFile":false,"type":"Link","content":[{"text":"Persona HTTP","type":"SimpleText"}]},{"text":" authorization example","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"url":"/webtau/persona/introduction","isFile":false,"type":"Link","content":[{"text":"Persona","type":"SimpleText"}]},{"text":" documentation","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: combined \"files upload\" and \"PDF\" section under ","type":"SimpleText"},{"code":"HTTP/files","type":"InlinedCode"},{"text":". Edited text.","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Parse Groovy config files using new internal DSL instead of GroovyConfig to better support Persona","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add persona specific ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value to set ","type":"SimpleText"},{"url":"/webtau/persona/CLI-persona","isFile":false,"type":"Link","content":[{"text":"persona's common CLI environment variables","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add java.time.Instant and String compareTo handler rule","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value to set common environment variables for ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command#common-environment-variables","isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/cli/background-command#common-environment-variables","isFile":false,"type":"Link","content":[{"text":"cli.runInBackground","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server journal capture request body and response body","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server support for other than ","type":"SimpleText"},{"code":"application/json","type":"InlinedCode"},{"text":" content type responses","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Implemented ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" on static, proxy and fake servers","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Added overrides and slow down to static server","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Ignore ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/selective-run#sscenario","isFile":false,"type":"Link","content":[{"text":"single scenario","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/groovy-standalone-runner/skipping-tests#unconditionally-skipping-tests","isFile":false,"type":"Link","content":[{"text":"disabled scenario","type":"SimpleText"}]},{"type":"SoftLineBreak"},{"text":"in ","type":"SimpleText"},{"url":"/webtau/REPL/test-runs","isFile":false,"type":"Link","content":[{"text":"REPL mode","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add server router fluent syntax","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add server router definition support for :param syntax","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add server journal to track or wait on handled calls","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Handle router overrides in proxy server","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server router - collection of overrides that can be set up and re-used for multiple servers","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server implements autocloseable for ","type":"SimpleText"},{"code":"try-with-resources","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server route parameters based fake setup","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Initial fake server support","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add config info to web report for ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command#working-dir","isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/cli/background-command#working-dir","isFile":false,"type":"Link","content":[{"text":"cli.rinInBackground","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add config info to step output for ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command#working-dir","isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"url":"/webtau/cli/background-command#working-dir","isFile":false,"type":"Link","content":[{"text":"cli.rinInBackground","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command#run-result","isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}]},{"text":" results are properly returned when validation block is present","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: browser screenshot on failure is displayed again in the generated report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command#run","isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}]},{"text":" now captures output in case of timeout","type":"SimpleText"}]}]}]}]},{"id":"1-42","title":"1.42","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"httpProxy via config","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"stop all servers is a separate logged step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"REPL ","type":"SimpleText"},{"code":"beforeAll","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"afterAll","type":"InlinedCode"},{"text":" commands to trigger setup and teardown on demand","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"cli.run","type":"InlinedCode"},{"text":" local ","type":"SimpleText"},{"url":"/webtau/cli/foreground-command#timeout","isFile":false,"type":"Link","content":[{"text":"timeout override","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"step","type":"InlinedCode"},{"text":" accepts ","type":"SimpleText"},{"code":"map","type":"InlinedCode"},{"text":" as params for additional reporting","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"url":"/webtau/utilities/file-system#file-content","isFile":false,"type":"Link","content":[{"text":"replace text content by regexp","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"capture open api warnings in web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"db","type":"InlinedCode"},{"text":" data source creation is a reported step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"web report support for step key-value input","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"add PageElement.all() to disambiguate element.should contain for browser assertions","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"web report section with env vars","type":"SimpleText"}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add browser ","type":"SimpleText"},{"url":"/webtau/browser/element-actions-reference#scrolling","isFile":false,"type":"Link","content":[{"text":"scroll actions","type":"SimpleText"}]}]}]}]},{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"url":"/webtau/cli/introduction","isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}]},{"text":" quoted params handling","type":"SimpleText"}]}]}]}]},{"id":"1-41","title":"1.41","type":"Section","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"No notes","type":"SimpleText"}]}]}]},{"id":"1-40","title":"1.40","type":"Section","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"No notes","type":"SimpleText"}]}]}]},{"id":"1-39","title":"1.39","type":"Section","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"No notes","type":"SimpleText"}]}]}]}],"lastModifiedTime":1692271721162,"tocItem":{"chapterTitle":"Release Notes","pageTitle":"2021 Releases","pageMeta":{"title":["2021 Releases"]},"dirName":"release-notes","fileName":"2021","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"1.45.1","id":"1-45-1"},{"title":"1.45","id":"1-45"},{"title":"1.44.1","id":"1-44-1"},{"title":"1.44","id":"1-44"},{"title":"1.43.1","id":"1-43-1"},{"title":"1.43","id":"1-43"},{"title":"1.42","id":"1-42"},{"title":"1.41","id":"1-41"},{"title":"1.40","id":"1-40"},{"title":"1.39","id":"1-39"}]}}]