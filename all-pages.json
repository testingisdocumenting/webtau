[{"type":"Page","content":[{"type":"Redirect","url":"getting-started/what-is-this"}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"","pageTitle":"WebTau","pageMeta":{},"dirName":"","fileName":"index","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"webtau","type":"Section","title":"WebTau","content":[{"type":"Paragraph","content":[{"text":"WebTau (","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Web","type":"SimpleText"}]},{"text":" ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"T","type":"SimpleText"}]},{"text":"est ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"au","type":"SimpleText"}]},{"text":"tomation) - concise and expressive way to write end-to-end and unit tests.","type":"SimpleText"}]},{"shapes":[],"width":256.0,"imageSrc":"/webtau/webtau-logo.png","type":"AnnotatedImage","align":"left","height":256.0,"timestamp":1653578199530},{"type":"Paragraph","content":[{"text":"Test your application across multiple layers:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"REST API","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"GraphQL API","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Browser","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"CLI","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Database","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Business Logic (JVM only)","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"Use one layer to re-enforce tests on another. E.g. REST API layer to set up data for Browser test, or database layer","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to validate GraphQL API.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use powerful ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"REPL","type":"SimpleText"}],"url":"/webtau/REPL/experiments"},{"text":" mode to significantly speed up end-to-end tests development.","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m $(\"p\")","\u001B[32melement is found: \u001B[35mby css \u001B[1m\u001B[35mp\u001B[0m","\u001B[33m           getText(): \u001B[32mhello web page\u001B[0m"],"title":"trying css selectors"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Persona","type":"SimpleText"}],"url":"/webtau/persona/introduction"},{"text":" concept to test API Authorization and collaboration Web Apps like chats and editors.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Capture test artifacts like API Responses, screenshots, command line output to automate your user facing documentation.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Leverage out of the box ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"rich reporting","type":"SimpleText"}],"url":"/webtau/report/introduction"}]},{"fit":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-separated-http-calls.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578886932},{"type":"Paragraph","content":[{"text":"Tests can be written in any JVM language. Language specific syntactic sugar is available for ","type":"SimpleText"},{"code":"Groovy","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"REST API example","type":"SimpleText"}],"url":"/webtau/getting-started/what-is-this#rest-api-example"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"GraphQL API example","type":"SimpleText"}],"url":"/webtau/getting-started/what-is-this#graphql-api-example"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Browser example","type":"SimpleText"}],"url":"/webtau/getting-started/what-is-this#browser-example"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"DB example","type":"SimpleText"}],"url":"/webtau/getting-started/what-is-this#db-example"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"CLI example","type":"SimpleText"}],"url":"/webtau/getting-started/what-is-this#cli-example"}]}]}]}]},{"id":"rest-api-example","type":"Section","title":"Rest API Example","content":[{"type":"Paragraph","content":[{"text":"WebTau provides a succinct DSL for exercising HTTP end points (e.g. REST APIs) and provides simplified way to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"assert responses.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe < 100\n    }\n}","type":"Snippet","title":"REST API test (Groovy runner)","lang":"groovy"},{"snippet":"package com.example.tests.junit5\n\nimport org.junit.jupiter.api.Test\nimport org.testingisdocumenting.webtau.junit5.WebTau\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau\nclass WeatherGroovyTest {\n    @Test\n    void checkWeather() {\n        http.get(\"/weather\") {\n            temperature.shouldBe < 100\n        }\n    }\n}","type":"Snippet","title":"REST API test (JUnit5)","lang":"groovy"}]},{"content":[{"snippet":"{\n  \"temperature\": 88\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]},{"name":"Java","content":[{"columns":[{"content":[{"snippet":"/*\n * Copyright 2022 webtau maintainers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WeatherJavaTest {\n    @Test\n    public void checkWeather() {\n        http.get(\"/weather\", (header, body) -> {\n            body.get(\"temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","type":"Snippet","title":"REST API test (JUnit5 Java)","lang":"java"}]},{"content":[{"snippet":"{\n  \"temperature\": 88\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]}],"type":"Tabs"}]},{"id":"graphql-api-example","type":"Section","title":"GraphQL API Example","content":[{"type":"Paragraph","content":[{"text":"Similar to HTTP APIs, WebTau also provides the ability to test GraphQL servers with its GraphQL DSL.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    def query = \"{ weather { temperature } }\";\n    graphql.execute(query) {\n        weather.temperature.shouldBe < 100\n    }\n}","type":"Snippet","title":"GraphQL API test (Groovy runner)","lang":"groovy"},{"snippet":"package com.example.tests.junit4\n\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.graphql\n\n@RunWith(WebTauRunner.class)\nclass GraphQLWeatherGroovyIT {\n    @Test\n    void checkWeather() {\n        def query = \"{ weather { temperature } }\";\n        graphql.execute(query) {\n            weather.temperature.shouldBe < 100\n        }\n    }\n}","type":"Snippet","title":"GraphQL API test (JUnit4)","lang":"groovy"}]},{"content":[{"snippet":"{\n \"data\": {\n   \"weather\": {\n     \"temperature\": 88\n   }\n }\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]},{"name":"Java","content":[{"columns":[{"content":[{"snippet":"package com.example.tests.junit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class GraphQLWeatherJavaIT {\n    @Test\n    public void checkWeather() {\n        String query = \"{ weather { temperature } }\";\n        graphql.execute(query, (header, body) -> {\n            body.get(\"data.weather.temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","type":"Snippet","title":"GraphQL API test (JUnit4 Java)","lang":"java"}]},{"content":[{"snippet":"{\n \"data\": {\n   \"weather\": {\n     \"temperature\": 88\n   }\n }\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]}],"type":"Tabs"}]},{"id":"browser-example","type":"Section","title":"Browser Example","content":[{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.waitToBe > 1\n}","type":"Snippet","title":"Browser test (Groovy runner)","lang":"groovy"},{"snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def header = $(\"#header\")\n    def welcomeMessage = $(\"#welcome\")\n    def searchMessage = $(\"#message\")\n    def box = $(\"#search-box\")\n\n    def resultsArea = $(\"#results\")\n    def results = $(\"#results .result\")\n    def numberOfResults = results.count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(browser.keys.enter)\n    }\n}","type":"Snippet","title":"SearchPage.groovy","lang":"groovy"},{"snippet":"package pages\n\nclass Pages {\n    static final def search = new SearchPage()\n}","excludeRegexp":["calculation","form","payments"],"type":"Snippet","title":"Pages.groovy","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static com.example.tests.junit5.pages.Pages.*;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WebSearchJavaTest {\n    @Test\n    public void searchByQuery() {\n        search.submit(\"search this\");\n        search.numberOfResults.waitToBe(greaterThan(1));\n    }\n}","type":"Snippet","title":"Browser test (JUnit 5)","lang":"java"},{"snippet":"package com.example.tests.junit5.pages;\n\nimport org.testingisdocumenting.webtau.browser.page.PageElement;\nimport org.testingisdocumenting.webtau.browser.page.PageElementValue;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class SearchPage {\n    private final PageElement box = $(\"#search-box\");\n    private final PageElement results = $(\"#results .result\");\n    public final PageElementValue<Integer> numberOfResults = results.getCount();\n\n    public void submit(String query) {\n        browser.open(\"/search\");\n\n        box.setValue(query);\n        box.sendKeys(browser.keys.enter);\n    }\n}","type":"Snippet","title":"SearchPage.java","lang":"java"},{"snippet":"package com.example.tests.junit5.pages;\n\npublic class Pages {\n    public static SearchPage search = new SearchPage();\n}","type":"Snippet","title":"Pages.java","lang":"java"}]}],"type":"Tabs"}]},{"id":"db-example","type":"Section","title":"DB Example","content":[{"endLine":"cell.above + 20","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [     \"id\" | \"description\" |          \"available\" |                \"type\" |       \"price\" ] {\n           _____________________________________________________________________________________________\n           cell.guid | \"nice set\"    |                 true |                \"card\" |            1000 // cell.guid generates random guid that can be used for ids\n           cell.guid | \"nice set\"    |                 true |                \"card\" | cell.above + 10 // cell.above refers values above and can be modified with simple math operations\n           cell.guid | \"another set\" | permute(true, false) | permute(\"rts\", \"fps\") | cell.above + 20 } // permute generates additional rows generating new rows with all the permutations","entry":"use table data permute, above and guid to generate rows","bodyOnly":true,"startLine":"def PRICES","commentsType":"inline","type":"Snippet","title":"DB data setup example","lang":"groovy"}]},{"id":"cli-example","type":"Section","title":"CLI Example","content":[{"snippet":"cli.run('echo hello world') {\n    output.should contain('hello')\n    output.should contain('world')\n}","type":"Snippet","title":"output validation","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Getting Started","pageTitle":"What Is This","pageMeta":{},"dirName":"getting-started","fileName":"what-is-this","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"WebTau","id":"webtau"},{"title":"Rest API Example","id":"rest-api-example"},{"title":"GraphQL API Example","id":"graphql-api-example"},{"title":"Browser Example","id":"browser-example"},{"title":"DB Example","id":"db-example"},{"title":"CLI Example","id":"cli-example"}]}},{"type":"Page","content":[{"id":"consistent-api","type":"Section","title":"Consistent API","content":[{"type":"Paragraph","content":[{"text":"There are multiple tools to help you test REST API, GraphQL API, Web UI, Database and CLI.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Some of them are JUnit specific, some of them are UI driven. Some use their own matchers and some try to integrate with","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"a specific matcher interface.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Question: Why did we create another tool?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Tests I write, and the way I write them often require interactions and assertions on multiple layers.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Combining multiple frameworks to achieve the goal ends up with a mix of styles in a single test file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It complicates tests creation and maintenance.","type":"SimpleText"}]}]},{"id":"reporting","type":"Section","title":"Reporting","content":[{"type":"Paragraph","content":[{"text":"WebTau in its core captures test actions and assertions.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Everything you do, every match that is ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"passed","type":"SimpleText"}]},{"text":" or failed is being recorded.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Information is available in console output, so you don't need to sprinkle ","type":"SimpleText"},{"code":"println","type":"InlinedCode"},{"text":" statements everywhere.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And all the captured information is available as self-contained rich HTML report.","type":"SimpleText"}]}]},{"id":"syntax-sugar","type":"Section","title":"Syntax Sugar","content":[{"type":"Paragraph","content":[{"text":"WebTau provides DSL to make common testing operations succinct. Syntax sugar is available for Java and Groovy and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"since WebTau core is Java, additional syntax sugar can be added to languages like Kotlin and Scala.","type":"SimpleText"}]}]},{"id":"repl","type":"Section","title":"REPL","content":[{"type":"Paragraph","content":[{"text":"Writing end-to-end tests is hard and there are a lot of excuses not write one.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"End-to-end test feedback loop is usually long and slow. WebTau provides ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"REPL","type":"SimpleText"}],"url":"/webtau/REPL/experiments"},{"text":" mode to help you","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"experiment with API and write a test in incremental fashion.","type":"SimpleText"}]}]},{"id":"utilities","type":"Section","title":"Utilities","content":[{"type":"Paragraph","content":[{"text":"WebTau provides many utility functions to simplify data organization and setup. ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Data","type":"SimpleText"}],"url":"/webtau/utilities/data"},{"text":" module provides","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"shortcuts to deal with ","type":"SimpleText"},{"code":"CSV","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"JSON","type":"InlinedCode"},{"text":" based data. ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"File System","type":"SimpleText"}],"url":"/webtau/utilities/file-system"},{"text":" module provides shortcuts to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"deal with file system related things.","type":"SimpleText"}]}]},{"id":"documentation-artifacts","type":"Section","title":"Documentation Artifacts","content":[{"type":"Paragraph","content":[{"text":"I believe that big chunks of a documentation of your product should be automatically generated:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Screenshots (with annotations)","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"API request/response examples","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"CLI params and sample output","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"WebTau provides a set of commands to help you capture artifacts of your happy path tests to later be used","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"by a documentation system.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Captured artifacts are agnostic to the documentation system. I personally use ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}],"url":"https://github.com/testingisdocumenting/znai"},{"text":",","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"a markdown based documentation with custom extensions (I am a maintainer of the project).","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Getting Started","pageTitle":"Why","pageMeta":{},"dirName":"getting-started","fileName":"why","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Consistent API","id":"consistent-api"},{"title":"Reporting","id":"reporting"},{"title":"Syntax Sugar","id":"syntax-sugar"},{"title":"REPL","id":"repl"},{"title":"Utilities","id":"utilities"},{"title":"Documentation Artifacts","id":"documentation-artifacts"}]}},{"type":"Page","content":[{"id":"runners","type":"Section","title":"Runners","content":[{"type":"Paragraph","content":[{"text":"To run WebTau tests you have a few options:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Standalone Groovy Runner","type":"SimpleText"}],"url":"/webtau/getting-started/installation#groovy-runner"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}],"url":"/webtau/getting-started/installation#junit5"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"JUnit4","type":"SimpleText"}],"url":"/webtau/getting-started/installation#junit4"}]}]}]}]},{"id":"groovy-runner","type":"Section","title":"Groovy Runner","content":[{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"brew","type":"SimpleText"}],"url":"https://brew.sh"},{"text":" installed in your system use","type":"SimpleText"}]},{"snippet":"brew install testingisdocumenting/brew/webtau\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"sdkman","type":"SimpleText"}],"url":"https://sdkman.io"},{"text":" installed in your system use","type":"SimpleText"}]},{"snippet":"sdk install webtau\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"Alternatively, download and unzip ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}],"url":"https://repo.maven.apache.org/maven2/org/testingisdocumenting/webtau/webtau-dist/1.48/webtau-dist-1.48-webtau.zip"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Add it to your ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau --example"},{"type":"Paragraph","content":[{"text":"Navigate into ","type":"SimpleText"},{"code":"todo","type":"InlinedCode"},{"text":" example","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"cd examples/todo"},{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('fetch todo item') {\n    http.get('/todos/1') {\n        title.should == 'delectus aut autem'\n        completed.should == false\n    }\n}","type":"Snippet","title":"todolist.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To run test","type":"SimpleText"}]},{"paramsToHighlight":["url"],"type":"CliCommand","command":"webtau todolist.groovy --url=https://jsonplaceholder.typicode.com"},{"type":"Paragraph","content":[{"text":"Note: using ","type":"SimpleText"},{"code":"import","type":"InlinedCode"},{"text":" is optional and is mainly for IDE auto completion. Imports are added implicitly","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"during command line run.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To integrate CLI run into maven build use:","type":"SimpleText"}]},{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"WebTau Dependency","lang":"xml"},{"snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>1.48</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <env>integration</env>\n        <url>http://optional-base-url</url>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/simple*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet","title":"WebTau Plugin","lang":"xml"},{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Learn more about Groovy Runner features","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/introduction"}]}]},{"id":"junit5","type":"Section","title":"JUnit5","content":[{"tabsContent":[{"name":"Groovy","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"WebTau Groovy Dependency","lang":"xml"},{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit5</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"JUnit5 Dependency","lang":"xml"},{"snippet":"package com.example.tests.junit5\n\nimport org.junit.jupiter.api.Test\nimport org.testingisdocumenting.webtau.junit5.WebTau\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.* // convenient single import for all things webtau\n\n@WebTau // annotation required for reports generation\nclass JUnit5ExampleGroovyTest {\n    @Test\n    void \"my test\"() {\n    }\n}","commentsType":"inline","type":"Snippet","title":"JUnit 5 example","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"WebTau Java Dependency","lang":"xml"},{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit5</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"JUnit5 Dependency","lang":"xml"},{"snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*; // convenient single import for all things webtau\n\n@WebTau // annotation required for reports generation\npublic class JUnit5ExampleJavaTest {\n    @Test\n    public void myTest() {\n    }\n}","commentsType":"inline","type":"Snippet","title":"JUnit 5 example","lang":"java"}]}],"type":"Tabs"}]},{"id":"junit4","type":"Section","title":"JUnit4","content":[{"tabsContent":[{"name":"Groovy","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"WebTau Groovy Dependency","lang":"xml"},{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit4</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"JUnit4 Dependency","lang":"xml"},{"snippet":"package com.example.tests.junit4\n\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.* // convenient single import for all things webtau\n\n@RunWith(WebTauRunner.class) // webtau runner to generate reports\nclass JUnit4ExampleGroovyTest {\n    @Test\n    void \"my test\"() {\n    }\n}","commentsType":"inline","type":"Snippet","title":"JUnit 4 example","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"WebTau Java Dependency","lang":"xml"},{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit4</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","title":"JUnit4 Dependency","lang":"xml"},{"snippet":"package com.example.tests.junit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*; // convenient single import for all things webtau\n\n@RunWith(WebTauRunner.class) // webtau runner to generate reports\npublic class JUnit4ExampleJavaTest {\n    @Test\n    public void myTest() {\n    }\n}","commentsType":"inline","type":"Snippet","title":"JUnit 4 example","lang":"java"}]}],"type":"Tabs"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Getting Started","pageTitle":"Installation","pageMeta":{},"dirName":"getting-started","fileName":"installation","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Runners","id":"runners"},{"title":"Groovy Runner","id":"groovy-runner"},{"title":"JUnit5","id":"junit5"},{"title":"JUnit4","id":"junit4"}]}},{"type":"Page","content":[{"id":"config-file","type":"Section","title":"Config File","content":[{"type":"Paragraph","content":[{"text":"WebTau let you specify services url, browser settings, DB url connections, etc in a config file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Depending on ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"runner","type":"SimpleText"}],"url":"/webtau/getting-started/installation"},{"text":" you use WebTau will read data from a different place.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"type":"Paragraph","content":[{"text":"When you use the Groovy runner, it will look for ","type":"SimpleText"},{"code":"webtau.cfg.groovy","type":"InlinedCode"},{"text":" file (default).","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8080\"","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy","includeRegexp":"localhost"},{"type":"Paragraph","content":[{"text":"Note: WebTau treats groovy config file as code","type":"SimpleText"}]}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"When you use JUnit like runners, e.g. ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"JUnit5","type":"SimpleText"}],"url":"/webtau/getting-started/installation#junit5"},{"text":", WebTau expects file named","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"webtau.properties","type":"InlinedCode"},{"text":" to be present in test classpath, e.g. test resources:","type":"SimpleText"}]},{"snippet":"url = http://localhost:8080","type":"Snippet","title":"src/test/resources/webtau.properties","lang":"properties","includeRegexp":"localhost"}]}],"type":"Tabs"}]},{"id":"environments","type":"Section","title":"Environments","content":[{"type":"Paragraph","content":[{"text":"WebTau supports environment specific config values, and a way to select which environment to set active during tests run.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"url = \"http://localhost:8080\"\n\nenvironments {\n    qa {\n        url = \"http://server.qa:8080\"\n    }\n}","excludeRegexp":"package","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To select an active environment using ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Groovy Standalone Runner","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/introduction"},{"text":" you","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"can pass ","type":"SimpleText"},{"code":"env","type":"InlinedCode"},{"text":" as cli parameter","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau --env=qa"},{"type":"Paragraph","content":[{"text":"Additionally you can use environment varialbe to set an active environment: ","type":"SimpleText"},{"code":"WEBTAU_ENV=qa","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"name":"Java","content":[{"snippet":"url = http://localhost:8080\nenvironments.qa.url = http://server.qa:8080","type":"Snippet","title":"src/test/resources/webtau.properties","lang":"properties"},{"type":"Paragraph","content":[{"text":"To select an active environment you have two options:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"System property ","type":"SimpleText"},{"code":"-Denv=qa","type":"InlinedCode"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Environment variable ","type":"SimpleText"},{"code":"WEBTAU_ENV=qa","type":"InlinedCode"}]}]}]}]}],"type":"Tabs"}]},{"id":"overrides","type":"Section","title":"Overrides","content":[{"type":"Paragraph","content":[{"text":"WebTau has a list of options you can specify using config file: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"url, browserId, etc.","type":"SimpleText"}],"url":"/webtau/configuration/options"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You can override any value using ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"environment variables","type":"SimpleText"}],"url":"/webtau/configuration/options#environment-variable-options"},{"text":":","type":"SimpleText"}]},{"snippet":"export WEBTAU_URL=http://another-server\nexport WEBTAU_CHROME_DRIVER_PATH=/path/to/chrome/driver\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"In addition to environment variables, you can use a runner specific way to override:","type":"SimpleText"}]},{"level":2,"id":"overrides-groovy-standalone-runner","type":"SubHeading","title":"Groovy Standalone Runner"},{"type":"Paragraph","content":[{"text":"In case of Groovy standalone runner, pass ","type":"SimpleText"},{"code":"--<option>=<value>","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau --waitTimeout=25000 --url=http://another-server"},{"level":2,"id":"overrides-junit-like-runners","type":"SubHeading","title":"JUnit Like Runners"},{"type":"Paragraph","content":[{"text":"Pass system property via java ","type":"SimpleText"},{"code":"-D","type":"InlinedCode"},{"text":" option:","type":"SimpleText"}]},{"snippet":"-Durl=http://another-server\n","type":"Snippet","lineNumber":"","lang":""}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Getting Started","pageTitle":"Configuration","pageMeta":{},"dirName":"getting-started","fileName":"configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Config File","id":"config-file"},{"title":"Environments","id":"environments"},{"title":"Overrides","id":"overrides"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" module lets you exercise and validate HTTP endpoints.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It provides a simplified way to access JSON response of an end-point and simplifies REST API tests.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe < 100\n    }\n}","type":"Snippet","title":"REST API test (Groovy specific runner)","lang":"groovy"},{"snippet":"package com.example.tests.junit5\n\nimport org.junit.jupiter.api.Test\nimport org.testingisdocumenting.webtau.junit5.WebTau\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau\nclass WeatherGroovyTest {\n    @Test\n    void checkWeather() {\n        http.get(\"/weather\") {\n            temperature.shouldBe < 100\n        }\n    }\n}","type":"Snippet","title":"REST API test (JUnit5)","lang":"groovy"}]},{"content":[{"snippet":"{\n  \"temperature\": 88\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]},{"name":"Java","content":[{"columns":[{"content":[{"snippet":"/*\n * Copyright 2022 webtau maintainers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WeatherJavaTest {\n    @Test\n    public void checkWeather() {\n        http.get(\"/weather\", (header, body) -> {\n            body.get(\"temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","type":"Snippet","title":"REST API test (JUnit5 Java)","lang":"java"}]},{"content":[{"snippet":"{\n  \"temperature\": 88\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]}],"type":"Tabs"}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Introduction","pageMeta":{},"dirName":"HTTP","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"example","type":"Section","title":"Example","content":[{"type":"Paragraph","content":[{"text":"We have an app that exposes ","type":"SimpleText"},{"code":"create","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"read","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"update","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"delete","type":"InlinedCode"},{"text":" operations for customer records. Records are being served","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"under ","type":"SimpleText"},{"code":"/customers","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is an example of a ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operations test.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"CRUD operations for customer\") {\n    def customerPayload = [firstName: \"FN\", lastName: \"LN\"] // new customer data\n\n    def id = http.post(\"/customers\", customerPayload) {\n        return id // return id value from response body\n    }\n\n    http.get(\"/customers/${id}\") {\n        body.should == customerPayload // only specified properties will be asserted against\n    }\n\n    def changedLastName = \"NLN\"\n    http.put(\"/customers/${id}\", [*:customerPayload, lastName: changedLastName]) {\n        lastName.should == changedLastName // specifying body is optional\n    }\n\n    http.get(\"/customers/${id}\") {\n        firstName.should == \"FN\"\n        lastName.should == changedLastName\n    }\n\n    def changedFirstName = \"NFN\"\n    http.patch(\"/customers/${id}\", [firstName: changedFirstName])\n\n    http.get(\"/customers/${id}\") {\n        firstName.should == changedFirstName\n        lastName.should == changedLastName\n    }\n\n    http.delete(\"/customers/${id}\") {\n        statusCode.should == 204\n    }\n\n    http.get(\"/customers/${id}\") {\n        statusCode.should == 404\n    }\n}","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit5;\n\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Map;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class CustomerCrudJavaTest {\n    @Test\n    public void crud() {\n        Map<String, ?> customerPayload = aMapOf( // new customer data\n                \"firstName\", \"FN\",\n                \"lastName\", \"LN\" );\n\n        int id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\"); // return id value from response body\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload)); // only specified properties will be asserted against\n        }));\n\n        String changedLastName = \"NLN\";\n        Map<String, ?> changedCustomerPayload = aMapOf(\n                \"firstName\", \"FN\",\n                \"lastName\", changedLastName);\n\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.get(\"firstName\").should(equal(\"FN\"));\n            body.get(\"lastName\").should(equal(changedLastName));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(404));\n        }));\n    }\n}","commentsType":"inline","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"implicit-statuscode-check","type":"Section","title":"Implicit statusCode Check","content":[{"type":"Paragraph","content":[{"text":"If you don't have an explicit ","type":"SimpleText"},{"code":"statusCode","type":"InlinedCode"},{"text":" validation it will be automatically validated based on the rules below","type":"SimpleText"}]},{"type":"Table","table":{"data":[[[{"text":"GET","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"POST","type":"SimpleText"}],[{"text":"201","type":"SimpleText"}]],[[{"text":"PUT","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"PUT (no content)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]],[[{"text":"DELETE","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"DELETE (no content)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]],[[{"text":"PATCH","type":"SimpleText"}],[{"text":"200","type":"SimpleText"}]],[[{"text":"PATCH (no content)","type":"SimpleText"}],[{"text":"204","type":"SimpleText"}]]],"columns":[{"align":"left","title":"Method"},{"align":"left","title":"Expected Code"}]}}]},{"id":"report","type":"Section","title":"Report","content":[{"type":"Paragraph","content":[{"text":"After your test executions a report will be produced.","type":"SimpleText"}]},{"fit":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-http-calls.png","annotate":false,"type":"AnnotatedImage","height":802.0,"timestamp":1653578884668},{"type":"Paragraph","content":[{"text":"Note: asserted values are being tracked and highlighted inside the report","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"CRUD","pageMeta":{},"dirName":"HTTP","fileName":"CRUD","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Example","id":"example"},{"title":"Implicit statusCode Check","id":"implicit-statuscode-check"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"id":"lazy-resource","type":"Section","title":"Lazy Resource","content":[{"tabsContent":[{"name":"Groovy","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of separating one CRUD ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":" into multiple is to be able to run one test at a time.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In order to make each test runnable independently we will use ","type":"SimpleText"},{"code":"createLazyResource","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef customerPayload = [firstName: \"FN\", lastName: \"LN\"]\n\ndef customer = createLazyResource(\"customer\") { // lazy resource to be created on the first access\n    def id = http.post(\"/customers\", customerPayload) {\n        return id\n    }\n\n    return new Customer(id: id, url: \"/customers/${id}\") // definition is below\n}\n\nscenario(\"customer create\") {\n    customer.id.should != null // accessing resource for the first time will trigger POST (in this example)\n}\n\nscenario(\"customer read\") {\n    http.get(customer.url) { // convenient re-use of url defined above\n        body.should == customerPayload\n    }\n}\n\nscenario(\"customer update\") {\n    def changedLastName = \"NLN\"\n    http.put(customer.url, [*:customerPayload, lastName: changedLastName]) {\n        lastName.should == changedLastName\n    }\n\n    http.get(customer.url) {\n        lastName.should == changedLastName\n    }\n}\n\nscenario(\"customer delete\") {\n    http.delete(customer.url) {\n        statusCode.should == 204\n    }\n\n    http.get(customer.url) {\n        statusCode.should == 404\n    }\n}","commentsType":"inline","type":"Snippet","title":"CRUD separated","lang":"groovy"},{"snippet":"package scenarios.rest.springboot\n\nclass Customer {\n    Number id\n    String url // store url of the created entity\n}","commentsType":"inline","type":"Snippet","title":"Customer lazy resource","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: to run one scenario at a time use ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" (additional ","type":"SimpleText"},{"code":"s","type":"InlinedCode"},{"text":" in front). ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Read more","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/selective-run"}]}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of separating one CRUD ","type":"SimpleText"},{"code":"@Test","type":"InlinedCode"},{"text":" into multiple is to be able to run one test at a time.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In order to make each test runnable independently we will leverage ","type":"SimpleText"},{"code":"BeforeAll","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"AfterAll","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"TestMethodOrder","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"package com.example.tests.junit5;\n\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport org.junit.jupiter.api.*;\n\nimport java.util.Map;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class) // forcing methods execution order\n@DisplayName(\"customer CRUD\")\npublic class CustomerCrudSeparatedJavaTest {\n    private static final Map<String, ?> customerPayload = aMapOf(\n            \"firstName\", \"FN\",\n            \"lastName\", \"LN\" );\n\n    private static final Map<String, ?> changedCustomerPayload = aMapOf(\n            customerPayload,\n            \"lastName\", \"NLN\");\n\n    private static int id;\n\n    @BeforeAll\n    @DisplayName(\"create customer\") // optional friendly name for reporting purposes\n    static void createCustomer() {\n        id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n\n        actual(id).shouldNot(equal(0));\n    }\n\n    @Test\n    @Order(1)\n    @DisplayName(\"read customer\")\n    void read() {\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n    }\n\n    @Test\n    @Order(2) // order dependence saves from creating customer on every test\n    @DisplayName(\"update customer\")\n    void update() {\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n    }\n\n    @Test\n    @Order(3) // but you can still run each method independently\n    @DisplayName(\"delete customer\")\n    void delete() {\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(404));\n        }));\n\n        id = -1; // marking as deleted to let cleanup step know that no delete is required\n    }\n\n    @AfterAll\n    static void cleanup() { // optional (since we create new ids all the time) step to keep your environment clean\n        if (id == -1) {\n            return;\n        }\n\n        http.delete(\"/customers/\" + id);\n    }\n}","commentsType":"inline","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"report","type":"Section","title":"Report","content":[{"type":"Paragraph","content":[{"text":"As you can see in the report below, each ","type":"SimpleText"},{"code":"CRUD","type":"InlinedCode"},{"text":" operation has its own entry. If you follow this pattern, then you","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"can filter tests by ","type":"SimpleText"},{"code":"create","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"update","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"read","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"delete","type":"InlinedCode"},{"text":" to streamline investigation.","type":"SimpleText"}]},{"fit":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-separated-http-calls.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578886932}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"CRUD Separated","pageMeta":{},"dirName":"HTTP","fileName":"CRUD-separated","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Lazy Resource","id":"lazy-resource"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"id":"special-values","type":"Section","title":"Special Values","content":[{"snippet":"http.get(\"/end-point\") {\n    price.should == 100\n    assert price instanceof DataNode\n}","entry":"use groovy closure as validation","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Values that you access inside validation block are special values of ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" type. When you assert them using ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" statement","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"they act as proxies that record every assertion that you do.","type":"SimpleText"}]}]},{"id":"extracting-values","type":"Section","title":"Extracting Values","content":[{"type":"Paragraph","content":[{"text":"As you have seen in ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"CRUD example","type":"SimpleText"}],"url":"/webtau/HTTP/CRUD"},{"text":" you can return values back from a validation block.","type":"SimpleText"}]},{"snippet":"def id = http.get(\"/end-point\") {\n    return id\n}\n\nassert id == 10\nassert id.getClass() == Integer","entry":"can return simple value from get","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"When you return a value from a validation block, it automatically gets converted to its correspondent primitive.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: asserting that value after returning will not track and associated assertions with the call anymore. Use it only","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to get values required for consequent test calls.","type":"SimpleText"}]}]},{"id":"properties-on-lists","type":"Section","title":"Properties On Lists","content":[{"data":{"amount":30,"price":100,"complexList":[{"k1":"v1","k2":30,"id":"id1"},{"k1":"v11","k2":40,"id":"id2"}],"id":10,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"}},"paths":[],"type":"Json"},{"type":"Paragraph","content":[{"text":"If you have a list of objects like ","type":"SimpleText"},{"code":"complexList","type":"InlinedCode"},{"text":" above, you can access all its children property value with ","type":"SimpleText"},{"code":"complexList.k2","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"http.get(\"/end-point\") {\n    complexList.k2.should == [30, 40]\n}","entry":"children key shortcut","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"id":"path-based-properties-access","type":"Section","title":"Path based properties access","content":[{"type":"Paragraph","content":[{"text":"Primarily for Java users, WebTau supports the ability to query properties of a ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" via a path instead of chaining","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"get(String name)","type":"InlinedCode"},{"text":" calls.  For example, to obtain a simple property:","type":"SimpleText"}]},{"snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"object.k1\").should(equal(\"v1\"));\n});","entry":"canQueryNodeByPath","bodyOnly":true,"type":"Snippet","lang":"java"},{"type":"Paragraph","content":[{"text":"It is also possible to query arrays, including the ability to query for the Nth element from the end:","type":"SimpleText"}]},{"snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList[0].k1\").should(equal(\"v1\"));\n    body.get(\"complexList[-1].k1\").should(equal(\"v11\"));\n});","entry":"canQuerySpecificListElementByPath","bodyOnly":true,"type":"Snippet","lang":"java"},{"type":"Paragraph","content":[{"text":"Similarly to the Groovy example in ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Properties On Lists","type":"SimpleText"}],"url":"/webtau/HTTP/data-node#properties-on-lists"},{"text":", it is possible to access","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"all children property values:","type":"SimpleText"}]},{"snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList.k1\").should(equal(Arrays.asList(\"v1\", \"v11\")));\n});","entry":"canQueryListByNodePath","bodyOnly":true,"type":"Snippet","lang":"java"}]},{"id":"if-else-logic","type":"Section","title":"If-Else Logic","content":[{"type":"Paragraph","content":[{"text":"Even though values that you access inside validation block are special values of ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"},{"text":" type, you can still","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"perform simple ","type":"SimpleText"},{"code":"if-else","type":"InlinedCode"},{"text":" like logic checks on them. Accessing the values will mark them as \"touched\" for data coverage statistic.","type":"SimpleText"}]},{"snippet":"def zipCode = http.get(\"/address\") {\n    return addressType == \"complex\" ? address.zipCode : \"NA\"\n}\n\nzipCode.should == \"12345\"","entry":"if-else logic","bodyOnly":true,"type":"Snippet","title":"simple if-else logic","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Warning: Comparison of complex values is not properly implemented due to current Groovy API implementation details","type":"SimpleText"}]}]},{"id":"each","type":"Section","title":"Each","content":[{"type":"Paragraph","content":[{"text":"Special values inside assertion block have convenient methods","type":"SimpleText"}]},{"type":"Paragraph","content":[{"code":"each","type":"InlinedCode"},{"text":" to iterate over a list","type":"SimpleText"}]},{"snippet":"http.get(\"/end-point\") {\n    list.each { it.shouldBe > 0 }\n}","entry":"each on simple list","bodyOnly":true,"type":"Snippet","title":"List of simple values","lang":"groovy"},{"snippet":"http.get(\"/end-point\") {\n    complexList.each { k2.shouldBe > 0 }\n}","entry":"each on complex list","bodyOnly":true,"type":"Snippet","title":"List of complex values","lang":"groovy"}]},{"id":"find","type":"Section","title":"Find","content":[{"type":"Paragraph","content":[{"code":"find","type":"InlinedCode"},{"text":" to find a single value","type":"SimpleText"}]},{"snippet":"def found = http.get(\"/end-point\") {\n    return list.find { it > 1 }\n}\n\nassert found == 2\nassert found.getClass() == Integer","entry":"find on list","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"and ","type":"SimpleText"},{"code":"findAll","type":"InlinedCode"},{"text":" to find all the values matching predicate","type":"SimpleText"}]},{"snippet":"def found = http.get(\"/end-point\") {\n    return list.findAll { it > 1 }\n}\n\nassert found == [2, 3]\nassert found[0].getClass() == Integer","entry":"findAll on list","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: While values inside a predicate are normal values, the result of ","type":"SimpleText"},{"code":"find","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"findAll","type":"InlinedCode"},{"text":" is still ","type":"SimpleText"},{"code":"DataNode","type":"InlinedCode"}]},{"snippet":"def id = http.get(\"/end-point\") {\n    def found = complexList.find {\n        assert k1.getClass() == String\n        k1 == 'v1'\n    }\n    assert found.getClass() == GroovyDataNode\n\n    return found.id\n}\n\nassert id.getClass() == String","entry":"find on list of objects","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"id":"collect","type":"Section","title":"Collect","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"collect","type":"InlinedCode"},{"text":" to transform a collection of items","type":"SimpleText"}]},{"snippet":"def transformed = http.get(\"/end-point\") {\n    return list.collect { \"world#${it}\" }\n}\n\nassert transformed == ['world#1', 'world#2', 'world#3']\nassert transformed[0] instanceof GString","entry":"transform list","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"id":"combine","type":"Section","title":"Combine","content":[{"type":"Paragraph","content":[{"text":"Methods ","type":"SimpleText"},{"code":"find","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"collect","type":"InlinedCode"},{"text":" can be chained","type":"SimpleText"}]},{"snippet":"def sum = http.get(\"/end-point\") {\n    return complexList\n            .findAll { k1.startsWith('v1') }\n            .collect { k2 }\n            .sum()\n}\n\nassert sum == 70","entry":"findAll, collect, and sum","bodyOnly":true,"type":"Snippet","lang":"groovy"}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Data Node","pageMeta":{},"dirName":"HTTP","fileName":"data-node","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Special Values","id":"special-values"},{"title":"Extracting Values","id":"extracting-values"},{"title":"Properties On Lists","id":"properties-on-lists"},{"title":"Path based properties access","id":"path-based-properties-access"},{"title":"If-Else Logic","id":"if-else-logic"},{"title":"Each","id":"each"},{"title":"Find","id":"find"},{"title":"Collect","id":"collect"},{"title":"Combine","id":"combine"}]}},{"type":"Page","content":[{"id":"standard-header","type":"Section","title":"Standard Header","content":[{"type":"Paragraph","content":[{"text":"Standard headers like ","type":"SimpleText"},{"code":"Content-Type","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"Accept","type":"InlinedCode"},{"text":" are set on your behalf.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"When payload content is present then values are based on the content type you are sending.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"When no payload is present, it defaults to ","type":"SimpleText"},{"code":"application/json","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"id":"implicit-header","type":"Section","title":"Implicit Header","content":[{"type":"Paragraph","content":[{"text":"Webtau has a way to provide headers for each call implicitly.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Use it to provide things like authentication, version, etc. header values.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Implicit headers goal is to reduce expose to implementation details and make tests more robust.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package scenarios.rest.headers\n\nimport scenarios.rest.headers.auth.Auth\n\nurl = \"http://localhost:8080\"\n\nhttpHeaderProvider = Auth.&authHeader","highlight":[6],"type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Auth.&authHeader","type":"InlinedCode"},{"text":" is implemented as follows:","type":"SimpleText"}]},{"snippet":"package scenarios.rest.headers.auth\n\nimport org.testingisdocumenting.webtau.http.HttpHeader\n\nclass Auth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        def token = generateToken()\n        return original.merge([Authorization: \"Bearer $token\"])\n    }\n\n    private static String generateToken() {\n        return \"jwt-token\"\n    }\n}","type":"Snippet","title":"scenarios/rest/headers/auth/Auth.groovy","lang":"groovy"}]},{"name":"Java","content":[{"type":"Paragraph","content":[{"text":"In case of JUnit like runners, webtau uses ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Service Loaders","type":"SimpleText"}],"url":"https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html"},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to locate header providers","type":"SimpleText"}]},{"snippet":"com.example.tests.junit5.config.HttpAuthHeaderProvider","type":"Snippet","title":"src/test/resources/META-INF/services/org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration","autoTitle":true,"lang":"WebTauHttpConfiguration"},{"snippet":"package com.example.tests.junit5.config;\n\nimport org.testingisdocumenting.webtau.http.HttpHeader;\nimport org.testingisdocumenting.webtau.http.config.WebTauHttpConfiguration;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class HttpAuthHeaderProvider implements WebTauHttpConfiguration {\n    @Override\n    public HttpHeader fullHeader(String fullUrl, String passedUrl, HttpHeader given) {\n        String token = generateToken();\n        return given.with(\"Authorization\", \"Bearer \" + token);\n    }\n\n    private String generateToken() {\n        return \"jwt-token\";\n    }\n}","type":"Snippet","title":"src/test/java/com/example/tests/junit5/config/HttpAuthHeaderProvider.java","autoTitle":true,"lang":"java"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: Read ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Persona Auth","type":"SimpleText"}],"url":"/webtau/persona/HTTP-persona"},{"text":" to learn about ways to streamline authentication","type":"SimpleText"}]}]},{"id":"explicit-header","type":"Section","title":"Explicit Header","content":[{"type":"Paragraph","content":[{"text":"To explicitly set header pass ","type":"SimpleText"},{"code":"http.header(values)","type":"InlinedCode"},{"text":" as an additional parameter.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\")) {\n    // assertions go here\n}\n\nhttp.get(\"/end-point\", [queryParam1: \"queryParamValue1\"],\n        http.header(\"Accept\", \"application/octet-stream\")) {\n    // assertions go here\n}\n\nhttp.patch(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        [fileId: \"myFile\"]) {\n    // assertions go here\n}\n\nhttp.post(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        [fileId: \"myFile\"]) {\n    // assertions go here\n}\n\nhttp.put(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        [fileId: \"myFile\", file: sampleFile]) {\n    // assertions go here\n}\n\nhttp.delete(\"/end-point\", http.header(\"Custom-Header\", \"special-value\"))","entry":"explicit header passing example","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.get(\"/end-point\", http.query(\"queryParam1\", \"queryParamValue1\"),\n    http.header(\"Accept\", \"application/octet-stream\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.patch(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        aMapOf(\"fileId\", \"myFile\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.post(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        aMapOf(\"fileId\", \"myFile\"), (header, body) -> {\n    // assertions go here\n});\n\nhttp.put(\"/end-point\", http.header(\"Accept\", \"application/octet-stream\"),\n        aMapOf(\"fileId\", \"myFile\", \"file\", sampleFile), (header, body) -> {\n    // assertions go here\n});\n\nhttp.delete(\"/end-point\", http.header(\"Custom-Header\", \"special-value\"));","entry":"explicitHeaderPassingExample","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Additionally ","type":"SimpleText"},{"code":"http.header","type":"InlinedCode"},{"text":" accepts values as a map.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def varArgHeader = http.header(\n        \"My-Header1\", \"Value1\",\n        \"My-Header2\", \"Value2\")\n\ndef mapBasedHeader = http.header([\n        \"My-Header1\": \"Value1\",\n        \"My-Header2\": \"Value2\"])","excludeRegexp":"doc-exclude","entry":"header creation","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"HttpHeader varArgHeader = http.header(\n        \"My-Header1\", \"Value1\",\n        \"My-Header2\", \"Value2\");\n\nMap<CharSequence, CharSequence> headerValues = new HashMap<>();\nheaderValues.put(\"My-Header1\", \"Value1\");\nheaderValues.put(\"My-Header2\", \"Value2\");\nHttpHeader mapBasedHeader = http.header(headerValues);","excludeRegexp":"doc-exclude","entry":"headerCreation","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".with","type":"InlinedCode"},{"text":" to create a new instance of a header based on the existing one plus additional values","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def newHeaderVarArg = header.with(\n        \"Additional-1\", \"AdditionalValue1\",\n        \"Additional-2\", \"AdditionalValue2\")\n\ndef newHeaderMap = header.with([\n        \"Additional-1\": \"AdditionalValue1\",\n        \"Additional-2\": \"AdditionalValue2\"])","entry":"header with","bodyOnly":true,"surroundedBy":"// example","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"HttpHeader newHeaderVarArg = header.with(\n        \"Additional-1\", \"AdditionalValue1\",\n        \"Additional-2\", \"AdditionalValue2\");\n\nMap<CharSequence, CharSequence> additionalValues = new HashMap<>();\nadditionalValues.put(\"Additional-1\", \"AdditionalValue1\");\nadditionalValues.put(\"Additional-2\", \"AdditionalValue2\");\nHttpHeader newHeaderMap = header.with(additionalValues);","entry":"headerWith","bodyOnly":true,"surroundedBy":"// example","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"mime-type-combined-with-payload","type":"Section","title":"Mime Type Combined With Payload","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.body","type":"InlinedCode"},{"text":" to combine ","type":"SimpleText"},{"code":"Content-Type","type":"InlinedCode"},{"text":" and payload.","type":"SimpleText"}]},{"snippet":"def content = binaryFile('path')\nhttp.post(\"/end-point\", http.body(\"application/octet-stream\", content)) {\n    // assertions go here\n}","entry":"explicit binary mime types combined with request body","bodyOnly":true,"type":"Snippet","title":"Combined type and payload","lang":"groovy"},{"type":"Paragraph","content":[{"text":"If you need a standard type consider using","type":"SimpleText"}]},{"snippet":"def content = binaryFile('path')\nhttp.post(\"/end-point\", http.application.octetStream(content)) {\n    // assertions go here\n}","entry":"post implicit binary mime types combined with request body","bodyOnly":true,"type":"Snippet","title":"Binary content shortuct","lang":"groovy"},{"snippet":"def content = 'text content'\nhttp.post(\"/end-point\", http.text.plain(content)) {\n    // assertions go here\n}","entry":"implicit text mime types combined with request body","bodyOnly":true,"type":"Snippet","title":"Text content shortcut","lang":"groovy"}]},{"id":"response-header","type":"Section","title":"Response Header","content":[{"type":"Paragraph","content":[{"text":"To validate values from response header use ","type":"SimpleText"},{"code":"header","type":"InlinedCode"},{"text":" object.","type":"SimpleText"}]},{"snippet":"http.post(\"/end-point\") {\n    header.location.should == 'http://www.example.org/url/23'\n    header['Location'].should == 'http://www.example.org/url/23'\n\n    header.contentLocation.should == '/url/23'\n    header['Content-Location'].should == '/url/23'\n\n    header.contentLength.shouldBe > 300\n    header['Content-Length'].shouldBe > 300\n}","entry":"header assertion with shortcut","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"At the moment only ","type":"SimpleText"},{"code":"location","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLocation","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"contentLength","type":"InlinedCode"},{"text":" have camelCase shortcuts.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"All the other header values you need to use ","type":"SimpleText"},{"code":"['Header-Name']","type":"InlinedCode"},{"text":" syntax.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Headers","pageMeta":{},"dirName":"HTTP","fileName":"headers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Standard Header","id":"standard-header"},{"title":"Implicit Header","id":"implicit-header"},{"title":"Explicit Header","id":"explicit-header"},{"title":"Mime Type Combined With Payload","id":"mime-type-combined-with-payload"},{"title":"Response Header","id":"response-header"}]}},{"type":"Page","content":[{"id":"passing-query-parameters","type":"Section","title":"Passing Query Parameters","content":[{"type":"Paragraph","content":[{"text":"WebTau offers a number of ways of specifying query parameters:","type":"SimpleText"}]},{"snippet":"http.get(\"params?a=1&b=text\") {\n    // assertions go here\n}","entry":"query params in url example","bodyOnly":true,"type":"Snippet","title":"embedding query params directly in url","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"Map","type":"InlinedCode"},{"text":" as a second parameter to pass query parameters. Suitable for languages that support in-line creation of ","type":"SimpleText"},{"code":"Map","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"http.get(\"params\", [a: 1, b: 'text']) {\n    // assertions go here\n}","entry":"query params using query as map example","bodyOnly":true,"type":"Snippet","title":"pass query parameters as Map","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Only ","type":"SimpleText"},{"code":"http.get","type":"InlinedCode"},{"text":" has a ","type":"SimpleText"},{"code":"Map","type":"InlinedCode"},{"text":" variant, for ","type":"SimpleText"},{"code":"http.put","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"http.post","type":"InlinedCode"},{"text":", etc you must use ","type":"SimpleText"},{"code":"http.query","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"http.get(\"params\", http.query([a: 1, b: 'text']), http.header(['x-param': 'value'])) {\n    // assertions go here\n}","entry":"query params using query method example","bodyOnly":true,"type":"Snippet","title":"pass query parameters using http.query","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Additionally ","type":"SimpleText"},{"code":"http.query","type":"InlinedCode"},{"text":" has a vararg variant which is more convenient for ","type":"SimpleText"},{"code":"Java","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"http.get(\"params\", http.query('a', '1', 'b', 'text')) {\n    // assertions go here\n}","entry":"query params using query method and comma example","bodyOnly":true,"type":"Snippet","title":"http.query vararg variant","lang":"groovy"}]},{"id":"parameters-encoding","type":"Section","title":"Parameters Encoding","content":[{"type":"Paragraph","content":[{"text":"All query parameters are encoded automatically.","type":"SimpleText"}]},{"endLine":"query params encoding snippet end","snippet":"http.get(\"params\", http.query([message: 'hello world !'])) {\n    // assertions go here\n}","entry":"query params encoding","excludeStartEnd":true,"startLine":"query params encoding snippet start","type":"Snippet","title":"query parameter with url forbidden characters","lang":"groovy"},{"snippet":"params?message=hello+world+%21","type":"Snippet","title":"automatic encoding","lang":"txt"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Query Parameters","pageMeta":{},"dirName":"HTTP","fileName":"query-parameters","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Passing Query Parameters","id":"passing-query-parameters"},{"title":"Parameters Encoding","id":"parameters-encoding"}]}},{"type":"Page","content":[{"id":"get","type":"Section","title":"GET","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.ping","type":"InlinedCode"},{"text":" to have a simplified way to check if ","type":"SimpleText"},{"code":"url","type":"InlinedCode"},{"text":" is responding with ","type":"SimpleText"},{"code":"200","type":"InlinedCode"},{"text":" on ","type":"SimpleText"},{"code":"GET","type":"InlinedCode"},{"text":" request.","type":"SimpleText"}]},{"snippet":"if (!http.ping(\"/weather\")) {\n    http.post(\"/cluster-master\", [restart: \"weather\"])\n}","type":"Snippet","title":"Ping response to make reboot action","lang":"groovy"},{"snippet":"http.ping(\"/weather\")\nhttp.ping(\"/weather\", [\"query-param\": \"value\"])\nhttp.ping(\"/weather\", [\"query-param\": \"value\"], http.header([\"X-flag\": \"test\"]))","type":"Snippet","title":"Ping with query params and header","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Ping","pageMeta":{},"dirName":"HTTP","fileName":"ping","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"GET","id":"get"}]}},{"type":"Page","content":[{"id":"setting-proxy","type":"Section","title":"Setting Proxy","content":[{"snippet":"httpProxy = 'my_proxy_server_to_use.com:3873'","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Proxy","pageMeta":{},"dirName":"HTTP","fileName":"proxy","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Setting Proxy","id":"setting-proxy"}]}},{"type":"Page","content":[{"id":"upload-file","type":"Section","title":"Upload File","content":[{"type":"Paragraph","content":[{"text":"Consider example where backend expects a file as ","type":"SimpleText"},{"code":"multipart/form-data","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Field ","type":"SimpleText"},{"code":"file","type":"InlinedCode"},{"text":" defines content.","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"Backend responds with file name and file description it received.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To ","type":"SimpleText"},{"code":"POST","type":"InlinedCode"},{"text":" form data, use the ","type":"SimpleText"},{"code":"http.post","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Pass ","type":"SimpleText"},{"code":"http.formData","type":"InlinedCode"},{"text":" as second parameter. In previous examples, second parameter was ","type":"SimpleText"},{"code":"JSON","type":"InlinedCode"},{"text":" payload.","type":"SimpleText"}]},{"snippet":"def imagePath = testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: imagePath)) {\n    fileName.should == 'image.png'\n}","entry":"file upload example simple","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formFile","type":"InlinedCode"},{"text":" to override file name.","type":"SimpleText"}]},{"snippet":"def imagePath = testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: http.formFile('myFileName.png', imagePath))) {\n    fileName.should == 'myFileName.png'\n}","entry":"file upload example with file name override","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Multiple form fields can be specified:","type":"SimpleText"}]},{"snippet":"def imagePath = testResourcePath(\"src/test/resources/image.png\")\n\nhttp.post(\"/file-upload\", http.formData(file: imagePath, fileDescription: 'new report')) {\n    fileName.should == 'image.png'\n    description.should == 'new report'\n}","entry":"file upload example multiple fields","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"id":"upload-in-memory-content","type":"Section","title":"Upload In-Memory Content","content":[{"type":"Paragraph","content":[{"text":"To pass file content from memory use","type":"SimpleText"}]},{"snippet":"byte[] fileContent = [1, 2, 3, 4] as byte[]\n\nhttp.post(\"/file-upload\", http.formData(file: fileContent)) {\n    fileName.should == 'backend-generated-name-as-no-name-provided'\n}","entry":"file upload example with in-memory content","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: no file name is passed and this particular backend generated file name on your behalf.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"http.formFile","type":"InlinedCode"},{"text":" to provide a file name","type":"SimpleText"}]},{"snippet":"byte[] fileContent = [1, 2, 3, 4] as byte[]\n\nhttp.post(\"/file-upload\", http.formData(\n        file: http.formFile('myFileName.dat', fileContent))) {\n    fileName.should == 'myFileName.dat'\n}","entry":"file upload example with in-memory content and file name","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"id":"download-pdf","type":"Section","title":"Download PDF","content":[{"type":"Paragraph","content":[{"text":"Assert PDF content using ","type":"SimpleText"},{"code":"pdf(body)","type":"InlinedCode"},{"text":" function.","type":"SimpleText"}]},{"snippet":"http.get(\"/report\") {\n    pdf(body).pageText(0).should contain('Quarterly earnings:')\n}","entry":"download pdf and assert page text using contains","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"If neem more than one assertion, assign ","type":"SimpleText"},{"code":"pdf","type":"InlinedCode"},{"text":" result to a local variable.","type":"SimpleText"}]},{"snippet":"http.get(\"/report\") {\n    def pdf = pdf(body)\n    pdf.pageText(0).should contain('Quarterly earnings:')\n    pdf.pageText(1).should == 'Intentional blank page\\n'\n}","entry":"download pdf and assert page text using equal and contains","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: Use pdf assertions for sanity checks: presence of correct client names or account numbers. Implement comprehensive PDF generation logic tests in unit tests.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Files","pageMeta":{},"dirName":"HTTP","fileName":"files","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Upload File","id":"upload-file"},{"title":"Upload In-Memory Content","id":"upload-in-memory-content"},{"title":"Download PDF","id":"download-pdf"}]}},{"type":"Page","content":[{"id":"scenarios","type":"Section","title":"Scenarios","content":[{"type":"Paragraph","content":[{"text":"You document ","type":"SimpleText"},{"code":"REST endpoints","type":"InlinedCode"},{"text":" so users can use them to achieve various goals.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You also need to make sure that documented scenarios work as advertised.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To automate the process, capture executed scenarios and use them inside your documentation.","type":"SimpleText"}]}]},{"id":"capturing-test-artifacts","type":"Section","title":"Capturing Test Artifacts","content":[{"type":"Paragraph","content":[{"text":"To capture ","type":"SimpleText"},{"code":"REST","type":"InlinedCode"},{"text":" artifacts use ","type":"SimpleText"},{"code":"http.doc.capture","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.http\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.scenario\n\nscenario(\"extracting id after POST to use inside GET request\") {\n    def id = http.post(\"/employee\", [firstName: 'FN', lastName: 'LN']) {\n        return id\n    }\n    http.doc.capture('employee-post')\n\n    http.get(\"/employee/$id\") {\n        firstName.should == 'FN'\n        lastName.should == 'LN'\n    }\n    http.doc.capture('employee-get') // capture previous HTTP call into <docDir>/employee-get\n}","commentsType":"inline","type":"Snippet","title":"test.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"An ","type":"SimpleText"},{"code":"employee-get","type":"InlinedCode"},{"text":" directory will be created containing a number of test artifacts.","type":"SimpleText"}]}]},{"id":"test-artifacts-location","type":"Section","title":"Test Artifacts Location","content":[{"type":"Paragraph","content":[{"text":"By default, the directory will be created in the current working directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To change it add ","type":"SimpleText"},{"code":"docPath","type":"InlinedCode"},{"text":" to your ","type":"SimpleText"},{"code":"webtau.cfg.groovy","type":"InlinedCode"},{"text":" file.","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8180\"\n\ndocPath = \"doc-artifacts\"","excludeRegexp":"package","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]},{"id":"test-artifacts","type":"Section","title":"Test Artifacts","content":[{"type":"Paragraph","content":[{"text":"A number of artifacts will be created depending on the exact call being captured.","type":"SimpleText"}]},{"level":2,"id":"test-artifacts-request-and-response-payloads","type":"SubHeading","title":"Request and response payloads"},{"type":"Paragraph","content":[{"text":"Request bodies are captured in either ","type":"SimpleText"},{"code":"request.json","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"request.pdf","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"request.data","type":"InlinedCode"},{"text":" depending on the type.","type":"SimpleText"}]},{"data":{"lastName":"LN","firstName":"FN"},"paths":[],"type":"Json","title":"employee-post/request.json"},{"type":"Paragraph","content":[{"text":"Similarly, response bodies are captured in either ","type":"SimpleText"},{"code":"response.json","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"response.pdf","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"response.data","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"data":{"lastName":"LN","firstName":"FN"},"paths":[],"type":"Json","title":"employee-get/response.json"},{"level":2,"id":"test-artifacts-request-and-response-headers","type":"SubHeading","title":"Request and response headers"},{"type":"Paragraph","content":[{"text":"Just like payloads, request and response headers are captured in ","type":"SimpleText"},{"code":"request.header.txt","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"response.header.txt","type":"InlinedCode"},{"type":"SoftLineBreak"},{"text":"respectively. These files contain a header per line with the name and values colon separated.  The values","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"are redacted for any potentially sensitive headers.","type":"SimpleText"}]},{"data":"testheader: testValue\nauthorization: ................","paths":[],"type":"Json","title":"redacted request.header.txt"},{"level":2,"id":"test-artifacts-response-body-assertions","type":"SubHeading","title":"Response body assertions"},{"type":"Paragraph","content":[{"text":"Any assertions you perform on the response body in your scenarios are captured in a ","type":"SimpleText"},{"code":"paths.json","type":"InlinedCode"},{"text":" file.  This","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"contains an array with the list of paths within the body whose values were asserted.","type":"SimpleText"}]},{"data":["root.firstName","root.lastName"],"paths":[],"type":"Json","title":"employee-get/paths.json"},{"level":2,"id":"test-artifacts-request-urls","type":"SubHeading","title":"Request URLs"},{"type":"Paragraph","content":[{"text":"The actual request URL is captured in two forms into two different files:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"request.fullurl.txt","type":"InlinedCode"},{"text":" - contains the full URL","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"request.url.txt","type":"InlinedCode"},{"text":" - contains only the part specified in the http call in the scenario","type":"SimpleText"}]}]}]},{"snippet":"/params?a=1&b=text","type":"Snippet","title":"request.url.txt","lang":"txt"},{"snippet":"http://localhost:40791/params?a=1&b=text","type":"Snippet","title":"request.fullurl.txt","lang":"txt"}]},{"id":"document-rest-calls","type":"Section","title":"Document REST calls","content":[{"type":"Paragraph","content":[{"text":"If you have user facing scenario tests, capture them and refer to them inside your documentation.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Set your documentation build pipeline like below.","type":"SimpleText"}]},{"diagram":{"isInvertedTextColorByStyleId":{},"svg":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: Generated Pages: 1 -->\n<svg width=\"407pt\" height=\"48pt\"\n viewBox=\"0.00 0.00 407.00 48.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 44)\">\n<title>Generated</title>\n<polygon fill=\"transparent\" stroke=\"transparent\" points=\"-4,4 -4,-44 403,-44 403,4 -4,4\"/>\n<!-- build -->\n<g id=\"node1\" class=\"node\">\n<title>build</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"0,-0.5 0,-39.5 54,-39.5 54,-0.5 0,-0.5\"/>\n<text text-anchor=\"middle\" x=\"27\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Build</text>\n</g>\n<!-- deploy -->\n<g id=\"node2\" class=\"node\">\n<title>deploy</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"90,-0.5 90,-39.5 153,-39.5 153,-0.5 90,-0.5\"/>\n<text text-anchor=\"middle\" x=\"121.5\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Deploy</text>\n</g>\n<!-- build&#45;&gt;deploy -->\n<g id=\"edge1\" class=\"edge\">\n<title>build&#45;&gt;deploy</title>\n<path fill=\"none\" stroke=\"black\" d=\"M54.26,-20C62.24,-20 71.21,-20 79.91,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"79.92,-23.5 89.92,-20 79.92,-16.5 79.92,-23.5\"/>\n</g>\n<!-- testrun -->\n<g id=\"node3\" class=\"node\">\n<title>testrun</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"189,-0.5 189,-39.5 259,-39.5 259,-0.5 189,-0.5\"/>\n<text text-anchor=\"middle\" x=\"224\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Test Run</text>\n</g>\n<!-- deploy&#45;&gt;testrun -->\n<g id=\"edge2\" class=\"edge\">\n<title>deploy&#45;&gt;testrun</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.2,-20C161.33,-20 170.27,-20 178.96,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"178.98,-23.5 188.98,-20 178.98,-16.5 178.98,-23.5\"/>\n</g>\n<!-- documentation -->\n<g id=\"node4\" class=\"node\">\n<title>documentation</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"295,-0.5 295,-39.5 399,-39.5 399,-0.5 295,-0.5\"/>\n<text text-anchor=\"middle\" x=\"347\" y=\"-17.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Documentation</text>\n</g>\n<!-- testrun&#45;&gt;documentation -->\n<g id=\"edge3\" class=\"edge\">\n<title>testrun&#45;&gt;documentation</title>\n<path fill=\"none\" stroke=\"black\" d=\"M259.03,-20C266.97,-20 275.66,-20 284.39,-20\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"284.6,-23.5 294.6,-20 284.6,-16.5 284.6,-23.5\"/>\n</g>\n</g>\n</svg>\n","stylesByNodeId":{"testrun":["h"]},"id":"dag1"},"urls":{},"wide":false,"type":"GraphVizDiagram","idsToHighlight":[]},{"type":"Paragraph","content":[{"text":"Combine REST requests and responses with Open API generated specs for complete documentation.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Documentation","pageMeta":{},"dirName":"HTTP","fileName":"documentation","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Scenarios","id":"scenarios"},{"title":"Capturing Test Artifacts","id":"capturing-test-artifacts"},{"title":"Test Artifacts Location","id":"test-artifacts-location"},{"title":"Test Artifacts","id":"test-artifacts"},{"title":"Document REST calls","id":"document-rest-calls"}]}},{"type":"Page","content":[{"id":"contain","type":"Section","title":"Contain","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" matcher to test scenarios like search or list of recently created entries.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This way you don't have to assume an existing state of your backend under test.","type":"SimpleText"}]},{"data":[{"lastName":"LN1","firstName":"FN1","id":1},{"lastName":"LN2","firstName":"FN2","id":2},{"lastName":"LN3","firstName":"FN3","id":3}],"paths":[],"type":"Json","title":"Response"},{"type":"Paragraph","content":[{"text":"Given the response, we want to make sure there is an entry with a specified ","type":"SimpleText"},{"code":"firstName","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"lastName","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"list Customers and assert that it contains a specified entry\") {\n    http.get(\"/customers\") {\n        body.should contain([firstName: 'FN1', lastName: 'LN1'])\n    }\n}","type":"Snippet","lang":"groovy"}]},{"id":"list-of-objects","type":"Section","title":"List Of Objects","content":[{"type":"Paragraph","content":[{"text":"If you want to make sure that all the values in the list are what you need - use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"list Customers and assert with a Table Data\") {\n    http.post(\"/customers\", [firstName: \"FN1\", lastName: \"LN1\"])\n    http.post(\"/customers\", [firstName: \"FN2\", lastName: \"LN2\"])\n    http.post(\"/customers\", [firstName: \"FN3\", lastName: \"LN3\"])\n\n    http.get(\"/customers?sortBy=firstName\") {\n        body.should == ['firstName' | 'lastName'] {\n                        __________________________\n                              'FN1' |      'LN1'\n                              'FN2' |      'LN2'\n                              'FN3' |      'LN3' }\n    }\n\n    http.doc.capture('list-match')\n}","type":"Snippet","lang":"groovy"}]},{"id":"order-agnostic-match","type":"Section","title":"Order Agnostic Match","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"*key","type":"InlinedCode"},{"text":" column(s) if list order is not guaranteed","type":"SimpleText"}]},{"snippet":"package scenarios.rest.springboot\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"list Customers and assert with a Table Data using key column\") {\n    def id1 = createCustomer firstName: \"FN1\", lastName: \"LN1\"\n    def id2 = createCustomer firstName: \"FN2\", lastName: \"LN2\"\n    def id3 = createCustomer firstName: \"FN3\", lastName: \"LN3\"\n\n    http.get(\"/customers\") {\n        body.should == ['*id' | 'firstName' | 'lastName'] {\n                        _________________________________\n                          id2 |       'FN2' |      'LN2'\n                          id1 |       'FN1' |      'LN1'\n                          id3 |       'FN3' |      'LN3'}\n    }\n}\n\ndef createCustomer(Map payload) {\n    return http.post(\"/customers\", payload) { id }\n}","type":"Snippet","lang":"groovy"}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Complex Types","pageMeta":{},"dirName":"HTTP","fileName":"complex-types","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Contain","id":"contain"},{"title":"List Of Objects","id":"list-of-objects"},{"title":"Order Agnostic Match","id":"order-agnostic-match"}]}},{"type":"Page","content":[{"id":"validation","type":"Section","title":"Validation","content":[{"type":"Paragraph","content":[{"text":"WebTau supports validation of responses against an ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"OpenAPI specification","type":"SimpleText"}],"url":"https://www.openapis.org/"},{"text":".  This feature can","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"be enabled by specifying the ","type":"SimpleText"},{"code":"openApiSpecUrl","type":"InlinedCode"},{"text":" configuration option.  This should be the URL to the specification against","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"which to validate.","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8080\"\nopenApiSpecUrl = \"scenarios/rest/springboot/api-spec.json\"","excludeRegexp":"docPath","type":"Snippet","title":"Configuration","lang":"groovy"}]},{"id":"current-limitations","type":"Section","title":"Current limitations","content":[{"type":"Paragraph","content":[{"text":"OpenAPI specification support is still in its early stage.  It is fully functional but there are a few limitations to be","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"aware of:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"WebTau currently only supports OpenAPI specification v2","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"specification matching is currently done based on the path and method","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"any HTTP requests which do not match any operation in the specification will not fail tests but will produce a warning","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"on the console","type":"SimpleText"}]}]}]}]},{"id":"validations-report","type":"Section","title":"Validations report","content":[{"type":"Paragraph","content":[{"text":"The validation errors are reported in the same manner as assertion errors.  They are available in the output from the","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"command line WebTau runner:","type":"SimpleText"}]},{"snippet":"> executing HTTP POST http://localhost:8080/customers\n {\n  \"id\": 1,\n  \"firstName\": \"FN\",\n  \"lastName\": \"LN\",\n  \"_links\": {\n    \"self\": {\n      \"href\": \"http://localhost:8080/customers/1\"\n    },\n    \"customer\": {\n      \"href\": \"http://localhost:8080/customers/1\"\n    }\n  }\n }\nX failed executing HTTP POST http://localhost:8080/customers : \nAPI spec validation failure: ERROR - Response status 201 not defined for path ''.: []\n[x] failed\njava.lang.AssertionError: \nAPI spec validation failure: ERROR - Response status 201 not defined for path ''.: []\n\tat scenarios.rest.springboot.customerCrud$_run_closure1.doCall(customerCrud.groovy:8)\n\tat scenarios.rest.springboot.customerCrud$_run_closure1.doCall(customerCrud.groovy)\n\n\n\nTotal: 1,  Passed: 0,  Skipped: 0,  Failed: 1,  Errored: 0\n","type":"Snippet","lineNumber":"","lang":"bash"},{"type":"Paragraph","content":[{"text":"They are also available in the HTML report:","type":"SimpleText"}]},{"fit":true,"shapes":[],"width":2242.0,"imageSrc":"/webtau/img/rest-crud-openapi-spec-validation-error.png","type":"AnnotatedImage","height":620.0,"timestamp":1653578199526}]},{"id":"validation-configuration","type":"Section","title":"Validation Configuration","content":[{"type":"Paragraph","content":[{"text":"To ignore additional properties in responses set ","type":"SimpleText"},{"code":"openApiIgnoreAdditionalProperties","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"true","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"As any other config value it can be done via command line, config file or system properties.","type":"SimpleText"}]}]},{"id":"disable-validation","type":"Section","title":"Disable Validation","content":[{"snippet":"import org.testingisdocumenting.webtau.openapi.OpenApi","type":"Snippet","title":"Additional import","lang":"groovy","includeRegexp":"import.*Open"},{"snippet":"OpenApi.withoutValidation {\n    http.post(\"/employee\", [firstName: 'First']) {\n        // ...\n    }\n}","type":"Snippet","title":"Disable request and response validation","lang":"groovy"},{"snippet":"OpenApi.responseOnlyValidation() {\n    http.post(\"/employee\", [firstName: 'First']) {\n        // ...\n    }\n}","type":"Snippet","title":"Disable request validation","lang":"groovy"},{"snippet":"OpenApi.requestOnlyValidation() {\n    http.post(\"/employee\", [firstName: 'First', lastName: 'Second']) {\n        // ...\n    }\n}","type":"Snippet","title":"Disable response validation","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"OpenAPI Spec","pageMeta":{},"dirName":"HTTP","fileName":"openAPI-spec","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Validation","id":"validation"},{"title":"Current limitations","id":"current-limitations"},{"title":"Validations report","id":"validations-report"},{"title":"Validation Configuration","id":"validation-configuration"},{"title":"Disable Validation","id":"disable-validation"}]}},{"type":"Page","content":[{"id":"validation","type":"Section","title":"Validation","content":[{"type":"Paragraph","content":[{"text":"WebTau supports validation of objects against ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"JSON Schema","type":"SimpleText"}],"url":"https://json-schema.org/"},{"text":".  It is possible to validate either","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"the entire body or just a specific field with the ","type":"SimpleText"},{"code":"complyWithSchema","type":"InlinedCode"},{"text":" matcher as shown in the two examples below:","type":"SimpleText"}]},{"snippet":"http.get(\"/weather\") {\n    body.should complyWithSchema('valid-schema.json')\n}","type":"Snippet","title":"Validate entire body against JSON schema","lang":"groovy"},{"snippet":"http.get(\"/city/London\") {\n    weather.should complyWithSchema('valid-schema.json')\n}","type":"Snippet","title":"Validate specific field against JSON schema","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Both examples above validate against the following schema:","type":"SimpleText"}]},{"data":{"type":"object","properties":{"temperature":{"type":"integer"}},"required":["temperature"]},"paths":[],"type":"Json","title":"Correct schema for the example above"}]},{"id":"error-messages","type":"Section","title":"Error messages","content":[{"type":"Paragraph","content":[{"text":"Using the first example above, an invalid schema will generate an error similar to:","type":"SimpleText"}]},{"snippet":"invalid schema (examples/scenarios/rest/jsonSchema/validateSchema.groovy)\n> executing HTTP GET http://localhost:8080/weather\n  X failed expecting body to comply with schema invalid-schema.json : \n      body expected to comply with schema invalid-schema.json\n      [#: required key [anotherField] not found, #/temperature: expected type: Boolean, found: Integer]\n{\n  \"temperature\": 88\n}\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"The schema used in validation to generate this error is as follows:","type":"SimpleText"}]},{"data":{"type":"object","properties":{"anotherField":{"type":"string"},"temperature":{"type":"boolean"}},"required":["temperature","anotherField"]},"paths":[],"type":"Json","title":"Incorrect schema for the example above"}]},{"id":"configuration","type":"Section","title":"Configuration","content":[{"type":"Paragraph","content":[{"text":"The path to the schema file specified in ","type":"SimpleText"},{"code":"complyWithSchema","type":"InlinedCode"},{"text":" can be relative or absolute.  If it's relative, it'll be","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"relative to the ","type":"SimpleText"},{"code":"jsonSchemasDir","type":"InlinedCode"},{"text":" specified in configuration and if not specified then relative to working directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"For example:","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8180\"\njsonSchemasDir = 'schemas'","excludeRegexp":"package","type":"Snippet","title":"Configuration","lang":"groovy"}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"HTTP","pageTitle":"JSON Schema","pageMeta":{},"dirName":"HTTP","fileName":"JSON-schema","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Validation","id":"validation"},{"title":"Error messages","id":"error-messages"},{"title":"Configuration","id":"configuration"}]}},{"type":"Page","content":[{"id":"location","type":"Section","title":"Location","content":[{"type":"Paragraph","content":[{"text":"By default, report is generated at ","type":"SimpleText"},{"code":"<workingdir>/webtau.report.html","type":"InlinedCode"},{"text":". To change the location use ","type":"SimpleText"},{"code":"--reportPath","type":"InlinedCode"},{"text":" option.","type":"SimpleText"}]}]},{"id":"summary","type":"Section","title":"Summary","content":[{"type":"Paragraph","content":[{"text":"Out of the box report provides high level information like number of failed tests and HTTP Operations coverage.","type":"SimpleText"}]},{"fit":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-summary.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578885744}]},{"id":"test-summary","type":"Section","title":"Test Summary","content":[{"type":"Paragraph","content":[{"text":"Selected test to see a summary information about test run","type":"SimpleText"}]},{"fit":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-test-summary.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578886096}]},{"id":"navigation","type":"Section","title":"Navigation","content":[{"type":"Paragraph","content":[{"text":"Report is a self contained single page application.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Url tracks your navigation through screens, so you can share url with your teammates to narrow down a problem.","type":"SimpleText"}]}]},{"id":"additional-reports","type":"Section","title":"Additional Reports","content":[{"type":"Paragraph","content":[{"text":"To generate custom reports or upload report data to your server, specify a ","type":"SimpleText"},{"code":"reportGenerator","type":"InlinedCode"},{"text":" config property.","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8080\"\n\nreportGenerator = Report.&generateReport","excludeRegexp":"package","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Report.&generateReport","type":"InlinedCode"},{"text":" is implemented as following","type":"SimpleText"}]},{"snippet":"package scenarios.rest.report\n\nimport org.testingisdocumenting.webtau.console.ConsoleOutputs\nimport org.testingisdocumenting.webtau.console.ansi.Color\nimport org.testingisdocumenting.webtau.reporter.WebTauReport\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.cfg\n\nclass Report {\n    static void generateReport(WebTauReport report) {\n        def reportPath = cfg.workingDir.resolve('report.txt')\n\n        ConsoleOutputs.out('generating report: ', Color.PURPLE, reportPath)\n        reportPath.toFile().text = report.tests.size()\n    }\n}","type":"Snippet","title":"scenarios/rest/report/Report.groovy","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Report","pageMeta":{},"dirName":"HTTP","fileName":"report","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Location","id":"location"},{"title":"Summary","id":"summary"},{"title":"Test Summary","id":"test-summary"},{"title":"Navigation","id":"navigation"},{"title":"Additional Reports","id":"additional-reports"}]}},{"type":"Page","content":[{"id":"dependency","type":"Section","title":"Dependency","content":[{"type":"Paragraph","content":[{"text":"You can use maven to add WebTau as a dependency to you project (for autocompletion or to use with JUnit like runners).","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-groovy</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","lang":"xml"}]},{"name":"Java","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","lang":"xml"}]}],"type":"Tabs"}]},{"id":"plugin","type":"Section","title":"Plugin","content":[{"type":"Paragraph","content":[{"text":"Use maven plugin to run pure groovy tests as part of your build.","type":"SimpleText"}]},{"snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>1.48</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <env>integration</env>\n        <url>http://optional-base-url</url>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/simple*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet","lang":"xml"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"env","type":"InlinedCode"},{"text":" to specify ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"environment to use","type":"SimpleText"}],"url":"/webtau/configuration/groovy-config-file#environments"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Alternatively you can use ","type":"SimpleText"},{"code":"url","type":"InlinedCode"},{"text":" to override base url.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Maven","pageMeta":{},"dirName":"HTTP","fileName":"maven","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Dependency","id":"dependency"},{"title":"Plugin","id":"plugin"}]}},{"type":"Page","content":[{"id":"imports-to-use","type":"Section","title":"Imports to use","content":[{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","type":"Snippet","title":"Single import to use","lang":"groovy","includeRegexp":"import.*Dsl"}]},{"id":"response-mapping","type":"Section","title":"Response Mapping","content":[{"type":"Paragraph","content":[{"text":"Identifiers inside validation closure are automatically mapped to a response body.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":{"k1":"v1","k2":"v2","id":"id1"},"paths":[],"meta":{"rightSide":false},"type":"Json","title":"object response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-simple-object\") {\n    k1.should == 'v1'\n}","entry":"simple object mapping example","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point-simple-object\", (header, body) -> {\n    body.get(\"k1\").should(equal(\"v1\"));\n});","entry":"simpleObjectMappingExample","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"},{"type":"Paragraph","content":[{"text":"List responses are handled by using index chain","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":[{"k1":"v1","k2":"v2","id":"id1"}],"paths":[],"type":"Json","title":"list response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-simple-list\") {\n    body[0].k1.should == 'v1'\n}","entry":"simple list mapping example","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: Groovy API implicitly assumes ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":", but if you need to deal with array response you need to access values using ","type":"SimpleText"},{"code":"body","type":"InlinedCode"},{"text":" explicitly.","type":"SimpleText"}]}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point-simple-list\", (header, body) -> {\n    body.get(0).get(\"k1\").should(equal(\"v1\"));\n});","entry":"simpleListMappingExample","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"should-and-should-not","type":"Section","title":"Should and Should Not","content":[{"type":"Paragraph","content":[{"text":"Matchers in WebTau are triggered with ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"},{"text":" keywords.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Additionally ","type":"SimpleText"},{"code":"shouldBe","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNotBe","type":"InlinedCode"},{"text":" alias keywords are available to make certain matcher combinations easier to read.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/example\") {\n    year.shouldNot == 2000\n    year.should != 2000  // alternative shortcut\n    genres.should contain('RPG')\n    rating.shouldBe > 7\n}","entry":"matchers basic example","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/example\", (header, body) -> {\n    body.get(\"year\").shouldNot(equal(2000));\n    body.get(\"genres\").should(contain(\"RPG\"));\n    body.get(\"rating\").shouldBe(greaterThan(7));\n});","entry":"matchersBasicExample","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"equality","type":"Section","title":"Equality","content":[{"type":"Paragraph","content":[{"text":"WebTau defines its own set of equality rules to simplify testing.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":{"amount":30,"price":100,"complexList":[{"k1":"v1","k2":30,"id":"id1"},{"k1":"v11","k2":40,"id":"id2"}],"id":10,"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"}},"paths":["root.id","root.amount","root.list[0]","root.list[1]","root.list[2]","root.object.k1","root.object.k3","root.complexList[0].k1","root.complexList[0].k2","root.complexList[1].k1","root.complexList[1].k2"],"pathsFile":"doc-artifacts/end-point-object-equality-matchers/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point\") {\n    id.should != 0\n    amount.should == 30\n\n    list.should == [1, 2, 3]\n\n    object.k1.should == ~/v\\d/ // regular expression matching\n\n    object.should == [k1: 'v1', k3: 'v3'] // matching only specified fields and can be nested multiple times\n\n    complexList.should == [\"k1\"   | \"k2\"] { // matching only specified fields, but number of entries must be exact\n                           ________________\n                            \"v1\"  | 30\n                            \"v11\" | 40 }\n}","excludeRegexp":"doc.capture","entry":"equality matcher","bodyOnly":true,"commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"id\").shouldNot(equal(0));\n    body.get(\"amount\").should(equal(30));\n\n    body.get(\"list\").should(equal(Arrays.asList(1, 2, 3)));\n\n    body.get(\"object\").get(\"k1\").should(equal(\n            Pattern.compile(\"v\\\\d\"))); // regular expression matching\n\n    body.get(\"object\").should(equal(aMapOf(\n            \"k1\", \"v1\",\n            \"k3\", \"v3\"))); // matching only specified fields and can be nested multiple times\n\n    body.get(\"complexList\").should(equal(table(\"k1\" , \"k2\", // matching only specified fields, but number of entries must be exact\n                                              ________________,\n                                               \"v1\" ,  30,\n                                               \"v11\",  40)));\n});","excludeRegexp":"doc.capture","entry":"equalityMatcher","bodyOnly":true,"commentsType":"inline","type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point\") {\n    complexList.should == [ \"*id\" | \"k1\"  | \"k2\"] { // order agnostic key based match\n                           ________________________\n                            \"id2\" | \"v11\" | 40\n                            \"id1\" | \"v1\"  | 30 }\n}","entry":"equality matcher table keys","bodyOnly":true,"commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point\", (header, body) -> {\n    body.get(\"complexList\").should(equal(table(\"*id\", \"k1\" , \"k2\", // order agnostic key based match\n                                               ________________,\n                                               \"id2\", \"v11\", 40,\n                                               \"id1\", \"v1\" , 30)));\n});","entry":"equalityMatcherTableKey","bodyOnly":true,"commentsType":"inline","type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"greaterlessequal","type":"Section","title":"Greater/Less/Equal","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"greaterThan","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"greaterThanOrEqual","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"lessThan","type":"InlinedCode"},{"text":", and ","type":"SimpleText"},{"code":"lessThanOrEqual","type":"InlinedCode"},{"text":" to assert numeric values.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":{"amount":30,"price":100,"id":10,"list":[1,2,3]},"paths":["root.id","root.price","root.amount","root.list[1]"],"pathsFile":"doc-artifacts/end-point-numbers-matchers/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-numbers\") {\n    id.shouldBe > 0\n    price.shouldBe >= 100\n    amount.shouldBe < 150\n    list[1].shouldBe <= 2\n\n    id.shouldNotBe <= 0\n    price.shouldNotBe < 100\n    amount.shouldNotBe >= 150\n    list[1].shouldNotBe > 2\n}","excludeRegexp":"doc.capture","entry":"compare numbers with greater less matchers","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"Groovy","type":"InlinedCode"},{"text":" can use shortcuts ","type":"SimpleText"},{"code":">","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":">=","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"<","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"<=","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point-numbers\", (header, body) -> {\n    body.get(\"id\").shouldBe(greaterThan(0));\n    body.get(\"price\").shouldBe(greaterThanOrEqual(100));\n    body.get(\"amount\").shouldBe(lessThan(150));\n    body.get(\"list\").get(1).shouldBe(lessThanOrEqual(2));\n\n    body.get(\"id\").shouldNotBe(lessThanOrEqual(0));\n    body.get(\"price\").shouldNotBe(lessThan(100));\n    body.get(\"amount\").shouldNotBe(greaterThanOrEqual(150));\n    body.get(\"list\").get(1).shouldNotBe(greaterThan(2));\n});","excludeRegexp":"doc.capture","entry":"compareNumbersWithGreaterLessMatchers","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"contain","type":"Section","title":"Contain","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":" when you cannot rely on order of values in a response.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":[{"k1":"v1","k2":"v2","id":"id1"},{"k1":"v11","k2":[10,20,30],"id":"id2"}],"paths":["root[0].k1","root[0].k2","root[1].k2[0]","root[1].k2[1]","root[1].k2[2]"],"pathsFile":"doc-artifacts/end-point-list-contain-matchers/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-list\") {\n    body.should contain([k1: 'v1', k2: 'v2'])\n    body[1].k2.shouldNot contain(22)\n}","excludeRegexp":"doc.capture","entry":"contain matcher","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point-list\", (header, body) -> {\n    body.should(contain(aMapOf(\n            \"k1\", \"v1\",\n            \"k2\", \"v2\")));\n    body.get(1).get(\"k2\").shouldNot(contain(22));\n});","excludeRegexp":"doc.capture","entry":"containMatcher","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"contain-all","type":"Section","title":"Contain All","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"containAll","type":"InlinedCode"},{"text":" when you cannot rely on order of values in a response and need to check more than one value.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":[{"k1":"v1","k2":"v2","id":"id1"},{"k1":"v11","k2":[10,20,30],"id":"id2"}],"paths":["root[1].k2[0]","root[1].k2[1]","root[1].k2[2]"],"pathsFile":"doc-artifacts/end-point-list-contain-all-matchers/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-list\") {\n    body[1].k2.should containAll(10, 30)\n    body[1].k2.shouldNot containAll(40, 60, 80)\n}","excludeRegexp":"doc.capture","entry":"contain all matcher","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point-list\", (header, body) -> {\n    body.get(1).get(\"k2\").should(containAll(10, 30));\n    body.get(1).get(\"k2\").shouldNot(containAll(40, 60, 80));\n});","excludeRegexp":"doc.capture","entry":"containAllMatcher","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"nested-contain-all","type":"Section","title":"Nested Contain All","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"containingAll","type":"InlinedCode"},{"text":" alias to make it easier to read ","type":"SimpleText"},{"code":"containAll","type":"InlinedCode"},{"text":" matcher nested inside ","type":"SimpleText"},{"code":"contain","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":[{"id":"game1","prices":[15,30,40,60]},{"id":"game2","prices":[10,30]}],"paths":[],"pathsFile":"doc-artifacts/prices-contain-containing-all/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/prices\") {\n    body.prices.should contain(containingAll(10, 30))\n}","excludeRegexp":"doc.capture","entry":"contain containing all matcher","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/prices\", (header, body) -> {\n    body.get(\"prices\").should(contain(containingAll(10, 30)));\n});","excludeRegexp":"doc.capture","entry":"containContainingAllMatcher","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"date-and-time","type":"Section","title":"Date and Time","content":[{"type":"Paragraph","content":[{"text":"You can assert ","type":"SimpleText"},{"code":"actual","type":"InlinedCode"},{"text":" string against ","type":"SimpleText"},{"code":"LocalDate","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"ZonedDateTime","type":"InlinedCode"},{"text":". String will be automatically converted","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"using ISO formatter.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":{"paymentSchedule":["2018-06-12","2018-07-10","2018-08-09","2018-09-12"],"tradeDate":"2018-06-12","id":54,"transactionTime":"2018-06-12T10:00:00+01:00:00"},"paths":["root.tradeDate","root.transactionTime","root.paymentSchedule[0]"],"pathsFile":"doc-artifacts/end-point-dates-matchers/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-dates\") {\n    def expectedDate = LocalDate.of(2018, 6, 12)\n    def expectedTime = ZonedDateTime.of(expectedDate,\n        LocalTime.of(9, 0, 0),\n        ZoneId.of(\"UTC\"))\n\n    tradeDate.should == expectedDate\n    transactionTime.should == expectedTime\n    transactionTime.shouldBe >= expectedDate\n\n    paymentSchedule.should contain(expectedDate)\n}","excludeRegexp":"doc.capture","entry":"working with dates","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"http.get(\"/end-point-dates\", (header, body) -> {\n    LocalDate expectedDate = LocalDate.of(2018, 6, 12);\n    ZonedDateTime expectedTime = ZonedDateTime.of(expectedDate,\n            LocalTime.of(9, 0, 0),\n            ZoneId.of(\"UTC\"));\n\n    body.get(\"tradeDate\").should(equal(expectedDate));\n    body.get(\"transactionTime\").should(equal(expectedTime));\n    body.get(\"transactionTime\").shouldBe(greaterThanOrEqual(expectedDate));\n\n    body.get(\"paymentSchedule\").should(contain(expectedDate));\n});","excludeRegexp":"doc.capture","entry":"workingWithDates","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]},{"id":"mixing-matchers","type":"Section","title":"Mixing Matchers","content":[{"type":"Paragraph","content":[{"text":"You can use matchers in place of expected values to build a more complex expectation.","type":"SimpleText"}]},{"meta":{"rightSide":true},"type":"EmptyBlock"},{"data":{"complexList":[{"k1":"v1","k2":100,"id":"id1"},{"k1":"v11","k2":200,"id":"id2"}],"list":[1,2,3],"object":{"k1":"v1","k2":"v2","k3":"v3"}},"paths":["root.list[0]","root.list[1]","root.object.k1","root.object.k3","root.complexList[0].k1","root.complexList[0].k2","root.complexList[1].k1","root.complexList[1].k2"],"pathsFile":"doc-artifacts/end-point-mixing-matchers/paths.json","type":"Json","title":"response"},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"http.get(\"/end-point-mixed\") {\n    list.should contain(lessThanOrEqual(2)) // lessThanOrEqual will be matched against each value\n\n    object.should == [k1: 'v1', k3: ~/v\\d/] // regular expression match against k3\n\n    complexList[0].should == [k1: 'v1', k2: lessThan(120)] // lessThen match against k2\n\n    complexList[1].should == [\n        k1: notEqual('v1'), // any value but v1\n        k2: greaterThanOrEqual(120)]\n\n    complexList.should == [\"k1\"   | \"k2\"] {\n                          ___________________________\n                           ~/v\\d/ | lessThan(120)\n                            \"v11\" | greaterThan(150) } // using matchers as cell values\n}","excludeRegexp":"doc.capture","entry":"matchers combo","bodyOnly":true,"commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"Pattern withNumber = Pattern.compile(\"v\\\\d\");\n\nhttp.get(\"/end-point-mixed\", (header, body) -> {\n    body.get(\"list\").should(contain(lessThanOrEqual(2))); // lessThanOrEqual will be matched against each value\n\n    body.get(\"object\").should(equal(aMapOf(\n            \"k1\", \"v1\",\n            \"k3\", withNumber))); // regular expression match against k3\n\n    body.get(\"complexList\").get(0).should(equal(aMapOf(\n            \"k1\", \"v1\",\n            \"k2\", lessThan(120)))); // lessThen match against k2\n\n    body.get(\"complexList\").get(1).should(equal(aMapOf(\n            \"k1\", notEqual(\"v1\"), // any value but v1\n            \"k2\", greaterThanOrEqual(120))));\n\n    TableData expected = table(\"k1\"        , \"k2\", // matching only specified fields, but number of entries must be exact\n                               ________________________________,\n                                withNumber , lessThan(120),\n                                \"v11\"      , greaterThan(150));\n\n    body.get(\"complexList\").should(equal(expected));\n});","excludeRegexp":"doc.capture","entry":"matchersCombo","bodyOnly":true,"commentsType":"inline","type":"Snippet","lang":"java"}]}],"meta":{"rightSide":true},"type":"Tabs"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"HTTP","pageTitle":"Matchers","pageMeta":{"type":["two-sides"]},"dirName":"HTTP","fileName":"matchers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Imports to use","id":"imports-to-use"},{"title":"Response Mapping","id":"response-mapping"},{"title":"Should and Should Not","id":"should-and-should-not"},{"title":"Equality","id":"equality"},{"title":"Greater/Less/Equal","id":"greaterlessequal"},{"title":"Contain","id":"contain"},{"title":"Contain All","id":"contain-all"},{"title":"Nested Contain All","id":"nested-contain-all"},{"title":"Date and Time","id":"date-and-time"},{"title":"Mixing Matchers","id":"mixing-matchers"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"graphql.","type":"InlinedCode"},{"text":" module lets you exercise and validate a GraphQL API.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It provides a simplified way to access the JSON response of an end-point and provides a DSL to execute queries and mutations.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"columns":[{"content":[{"snippet":"package scenarios.rest\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"check weather\") {\n    def query = \"{ weather { temperature } }\";\n    graphql.execute(query) {\n        weather.temperature.shouldBe < 100\n    }\n}","type":"Snippet","title":"GraphQL API test (Groovy specific runner)","lang":"groovy"},{"snippet":"package com.example.tests.junit4\n\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.graphql\n\n@RunWith(WebTauRunner.class)\nclass GraphQLWeatherGroovyIT {\n    @Test\n    void checkWeather() {\n        def query = \"{ weather { temperature } }\";\n        graphql.execute(query) {\n            weather.temperature.shouldBe < 100\n        }\n    }\n}","type":"Snippet","title":"GraphQL API test (JUnit4)","lang":"groovy"}]},{"content":[{"snippet":"{\n \"data\": {\n   \"weather\": {\n     \"temperature\": 88\n   }\n }\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]},{"name":"Java","content":[{"columns":[{"content":[{"snippet":"package com.example.tests.junit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class GraphQLWeatherJavaIT {\n    @Test\n    public void checkWeather() {\n        String query = \"{ weather { temperature } }\";\n        graphql.execute(query, (header, body) -> {\n            body.get(\"data.weather.temperature\").shouldBe(lessThan(100));\n        });\n    }\n}","type":"Snippet","title":"GraphQL API test (JUnit4 Java)","lang":"java"}]},{"content":[{"snippet":"{\n \"data\": {\n   \"weather\": {\n     \"temperature\": 88\n   }\n }\n}\n","type":"Snippet","title":"Server Response","lineNumber":"","lang":"json"}]}],"type":"Columns","config":{}}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Before diving further into writing tests for your GraphQL server, please read through the HTTP testing documentation","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"starting with the ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Data node page","type":"SimpleText"}],"url":"/webtau/HTTP/data-node"},{"text":" as much of the same core principles apply to GraphQL also.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The main GraphQL specific features are covered in the subsequent pages:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Queries and Mutations","type":"SimpleText"}],"url":"/webtau/GraphQL/queries-and-mutations"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Customized GraphQL URLs","type":"SimpleText"}],"url":"/webtau/GraphQL/customized-graphql-urls"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Report","type":"SimpleText"}],"url":"/webtau/GraphQL/report"}]}]}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"GraphQL","pageTitle":"Introduction","pageMeta":{},"dirName":"GraphQL","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"executing-queries-and-mutations","type":"Section","title":"Executing Queries and Mutations","content":[{"type":"Paragraph","content":[{"text":"WebTau follows GraphQL's ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Serving over HTTP best practices","type":"SimpleText"}],"url":"https://graphql.org/learn/serving-over-http/"},{"text":" when invoking","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"GraphQL servers over HTTP.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"It therefore assumes the server responds to requests to ","type":"SimpleText"},{"code":"/graphql","type":"InlinedCode"},{"text":" so you do not need to specify that in the URL in your configuration.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Requests allow providing:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"a query/mutation string","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"variables","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"an operation name","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"WebTau will default to issuing ","type":"SimpleText"},{"code":"POST","type":"InlinedCode"},{"text":" requests according to the ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"best practices","type":"SimpleText"}],"url":"https://graphql.org/learn/serving-over-http/#post-request"},{"type":"SoftLineBreak"},{"text":"and will expect a 200 status code and a response with a ","type":"SimpleText"},{"code":"data","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"errors","type":"InlinedCode"},{"text":" field.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The following example demonstrates most of these query features:","type":"SimpleText"}]},{"snippet":"package scenarios.graphql\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef listAllQuery = '''\n{\n    allTasks(uncompletedOnly: false) {\n        id\n        description\n    }\n}\n'''\n\ndef taskByIdQuery = '''\nquery taskById($id: ID!) {\n    taskById(id: $id) {\n        id\n        description\n        completed\n    }\n}\n'''\n\ndef completeMutation = '''\nmutation complete($id: ID!) {\n    complete(id: $id)\n}\n'''\n\nscenario(\"list all tasks\") {\n    graphql.execute(listAllQuery) { // Execute a simple query with no variables\n        errors.should == null // Validate there were no errors\n        body.data.allTasks.id.should == [\"a\", \"b\", \"c\"] // Access response data with the full path\n        allTasks.id.should == [\"a\", \"b\", \"c\"] // Access response data via a shortcut allowing omitting of `body.data`\n        id.should == [\"a\", \"b\", \"c\"] // For single query requests, access response data via a shortcut allowing omitting of `body.data` and the query name\n    }\n}\n\nscenario(\"complete a task\") {\n    graphql.execute(completeMutation, [id: \"a\"]) { // Execute a mutation with a variables map\n        errors.should == null\n        complete.should == true\n    }\n\n    graphql.execute(taskByIdQuery, [id: \"a\"]) {\n        errors.should == null\n        taskById.id.should == \"a\"\n        taskById.completed.should == true\n    }\n}\n\nscenario(\"cannot complete a completed task\") {\n    graphql.execute(completeMutation, [id: \"b\"]) { // Execute a mutation with a variables map\n        errors.should == null\n        complete.should == true\n    }\n    graphql.execute(completeMutation, [id: \"b\"]) { // force an error\n        errors[0].message.shouldNot == null\n        complete.should == null\n    }\n}","commentsType":"inline","type":"Snippet","title":"GraphQL example with a query, a mutation and variables","lang":"groovy"}]},{"id":"response-assertions","type":"Section","title":"Response Assertions","content":[{"type":"Paragraph","content":[{"text":"Response assertions follow a similar pattern to REST APIs.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For Groovy specifically, there are shortcuts for accessing data in the response directly as demonstrated in the example above.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You may access errors directly via ","type":"SimpleText"},{"code":"errors","type":"InlinedCode"},{"text":" or fields in the response directly with the field names, omitting the ","type":"SimpleText"},{"code":"data","type":"InlinedCode"},{"text":" field.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"GraphQL","pageTitle":"Queries And Mutations","pageMeta":{},"dirName":"GraphQL","fileName":"queries-and-mutations","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Executing Queries and Mutations","id":"executing-queries-and-mutations"},{"title":"Response Assertions","id":"response-assertions"}]}},{"type":"Page","content":[{"id":"customizing-the-graphql-endpoint","type":"Section","title":"Customizing the GraphQL Endpoint","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau assumes that all requests are made to a ","type":"SimpleText"},{"code":"/graphql","type":"InlinedCode"},{"text":" endpoint. The config value ","type":"SimpleText"},{"code":"graphQLEndpoint","type":"InlinedCode"},{"text":" can be set to use a non-standard endpoint, e.g. ","type":"SimpleText"},{"code":"graphQLEndpoint=/api/graphql","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau also decorates the query with a (typically ignored) query parameter that contains the request's ","type":"SimpleText"},{"code":"operationName","type":"InlinedCode"},{"text":", e.g. ","type":"SimpleText"},{"code":"/graphql?operation=myOperation","type":"InlinedCode"},{"text":". This makes execution logs as well as WebTau's step reports easier to read and debug, especially since the operation's name is part of the request's payload and is usually not logged by request loggers.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"If you want to turn this feature off, set the config value for ","type":"SimpleText"},{"code":"graphQLShowOperationAsQueryParam","type":"InlinedCode"},{"text":" to ","type":"SimpleText"},{"code":"false","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In order to customize the graphQL URL in different ways, you need to implement a ","type":"SimpleText"},{"code":"GraphQLHttpConfiguration","type":"InlinedCode"},{"text":" and ensure it gets loaded at runtime via the Java ServiceLoader.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is an example in groovy:","type":"SimpleText"}]},{"snippet":"package org.testingisdocumenting.webtau.graphql\n\nimport org.testingisdocumenting.webtau.graphql.config.GraphQLHttpConfiguration\nimport org.testingisdocumenting.webtau.graphql.model.GraphQLRequest\n\nclass CustomGraphQLHttpConfiguration implements GraphQLHttpConfiguration {\n    // Note: our test server requires the graphql endpoint to start with \"graphql\"\n    public static final CUSTOM_GRAPHQL_ENDPOINT = 'graphql-custom'\n\n    @Override\n    String requestUrl(String url, GraphQLRequest graphQLRequest) {\n        if (null != graphQLRequest.operationName && !graphQLRequest.operationName.isEmpty()) {\n            return \"${CUSTOM_GRAPHQL_ENDPOINT}?operation=${graphQLRequest.operationName}\"\n        }\n        return url\n    }\n}","type":"Snippet","title":"Customized GraphQLHttpConfiguration adding the operation to the URL","lang":"groovy"}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"GraphQL","pageTitle":"Customized Graphql Urls","pageMeta":{},"dirName":"GraphQL","fileName":"customized-graphql-urls","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Customizing the GraphQL Endpoint","id":"customizing-the-graphql-endpoint"}]}},{"type":"Page","content":[{"id":"additional-reports","type":"Section","title":"Additional Reports","content":[{"type":"Paragraph","content":[{"text":"To generate custom reports or upload report data to your server, specify a ","type":"SimpleText"},{"code":"reportGenerator","type":"InlinedCode"},{"text":" config property.","type":"SimpleText"}]},{"snippet":"package scenarios.graphql\n\nurl = \"http://localhost:8180\"\n\ngraphQLIgnoreIntrospectionFailures = false\n\nreportGenerator = Report.&generateReport","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Where ","type":"SimpleText"},{"code":"Report.&generateReport","type":"InlinedCode"},{"text":" is implemented as follows:","type":"SimpleText"}]},{"snippet":"package scenarios.graphql\n\n\nimport org.testingisdocumenting.webtau.console.ConsoleOutputs\nimport org.testingisdocumenting.webtau.console.ansi.Color\nimport org.testingisdocumenting.webtau.report.ReportDataProviders\nimport org.testingisdocumenting.webtau.reporter.WebTauReport\nimport org.testingisdocumenting.webtau.utils.JsonUtils\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.cfg\n\nclass Report {\n    static void generateReport(WebTauReport report) {\n        def additionalData = [:]\n        report.customDataStream.each { additionalData.putAll(it.toMap()) }\n\n        def reportData = [:]\n        reportData.graphQLSkippedQueries = additionalData.graphQLSkippedQueries // All queries present in the GraphQL schema but not tested\n        reportData.graphQLCoveredQueries = additionalData.graphQLCoveredQueries // All queries present in the GraphQL schema and tested\n        reportData.graphQLCoverageSummary = additionalData.graphQLCoverageSummary // Summary of test coverage compared to the GraphQL schema\n        reportData.graphQLQueryTimeStatistics = additionalData.graphQLQueryTimeStatistics // Summary of timing by query\n        reportData.graphQLCoveredSuccessBranches = additionalData.graphQLCoveredSuccessBranches // All queries present in the GraphQL schema that were hit with a success result\n        reportData.graphQLSkippedSuccessBranches = additionalData.graphQLSkippedSuccessBranches // All queries present in the GraphQL schema but not hit with a success result\n        reportData.graphQLCoveredErrorBranches = additionalData.graphQLCoveredErrorBranches // All queries present in the GraphQL schema that were hit with an error result\n        reportData.graphQLSkippedErrorBranches = additionalData.graphQLSkippedErrorBranches // All queries present in the GraphQL schema but not hit with an error result\n\n        def reportPath = cfg.workingDir.resolve('webtau.graphql-report.json')\n        ConsoleOutputs.out('generating report: ', Color.PURPLE, reportPath)\n\n        reportPath.toFile().text = JsonUtils.serializePrettyPrint(reportData)\n    }\n}","commentsType":"inline","type":"Snippet","title":"scenarios/graphql/Report.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"The output looks as follows:","type":"SimpleText"}]},{"snippet":"{\n  \"graphQLSkippedQueries\" : [ {\n    \"name\" : \"uncomplete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"allTasks\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"complete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"taskById\",\n    \"type\" : \"query\"\n  } ],\n  \"graphQLCoveredQueries\" : [ {\n    \"name\" : \"weather\",\n    \"type\" : \"query\"\n  } ],\n  \"graphQLCoverageSummary\" : {\n    \"coverage\" : 0.2,\n    \"branchCoverage\" : 0.1,\n    \"types\" : {\n      \"mutation\" : {\n        \"coverage\" : 0.0,\n        \"declaredQueries\" : 2,\n        \"coveredQueries\" : 0.0\n      },\n      \"query\" : {\n        \"coverage\" : 0.3333333333333333,\n        \"declaredQueries\" : 3,\n        \"coveredQueries\" : 1.0\n      }\n    },\n    \"successBranchCoverage\" : 0.2,\n    \"errorBranchCoverage\" : 0.0,\n    \"totalDeclaredQueries\" : 5.0,\n    \"totalCoveredQueries\" : 1.0\n  },\n  \"graphQLQueryTimeStatistics\" : [ {\n    \"name\" : \"weather\",\n    \"type\" : \"query\",\n    \"statistics\" : {\n      \"mean\" : 3.0,\n      \"min\" : 3,\n      \"max\" : 3,\n      \"count\" : 1,\n      \"p95\" : 3.0,\n      \"p99\" : 3.0\n    }\n  } ],\n  \"graphQLCoveredSuccessBranches\" : [ {\n    \"name\" : \"weather\",\n    \"type\" : \"query\"\n  } ],\n  \"graphQLSkippedSuccessBranches\" : [ {\n    \"name\" : \"uncomplete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"allTasks\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"complete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"taskById\",\n    \"type\" : \"query\"\n  } ],\n  \"graphQLCoveredErrorBranches\" : [ ],\n  \"graphQLSkippedErrorBranches\" : [ {\n    \"name\" : \"uncomplete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"allTasks\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"weather\",\n    \"type\" : \"query\"\n  }, {\n    \"name\" : \"complete\",\n    \"type\" : \"mutation\"\n  }, {\n    \"name\" : \"taskById\",\n    \"type\" : \"query\"\n  } ]\n}","type":"Snippet","title":"webtau.graphql-report.json","lang":"json"},{"level":2,"id":"additional-reports-coverage-and-timing-statistics","type":"SubHeading","title":"Coverage and Timing Statistics"},{"type":"Paragraph","content":[{"text":"WebTau will implicitly invoke your GraphQL server's introspection queries in order to fetch a subset of the schema.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It uses this schema in conjunction with the requests in tests to compute:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"query coverage - which queries were invoked by tests and which were not as well as an overall summary of coverage","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"timing information - http call timing statistics by query","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1653578199518,"tocItem":{"sectionTitle":"GraphQL","pageTitle":"Report","pageMeta":{},"dirName":"GraphQL","fileName":"report","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Additional Reports","id":"additional-reports"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":" module lets you interact with a browser.","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"It provides higher level abstractions to locate elements, encapsulate page implementation details and deal with","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"async nature of modern UIs.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.waitToBe > 1\n}","type":"Snippet","title":"Browser test (Groovy runner)","lang":"groovy"},{"snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def header = $(\"#header\")\n    def welcomeMessage = $(\"#welcome\")\n    def searchMessage = $(\"#message\")\n    def box = $(\"#search-box\")\n\n    def resultsArea = $(\"#results\")\n    def results = $(\"#results .result\")\n    def numberOfResults = results.count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(browser.keys.enter)\n    }\n}","type":"Snippet","title":"SearchPage.groovy","lang":"groovy"},{"snippet":"package pages\n\nclass Pages {\n    static final def search = new SearchPage()\n}","excludeRegexp":["calculation","form","payments"],"type":"Snippet","title":"Pages.groovy","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.Test;\nimport org.testingisdocumenting.webtau.junit5.WebTau;\n\nimport static com.example.tests.junit5.pages.Pages.*;\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\npublic class WebSearchJavaTest {\n    @Test\n    public void searchByQuery() {\n        search.submit(\"search this\");\n        search.numberOfResults.waitToBe(greaterThan(1));\n    }\n}","type":"Snippet","title":"Browser test (JUnit 5)","lang":"java"},{"snippet":"package com.example.tests.junit5.pages;\n\nimport org.testingisdocumenting.webtau.browser.page.PageElement;\nimport org.testingisdocumenting.webtau.browser.page.PageElementValue;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\npublic class SearchPage {\n    private final PageElement box = $(\"#search-box\");\n    private final PageElement results = $(\"#results .result\");\n    public final PageElementValue<Integer> numberOfResults = results.getCount();\n\n    public void submit(String query) {\n        browser.open(\"/search\");\n\n        box.setValue(query);\n        box.sendKeys(browser.keys.enter);\n    }\n}","type":"Snippet","title":"SearchPage.java","lang":"java"},{"snippet":"package com.example.tests.junit5.pages;\n\npublic class Pages {\n    public static SearchPage search = new SearchPage();\n}","type":"Snippet","title":"Pages.java","lang":"java"}]}],"type":"Tabs"}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Introduction","pageMeta":{},"dirName":"browser","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"base-url","type":"Section","title":"Base URL","content":[{"type":"Paragraph","content":[{"text":"Robust tests don't specify the full URL of an application under test.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Instead you only pass a relative URL to functions like ","type":"SimpleText"},{"code":"open","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('simple open') {\n    browser.open(\"/search\")\n    $('#welcome').should == 'welcome to super search'\n}","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Define base URL either inside a ","type":"SimpleText"},{"code":"webtau.cfg.groovy","type":"InlinedCode"},{"text":" file","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8180\"","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"or pass as a command line argument ","type":"SimpleText"},{"code":"--url=http://...","type":"InlinedCode"}]}]},{"id":"browser-only-base-url","type":"Section","title":"Browser Only Base URL","content":[{"type":"Paragraph","content":[{"text":"When you use ","type":"SimpleText"},{"code":"url","type":"InlinedCode"},{"text":" parameter you set base url for both ","type":"SimpleText"},{"code":"REST","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"UI","type":"InlinedCode"},{"text":" testing.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browserUrl","type":"InlinedCode"},{"text":" to specify ","type":"SimpleText"},{"code":"UI","type":"InlinedCode"},{"text":" only base url. This can be handy when your backend and frontend live separately.","type":"SimpleText"}]}]},{"id":"browser-id","type":"Section","title":"Browser Id","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browserId","type":"InlinedCode"},{"text":" via command line, or a config file parameter to specify which browser to use.","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau --browserId=firefox"},{"type":"Paragraph","content":[{"text":"Note: Default ","type":"SimpleText"},{"code":"browserId","type":"InlinedCode"},{"text":" is ","type":"SimpleText"},{"code":"chrome","type":"InlinedCode"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Basic Configuration","pageMeta":{},"dirName":"browser","fileName":"basic-configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Base URL","id":"base-url"},{"title":"Browser Only Base URL","id":"browser-only-base-url"},{"title":"Browser Id","id":"browser-id"}]}},{"type":"Page","content":[{"id":"element-selection","type":"Section","title":"Element Selection","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"$('css-selector')","type":"InlinedCode"},{"text":" to select a page element.","type":"SimpleText"}]},{"snippet":"$('#element-id')\n","type":"Snippet","title":"select by id","lineNumber":"","lang":"groovy"},{"snippet":"$('.label')\n","type":"Snippet","title":"select by class","lineNumber":"","lang":"groovy"},{"snippet":"$('[data-test-id=\"my-id\"]')\n","type":"Snippet","title":"select by attribute","lineNumber":"","lang":"groovy"},{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Read Finders And Filters","type":"SimpleText"}],"url":"/webtau/browser/finders-and-filters"},{"text":" to learn how to select elements using more advanced techniques.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Read W3Schools CSS selectors","type":"SimpleText"}],"url":"https://www.w3schools.com/cssref/css_selectors.asp"},{"text":" to learn all kind of CSS selection techniques.","type":"SimpleText"}]}]},{"id":"lazy-element","type":"Section","title":"Lazy Element","content":[{"type":"Paragraph","content":[{"text":"When you use ","type":"SimpleText"},{"code":"$('css-selector')","type":"InlinedCode"},{"text":" you create an instance of ","type":"SimpleText"},{"code":"PageElement","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"code":"PageElement","type":"InlinedCode"},{"text":" represent an element that is present or ","type":"SimpleText"},{"type":"Emphasis","content":[{"text":"will be present","type":"SimpleText"}]},{"text":" on a web page. It is safe to declare an element","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"before you open a browser or navigate to the page you need to test.","type":"SimpleText"}]},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef welcomeMessage = $('#welcome')\n\nscenario('simple open') {\n    browser.open(\"/search\")\n    welcomeMessage.should == 'welcome to super search'\n}","type":"Snippet","lang":"groovy"}]},{"id":"lazy-value","type":"Section","title":"Lazy Value","content":[{"type":"Paragraph","content":[{"text":"Consider a simple search page. Enter value, hit enter, see results.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Here is simple test.","type":"SimpleText"}]},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('search by specific query') {\n    browser.open('/search')\n\n    $('#search-box').setValue('search this')\n    $('#search-box').sendKeys(\"\\n\")\n\n    $('#results .result').count.shouldBe > 1\n}","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"In the example ","type":"SimpleText"},{"code":"$('#results .result').count","type":"InlinedCode"},{"text":" represents the number of elements matching the css selector.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Let's extract it.","type":"SimpleText"}]},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef searchBox = $('#search-box')\ndef numberOfResults = searchBox.count\n\nscenario('search by specific query') {\n    browser.open('/search')\n\n    searchBox.setValue('search this')\n    searchBox.sendKeys(\"\\n\")\n\n    numberOfResults.shouldBe > 1\n}","type":"Snippet","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Page Element And Value","pageMeta":{},"dirName":"browser","fileName":"page-element-and-value","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Element Selection","id":"element-selection"},{"title":"Lazy Element","id":"lazy-element"},{"title":"Lazy Value","id":"lazy-value"}]}},{"type":"Page","content":[{"id":"test-encapsulation","type":"Section","title":"Test Encapsulation","content":[{"type":"Paragraph","content":[{"text":"Robust tests should not depend on implementation details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"UI has plenty of those:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"UI Elements placement","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Actions","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"UI test should not depend on any of them.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Move elements placement and available actions outside of UI test.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Multiple tests can then reuse that information.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And more importantly you will have only one place to change if UI changes.","type":"SimpleText"}]}]},{"id":"definition","type":"Section","title":"Definition","content":[{"type":"Paragraph","content":[{"text":"To define ","type":"SimpleText"},{"code":"PageObject","type":"InlinedCode"},{"text":" create a class.","type":"SimpleText"}]},{"snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass SearchPage {\n    def header = $(\"#header\")\n    def welcomeMessage = $(\"#welcome\")\n    def searchMessage = $(\"#message\")\n    def box = $(\"#search-box\")\n\n    def resultsArea = $(\"#results\")\n    def results = $(\"#results .result\")\n    def numberOfResults = results.count\n\n    def submit(query) {\n        browser.open(\"/search\")\n\n        box.setValue(query)\n        box.sendKeys(browser.keys.enter)\n    }\n}","type":"Snippet","lang":"groovy"}]},{"id":"grouping","type":"Section","title":"Grouping","content":[{"type":"Paragraph","content":[{"text":"To make it easier to refer ","type":"SimpleText"},{"code":"PageObjects","type":"InlinedCode"},{"text":" from different tests combine them in one file","type":"SimpleText"}]},{"snippet":"package pages\n\nclass Pages {\n    static final def search = new SearchPage()\n    static final def calculation = new CalculationPage()\n    static final def form = new FormPage()\n    static final def payments = new PaymentsPage()\n}","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use static import to have seamless access to all of them","type":"SimpleText"}]},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\nimport static pages.Pages.*\n\nscenario(\"search by specific query\") {\n    search.submit(\"search this\")\n    search.numberOfResults.should == 2\n}","type":"Snippet","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Page Object","pageMeta":{},"dirName":"browser","fileName":"page-object","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Test Encapsulation","id":"test-encapsulation"},{"title":"Definition","id":"definition"},{"title":"Grouping","id":"grouping"}]}},{"type":"Page","content":[{"id":"clicks","type":"Section","title":"Clicks","content":[{"snippet":"payments.confirmation.click()","type":"Snippet","title":"click","lang":"groovy"},{"snippet":"expandArea.doubleClick()","type":"Snippet","title":"double click","lang":"groovy"},{"snippet":"paymentsTable.rightClick()","type":"Snippet","title":"right click","lang":"groovy"},{"snippet":"payments.confirmation.shiftClick()","type":"Snippet","title":"shift click","lang":"groovy"},{"snippet":"payments.confirmation.altClick()","type":"Snippet","title":"alt click","lang":"groovy"},{"snippet":"payments.confirmation.controlClick()","type":"Snippet","title":"control click","lang":"groovy"},{"snippet":"payments.confirmation.commandClick()","type":"Snippet","title":"command click","lang":"groovy"},{"snippet":"payments.confirmation.commandOrControlClick()","type":"Snippet","title":"command or control click","lang":"groovy"}]},{"id":"modifications","type":"Section","title":"Modifications","content":[{"snippet":"payments.dollarAmount.clear()","type":"Snippet","title":"clear","lang":"groovy"},{"snippet":"payments.dollarAmount.sendKeys(\"104.5\")","type":"Snippet","title":"send keys","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Generic way to set a form element value. Will be covered more in ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"forms","type":"SimpleText"}],"url":"/webtau/browser/forms"}]},{"snippet":"payments.dollarAmount.setValue(\"104.5\")","type":"Snippet","title":"set value","lang":"groovy"}]},{"id":"move-over","type":"Section","title":"Move over","content":[{"snippet":"menu.hover()","type":"Snippet","title":"hover","lang":"groovy"}]},{"id":"drag-and-drop","type":"Section","title":"Drag And Drop","content":[{"snippet":"def draggable = $(\"#draggable\")\ndef dropZone = $(\"#drop-zone\")\n\ndraggable.dragAndDropOver(dropZone)","surroundedBy":"// drag-and-drop-over","type":"Snippet","title":"drag element over element","lang":"groovy"},{"snippet":"def draggable = $(\"#draggable\")\ndraggable.dragAndDropBy(50, 50)","surroundedBy":"// drag-and-drop-by","type":"Snippet","title":"drag element by offset","lang":"groovy"}]},{"id":"scrolling","type":"Section","title":"Scrolling","content":[{"endLine":"// scrollIntoView-example","snippet":"sectionTwo.scrollIntoView()","excludeStartEnd":true,"startLine":"// scrollIntoView-example","type":"Snippet","title":"scroll into view","lang":"groovy"},{"endLine":"// scrollToBottom-example","snippet":"container.scrollToBottom()","excludeStartEnd":true,"startLine":"// scrollToBottom-example","type":"Snippet","title":"scroll to bottom","lang":"groovy"},{"endLine":"// scrollToTop-example","snippet":"container.scrollToTop()","excludeStartEnd":true,"startLine":"// scrollToTop-example","type":"Snippet","title":"scroll to top","lang":"groovy"},{"endLine":"// scrollToRight-example","snippet":"container.scrollToRight()","excludeStartEnd":true,"startLine":"// scrollToRight-example","type":"Snippet","title":"scroll to right","lang":"groovy"},{"endLine":"// scrollToRight-example","snippet":"container.scrollToRight()","excludeStartEnd":true,"startLine":"// scrollToRight-example","type":"Snippet","title":"scroll to right","lang":"groovy"},{"endLine":"// scrollToLeft-example","snippet":"container.scrollToLeft()","excludeStartEnd":true,"startLine":"// scrollToLeft-example","type":"Snippet","title":"scroll to left","lang":"groovy"},{"endLine":"// scrollTo-example","snippet":"container.scrollTo(100, 50)","excludeStartEnd":true,"startLine":"// scrollTo-example","type":"Snippet","title":"scroll to x, y","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Element Actions","pageMeta":{},"dirName":"browser","fileName":"element-actions","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Clicks","id":"clicks"},{"title":"Modifications","id":"modifications"},{"title":"Move over","id":"move-over"},{"title":"Drag And Drop","id":"drag-and-drop"},{"title":"Scrolling","id":"scrolling"}]}},{"type":"Page","content":[{"id":"universal-set-value","type":"Section","title":"Universal Set Value","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" on a declared page element to set its value.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It will work on all the standard input types out of the box.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Define all the input fields inside a page object. In combination with universal ","type":"SimpleText"},{"code":"setValue","type":"InlinedCode"},{"text":" it will make your tests robust.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Given a html snippet","type":"SimpleText"}]},{"snippet":"<html>\n<body>\n<div id=\"form\">\n  <input id=\"name\" />\n  <input id=\"startDate\" type=\"date\" />\n  <input id=\"confirmation\" type=\"checkbox\" />\n  <div id=\"choice-group\" class=\"radio-group\">\n    <div>\n      <input type=\"radio\" id=\"one\" name=\"choice\" value=\"value-one\"/>\n      <label for=\"one\">one</label>\n    </div>\n    <div>\n      <input type=\"radio\" id=\"two\" name=\"choice\" value=\"value-two\"/>\n      <label for=\"two\">two</label>\n    </div>\n    <div>\n      <input type=\"radio\" id=\"three\" name=\"choice\" value=\"value-three\"/>\n      <label for=\"three\">three</label>\n    </div>\n  </div>\n  <select id=\"rank\">\n    <option />\n    <option value=\"A\">A</option>\n    <option value=\"B\">B</option>\n    <option value=\"C\">C</option>\n    <option value=\"D\">D</option>\n    <option value=\"E\">E</option>\n  </select>\n</div>\n</body>\n</html>","type":"Snippet","title":"HTML form","lang":"html"},{"type":"Paragraph","content":[{"text":"Page object can be defined as","type":"SimpleText"}]},{"snippet":"package pages\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass FormPage {\n    def name = $('#name')\n    def rank = $('#rank')\n    def confirmation = $('#confirmation')\n    def choice = $('[name=\"choice\"]')\n    def startDate = $('#startDate')\n}","type":"Snippet","title":"Form page object","lang":"groovy"}]},{"id":"default-input","type":"Section","title":"Default Input","content":[{"snippet":"form.name.setValue('Full Automation')","type":"Snippet","title":"set value to input","lang":"groovy"}]},{"id":"date-input","type":"Section","title":"Date Input","content":[{"snippet":"form.startDate.setValue('2016-06-21')","type":"Snippet","title":"set value to date input","lang":"groovy"}]},{"id":"select","type":"Section","title":"Select","content":[{"snippet":"form.rank.setValue('B')","type":"Snippet","title":"set value to select","lang":"groovy"}]},{"id":"checkbox","type":"Section","title":"CheckBox","content":[{"snippet":"form.confirmation.setValue(true)","type":"Snippet","title":"set value to checkbox","lang":"groovy"}]},{"id":"radio-button","type":"Section","title":"Radio Button","content":[{"snippet":"form.choice.setValue('value-two')","type":"Snippet","title":"set value to radio button","lang":"groovy"}]},{"id":"universal-assert","type":"Section","title":"Universal Assert","content":[{"type":"Paragraph","content":[{"text":"Form element value can be asserted the same way as any regular element.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Underlying value will be extracted based on the element type","type":"SimpleText"}]},{"snippet":"form.name.should == 'Full Automation'\nform.rank.should == 'B'\nform.confirmation.should == true\nform.choice.should == 'value-two'\nform.startDate.should == '2016-06-21'","type":"Snippet","title":"universal assert","lang":"groovy"}]},{"id":"custom-form-elements","type":"Section","title":"Custom Form Elements","content":[{"type":"Paragraph","content":[{"text":"One of the benefits of universal ","type":"SimpleText"},{"code":"set","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"assert","type":"InlinedCode"},{"text":" is that your test is focused on the data and not implementation details.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But what if you decided to use a custom component to enter the data?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To hide implementation details from your test you should define a custom input handler for your UI component.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's consider a form component that you can start interacting with only after you clicked it. And after the value","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is entered, the input box disappears again.","type":"SimpleText"}]},{"snippet":"<div id=\"answer\" class=\"special-selector\" onclick=\"activate('answer')\"> \n <div class=\"current-value\">\n   current value \n </div> \n <input class=\"value-input\" value=\"\" onblur=\"valueEntered('answer')\"> \n</div>","type":"Snippet","title":"Custom input","lang":"html"},{"type":"Paragraph","content":[{"text":"Our test should still be written in terms of data entering and validation.","type":"SimpleText"}]},{"snippet":"def customFormElement = $('#answer')\n\ncustomFormElement.setValue('hello')\ncustomFormElement.should == 'hello'","type":"Snippet","title":"set value to custom component","lang":"groovy"},{"type":"Paragraph","content":[{"text":"In order to achieve this we need to register a custom handler.","type":"SimpleText"}]},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('open forms') {\n    browser.open('/special-forms')\n}\n\nscenario('get set custom based on registered handler') {\n    def customFormElement = $('#answer')\n\n    customFormElement.setValue('hello')\n    customFormElement.should == 'hello'\n}","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"snippet":"package formHandlers\n\nimport org.openqa.selenium.Keys\nimport org.testingisdocumenting.webtau.browser.page.HtmlNode\nimport org.testingisdocumenting.webtau.browser.page.HtmlNodeAndWebElementList\nimport org.testingisdocumenting.webtau.browser.page.PageElement\nimport org.testingisdocumenting.webtau.browser.page.PageElementStepExecutor\nimport org.testingisdocumenting.webtau.browser.handlers.PageElementGetSetValueHandler\nimport org.testingisdocumenting.webtau.reporter.TokenizedMessage\n\nclass CustomInput implements PageElementGetSetValueHandler {\n    @Override\n    boolean handles(HtmlNodeAndWebElementList htmlNodeAndWebElements, PageElement pageElement) {\n        def htmlNode = htmlNodeAndWebElements.firstHtmlNode()\n        return htmlNode.attributes.class =~ /special-selector/\n    }\n\n    @Override\n    void setValue(PageElementStepExecutor stepExecutor,\n                  TokenizedMessage pathDescription,\n                  HtmlNodeAndWebElementList htmlNodeAndWebElements,\n                  PageElement pageElement,\n                  Object value) {\n        pageElement.click()\n        pageElement.find('input').sendKeys(\"${value}\" + Keys.TAB)\n    }\n\n    @Override\n    Object getValue(HtmlNodeAndWebElementList htmlNodeAndWebElements, PageElement pageElement, int idx) {\n        return pageElement.find('.current-value').getUnderlyingValue()\n    }\n}","type":"Snippet","title":"Custom input handler","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Forms","pageMeta":{},"dirName":"browser","fileName":"forms","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Universal Set Value","id":"universal-set-value"},{"title":"Default Input","id":"default-input"},{"title":"Date Input","id":"date-input"},{"title":"Select","id":"select"},{"title":"CheckBox","id":"checkbox"},{"title":"Radio Button","id":"radio-button"},{"title":"Universal Assert","id":"universal-assert"},{"title":"Custom Form Elements","id":"custom-form-elements"}]}},{"type":"Page","content":[{"id":"synchronization","type":"Section","title":"Synchronization","content":[{"type":"Paragraph","content":[{"text":"Many actions in a modern web page are asynchronous. User presses a button and a moment later a result appears.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"In modern web pages there is no full page reload and only a portion of a page will be changed.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"If a test will try to assert a value after a user action, chances are assertion will fail since it will take time","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"for a result to appear on a page.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Question: How do users know that their action is done and they can move on?","type":"SimpleText"}]}]},{"id":"visiblehidden-element","type":"Section","title":"Visible/Hidden Element","content":[{"type":"Paragraph","content":[{"text":"One way to deal with asynchronous pages is to wait for a feedback to appear or disappear.","type":"SimpleText"}]},{"snippet":"calculation.start()\n\ncalculation.feedback.waitTo beVisible()\ncalculation.results.should == [100, 230]","type":"Snippet","title":"beVisible matcher","lang":"groovy"}]},{"id":"enableddisabled-element","type":"Section","title":"Enabled/Disabled Element","content":[{"type":"Paragraph","content":[{"text":"Disabled input box and buttons can be used as a user feedback as well.","type":"SimpleText"}]},{"snippet":"calculation.open()\n\ncalculation.input.waitTo beEnabled()\ncalculation.input.setValue(100)","type":"Snippet","title":"beEnabled matcher","lang":"groovy"}]},{"id":"wait-to-match","type":"Section","title":"Wait to match","content":[{"type":"Paragraph","content":[{"text":"If presence/absence of an element is not important, you can directly to wait for a matcher to match.","type":"SimpleText"}]},{"snippet":"calculation.start()\ncalculation.results.waitTo == [100, 230]","type":"Snippet","title":"waitTo any matcher","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: any matcher that you can use with ","type":"SimpleText"},{"code":"should","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"shouldNot","type":"InlinedCode"},{"text":" can be used with ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitToNot","type":"InlinedCode"}]}]},{"id":"wait-on-url","type":"Section","title":"Wait on url","content":[{"type":"Paragraph","content":[{"text":"Another cue to use could be a url change after an action.","type":"SimpleText"}]},{"snippet":"browser.open('/resource-creation')\n\n$('#new').click()\nbrowser.url.ref.waitTo == 'created-id'","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: url exposes other parts that you can ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"read more about here","type":"SimpleText"}],"url":"/webtau/browser/navigation#assert-url"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Asynchronous Page","pageMeta":{},"dirName":"browser","fileName":"asynchronous-page","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Synchronization","id":"synchronization"},{"title":"Visible/Hidden Element","id":"visiblehidden-element"},{"title":"Enabled/Disabled Element","id":"enableddisabled-element"},{"title":"Wait to match","id":"wait-to-match"},{"title":"Wait on url","id":"wait-on-url"}]}},{"type":"Page","content":[{"id":"scenarios","type":"Section","title":"Scenarios","content":[{"type":"Paragraph","content":[{"text":"To document how to use a User Interface we often take screenshots and annotate them.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"At the same time we need to make sure that documented scenario works as advertised.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"With UI testing we can validate scenarios and at the same time capture screenshots with automatically placed annotations.","type":"SimpleText"}]}]},{"id":"capturing-screenshots-with-annotations","type":"Section","title":"Capturing Screenshots With Annotations","content":[{"type":"Paragraph","content":[{"text":"To capture screenshots use ","type":"SimpleText"},{"code":"browser.doc[.withAnnotations].capture","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(\n        browser.doc.badge(search.box),\n        browser.doc.badge(search.results)).capture(\"search\")","type":"Snippet","title":"screenshot capture with badge annotations","lang":"groovy"},{"type":"Paragraph","content":[{"text":"The result of the ","type":"SimpleText"},{"code":"capture","type":"InlinedCode"},{"text":" command is two files: actual screenshot and ","type":"SimpleText"},{"code":"search.json","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"{\n  \"shapes\" : [ {\n    \"id\" : \"badge14\",\n    \"type\" : \"badge\",\n    \"text\" : \"1\",\n    \"color\" : \"a\",\n    \"darkFriendly\" : false,\n    \"invertedColors\" : false,\n    \"x\" : 115,\n    \"y\" : 78,\n    \"align\" : \"Center\"\n  }, {\n    \"id\" : \"badge15\",\n    \"type\" : \"badge\",\n    \"text\" : \"2\",\n    \"color\" : \"a\",\n    \"darkFriendly\" : false,\n    \"invertedColors\" : false,\n    \"x\" : 450,\n    \"y\" : 166,\n    \"align\" : \"Center\"\n  } ],\n  \"pixelRatio\" : 1\n}","type":"Snippet","title":"search.json","lang":"json"},{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}],"url":"https://testingisdocumenting.org/webtau"},{"text":" documentation site is generated using ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}],"url":"https://github.com/testingisdocumenting/znai"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It has ","type":"SimpleText"},{"code":"include-image","type":"InlinedCode"},{"text":" plugin that supports annotations format generated by ","type":"SimpleText"},{"code":"capture","type":"InlinedCode"},{"text":" command.","type":"SimpleText"}]},{"snippet":":include-image: doc-artifacts/search.png {fit: true, annotationsPath: \"doc-artifacts/search.json\"}\n","type":"Snippet","lineNumber":"","lang":""},{"annotationsPath":"doc-artifacts/search.json","shapes":[{"darkFriendly":false,"invertedColors":false,"color":"a","x":115,"y":78,"text":"1","id":"badge14","align":"Center","type":"badge"},{"darkFriendly":false,"invertedColors":false,"color":"a","x":450,"y":166,"text":"2","id":"badge15","align":"Center","type":"badge"}],"width":900.0,"imageSrc":"/webtau/doc-artifacts/search.png","type":"AnnotatedImage","height":355.0,"timestamp":1653578682924}]},{"id":"annotation-types","type":"Section","title":"Annotation Types","content":[{"snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(\n        browser.doc.badge(search.box),\n        browser.doc.badge(search.results)).capture(\"search\")","type":"Snippet","title":"badges","lang":"groovy"},{"annotationsPath":"doc-artifacts/search.json","shapes":[{"darkFriendly":false,"invertedColors":false,"color":"a","x":115,"y":78,"text":"1","id":"badge14","align":"Center","type":"badge"},{"darkFriendly":false,"invertedColors":false,"color":"a","x":450,"y":166,"text":"2","id":"badge15","align":"Center","type":"badge"}],"width":900.0,"imageSrc":"/webtau/doc-artifacts/search.png","type":"AnnotatedImage","height":355.0,"timestamp":1653578682924},{"snippet":"browser.doc.withAnnotations(\n        browser.doc.highlight(search.box),\n        browser.doc.cover(search.results, \"covering text\")).capture(\"search-highlight-cover\")","type":"Snippet","title":"cover and highlight","lang":"groovy"},{"annotationsPath":"doc-artifacts/search-highlight-cover.json","shapes":[{"darkFriendly":false,"invertedColors":false,"color":"a","width":198,"x":16,"y":67,"text":"","id":"highlight21","type":"highlight","height":23},{"darkFriendly":false,"invertedColors":false,"color":"a","width":860,"x":20,"y":148,"text":"covering text","id":"rectangle22","type":"rectangle","height":37}],"width":900.0,"imageSrc":"/webtau/doc-artifacts/search-highlight-cover.png","type":"AnnotatedImage","height":355.0,"timestamp":1653578683712}]},{"id":"annotation-placement","type":"Section","title":"Annotation Placement","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"above","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"below","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"toTheLeft","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"toTheRight","type":"InlinedCode"},{"text":" to put an annotation outside of element center.","type":"SimpleText"}]},{"endLine":"example-end","snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(\n        browser.doc.badge(search.box).toTheRight(),\n        browser.doc.badge(search.results).above()).capture(\"search-diff-placement\")","excludeStartEnd":true,"type":"Snippet","title":"badge placement","lang":"groovy"},{"annotationsPath":"doc-artifacts/search-diff-placement.json","shapes":[{"darkFriendly":false,"invertedColors":false,"color":"a","x":214,"y":78,"text":"1","id":"badge17","align":"ToTheRight","type":"badge"},{"darkFriendly":false,"invertedColors":false,"color":"a","x":450,"y":148,"text":"2","id":"badge18","align":"Above","type":"badge"}],"width":900.0,"imageSrc":"/webtau/doc-artifacts/search.png","type":"AnnotatedImage","height":355.0,"timestamp":1653578682924}]},{"id":"screenshot-of-specific-element","type":"Section","title":"Screenshot Of Specific Element","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"withRoot","type":"InlinedCode"},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to limit screenshot to a specific element","type":"SimpleText"}]},{"annotationsPath":"doc-artifacts/search-results-area.json","shapes":[{"darkFriendly":false,"invertedColors":false,"color":"a","x":434,"y":18,"text":"1","id":"badge16","align":"Center","type":"badge"}],"width":868.0,"imageSrc":"/webtau/doc-artifacts/search-results-area.png","type":"AnnotatedImage","height":207.0,"timestamp":1653578683108},{"snippet":"search.submit(\"search this\")\n\nbrowser.doc.withRoot(search.resultsArea)\n        .withAnnotations(browser.doc.badge(search.results))\n        .capture(\"search-results-area\")","type":"Snippet","title":"specific element","lang":"groovy"}]},{"id":"inverted-colors","type":"Section","title":"Inverted Colors","content":[{"type":"Paragraph","content":[{"text":"By default, annotation colors assume light theme of an UI you document.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Use ","type":"SimpleText"},{"code":"invertedColors()","type":"InlinedCode"},{"text":" to change an annotation color to be dark theme compatible.","type":"SimpleText"}]},{"annotationsPath":"doc-artifacts/search-inverted-colors.json","shapes":[{"darkFriendly":true,"invertedColors":true,"color":"a","x":450,"y":25,"text":"1","id":"badge19","align":"Center","type":"badge"},{"darkFriendly":false,"invertedColors":false,"color":"a","x":115,"y":78,"text":"2","id":"badge20","align":"Center","type":"badge"}],"width":900.0,"imageSrc":"/webtau/doc-artifacts/search-inverted-colors.png","type":"AnnotatedImage","height":355.0,"timestamp":1653578683588},{"endLine":"example-end","snippet":"search.submit(\"search this\")\n\nbrowser.doc.withAnnotations(\n        browser.doc.badge(search.header).invertedColors(),\n        browser.doc.badge(search.box)).capture(\"search-inverted-colors\")","highlight":[3],"excludeStartEnd":true,"type":"Snippet","title":"inverted colors","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To change all annotations to be dark theme compatible by default, use webtau config file","type":"SimpleText"}]},{"snippet":"browserAnnotationsDarkFriendly = true","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy","includeRegexp":"browserAnnotations"},{"type":"Paragraph","content":[{"text":"In this case ","type":"SimpleText"},{"code":"invertedColors","type":"InlinedCode"},{"text":" will flip from light annotations to dark one","type":"SimpleText"}]},{"endLine":"example-end","snippet":"browser.doc.withAnnotations(\n        browser.doc.badge(search.header),\n        browser.doc.badge(search.results).invertedColors()).capture('search-inverted-colors-from-config')","excludeStartEnd":true,"startLine":"example-start","type":"Snippet","title":"dark theme friendly by default","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Documentation Artifacts","pageMeta":{},"dirName":"browser","fileName":"documentation-artifacts","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Scenarios","id":"scenarios"},{"title":"Capturing Screenshots With Annotations","id":"capturing-screenshots-with-annotations"},{"title":"Annotation Types","id":"annotation-types"},{"title":"Annotation Placement","id":"annotation-placement"},{"title":"Screenshot Of Specific Element","id":"screenshot-of-specific-element"},{"title":"Inverted Colors","id":"inverted-colors"}]}},{"type":"Page","content":[{"id":"timeouts","type":"Section","title":"Timeouts","content":[{"type":"Paragraph","content":[{"text":"Default timeout in milliseconds for ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"waitToNot","type":"InlinedCode"}]},{"columns":[{"content":[{"snippet":"waitTimeout = 25000\n","type":"Snippet","lineNumber":"","lang":""}]},{"content":[{"snippet":"--waitTimeout=25000\n","type":"Snippet","lineNumber":"","lang":""}]}],"type":"Columns","config":{}}]},{"id":"browser-size","type":"Section","title":"Browser Size","content":[{"type":"Paragraph","content":[{"text":"Browser window size can be set using ","type":"SimpleText"},{"code":"browserWidth","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"browserHeight","type":"InlinedCode"}]},{"snippet":"url = \"http://localhost:8180\"\n\nbrowserWidth = 1280\nbrowserHeight = 800","type":"Snippet","lang":"groovy"}]},{"id":"documentation-artifacts","type":"Section","title":"Documentation Artifacts","content":[{"type":"Paragraph","content":[{"text":"By default all generated documentation artifacts (e.g. screenshots) are created in the current directory.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To override","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8180\"\n\ndocPath = \"screenshots\"","type":"Snippet","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Advanced Configuration","pageMeta":{},"dirName":"browser","fileName":"advanced-configuration","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Timeouts","id":"timeouts"},{"title":"Browser Size","id":"browser-size"},{"title":"Documentation Artifacts","id":"documentation-artifacts"}]}},{"type":"Page","content":[{"id":"access-local-storage","type":"Section","title":"Access Local Storage","content":[{"type":"Paragraph","content":[{"text":"To access local storage use ","type":"SimpleText"},{"code":"browser.localStorage","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Lets consider a simple web page that displays a value from a local storage.","type":"SimpleText"}]},{"snippet":"<div id=\"favorite-color\"> \n</div> \n<script>\n    const element = document.getElementById('favorite-color');\n    element.innerHTML = localStorage.getItem('favoriteColor');\n</script>","type":"Snippet","title":"Sample web page","lang":"html"},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"local storage api\") {\n    browser.open('/local-storage')\n    browser.localStorage.setItem('favoriteColor', 'clean')\n\n    def color = $('#favorite-color')\n\n    browser.reopen('/local-storage')\n    color.should == 'clean'\n\n    browser.localStorage.clear()\n    browser.reopen('/local-storage')\n    color.should == ''\n}","type":"Snippet","title":"Setting storage after opening page","lang":"groovy"},{"snippet":"/*\n * Copyright 2020 webtau maintainers\n * Copyright 2019 TWO SIGMA OPEN SOURCE, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.testingisdocumenting.webtau.browser;\n\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.html5.WebStorage;\nimport org.testingisdocumenting.webtau.reporter.WebTauStep;\n\nimport java.util.Set;\n\nimport static org.testingisdocumenting.webtau.reporter.IntegrationTestsMessageBuilder.*;\nimport static org.testingisdocumenting.webtau.reporter.TokenizedMessage.tokenizedMessage;\n\npublic class BrowserLocalStorage {\n    private final WebDriver driver;\n\n    BrowserLocalStorage(WebDriver driver) {\n        this.driver = driver;\n    }\n\n    public String getItem(String key) {\n        return getLocalStorage().getItem(key);\n    }\n\n    public Set<String> keySet() {\n        return getLocalStorage().keySet();\n    }\n\n    public void setItem(String key, String value) {\n        WebTauStep.createAndExecuteStep(\n                tokenizedMessage(action(\"setting browser localStorage item\"), id(key), TO, stringValue(value)),\n                () -> tokenizedMessage(action(\"set browser localStorage item\"), id(key), TO, stringValue(value)),\n                () -> getLocalStorage().setItem(key, value));\n    }\n\n    public void removeItem(String key) {\n        WebTauStep.createAndExecuteStep(\n                tokenizedMessage(action(\"removing browser localStorage item\"), id(key)),\n                () -> tokenizedMessage(action(\"removed browser localStorage item\"), id(key)),\n                () -> getLocalStorage().removeItem(key));\n    }\n\n    public void clear() {\n        WebTauStep.createAndExecuteStep(\n                tokenizedMessage(action(\"clearing browser localStorage\")),\n                () -> tokenizedMessage(action(\"cleared browser localStorage\")),\n                () -> getLocalStorage().clear());\n    }\n\n    public int size() {\n        return getLocalStorage().size();\n    }\n\n    private org.openqa.selenium.html5.LocalStorage getLocalStorage() {\n        WebStorage webStorage = (WebStorage) driver;\n        return webStorage.getLocalStorage();\n    }\n}","entries":["getItem","setItem","removeItem","clear","size"],"type":"Snippet","signatureOnly":true,"title":"Local Storage methods","lang":"java"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Local Storage","pageMeta":{},"dirName":"browser","fileName":"local-storage","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Access Local Storage","id":"access-local-storage"}]}},{"type":"Page","content":[{"id":"add-cookies","type":"Section","title":"Add Cookies","content":[{"snippet":"browser.cookies.add(\"cookie-a\", \"hello\")\nbrowser.cookies.add(\"cookie-b\", \"world\")","type":"Snippet","title":"add cookies","lang":"groovy"}]},{"id":"get-cookies","type":"Section","title":"Get Cookies","content":[{"snippet":"browser.cookies.get(\"cookie-a\").should == \"hello\"\nbrowser.cookies.get(\"cookie-b\").should == \"world\"\n\nbrowser.cookies.getAll().should == [\"cookie-a\": \"hello\", \"cookie-b\": \"world\"]","type":"Snippet","title":"get cookies","lang":"groovy"}]},{"id":"delete-cookies","type":"Section","title":"Delete Cookies","content":[{"snippet":"browser.cookies.delete(\"cookie-b\")","type":"Snippet","title":"delete cookie by name","lang":"groovy"},{"snippet":"browser.cookies.deleteAll()","type":"Snippet","title":"delete all cookies","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Cookies","pageMeta":{},"dirName":"browser","fileName":"cookies","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Add Cookies","id":"add-cookies"},{"title":"Get Cookies","id":"get-cookies"},{"title":"Delete Cookies","id":"delete-cookies"}]}},{"type":"Page","content":[{"id":"open","type":"Section","title":"Open","content":[{"type":"Paragraph","content":[{"text":"To open a page use ","type":"SimpleText"},{"code":"browser.open","type":"InlinedCode"},{"text":". Browser will load a page only if the current url doesn't match the passed one.","type":"SimpleText"}]},{"snippet":"search.submit('query')\n\nbrowser.open(\"/search\") // page is not be ing refreshed\nsearch.searchMessage.should == 'searching for query'","commentsType":"inline","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: relative url will be automatically expanded to the full url based on the ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"configuration","type":"SimpleText"}],"url":"/webtau/browser/basic-configuration"}]}]},{"id":"reopen","type":"Section","title":"Reopen","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"brower.reopen","type":"InlinedCode"},{"text":" to force open the page even if the page url already matches the passed one.","type":"SimpleText"}]},{"snippet":"search.submit('name')\n\nbrowser.reopen(\"/search\") // page is going to be refreshed\nsearch.searchMessage.should == ''","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"id":"refresh","type":"Section","title":"Refresh","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.refresh","type":"InlinedCode"},{"text":" to refresh current page.","type":"SimpleText"}]},{"snippet":"search.submit('name')\n\nbrowser.reopen(\"/search\") // page is going to be refreshed\nsearch.searchMessage.should == ''","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"id":"restart","type":"Section","title":"Restart","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.restart","type":"InlinedCode"},{"text":" to restart a browser and open last opened url.","type":"SimpleText"}]},{"snippet":"browser.open('/local-storage')\nbrowser.localStorage.setItem('favoriteColor', 'pretty')\n\nbrowser.refresh()\n$('#favorite-color').should == 'pretty'\n\nbrowser.restart()\n$('#favorite-color').should == ''","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: restarting creates a clean instance of a browser. Local storage is going to be reset.","type":"SimpleText"}]}]},{"id":"assert-url","type":"Section","title":"Assert URL","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.url","type":"InlinedCode"},{"text":" to assert on or wait for url changes.","type":"SimpleText"}]},{"snippet":"http://example.com/resource/id?type=full&debug=true#subId","type":"Snippet","title":"sample url","lang":"txt"},{"snippet":"browser.url.path.should == '/resource/id'\nbrowser.url.path.should contain('/id')\nbrowser.url.query.should == 'type=full&debug=true'\nbrowser.url.ref.should == 'subId'","entry":"should expose url parts with should","bodyOnly":true,"type":"Snippet","title":"asserting url parts","lang":"groovy"},{"snippet":"browser.url.should == 'http://example.com/resource/id?type=full&debug=true#subId'\nbrowser.url.should contain('resource/id?type=')","entry":"full part should be optional and default during assertion","bodyOnly":true,"type":"Snippet","title":"asserting full url","lang":"groovy"},{"snippet":"browser.url.path.waitTo == '/resource/id'\nbrowser.url.query.waitTo == 'type=full&debug=true'\nbrowser.url.ref.waitTo == 'subId'","entry":"should expose url parts with wait","bodyOnly":true,"type":"Snippet","title":"waiting on url parts","lang":"groovy"}]},{"id":"persist-url","type":"Section","title":"Persist URL","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.saveCurrentUrl","type":"InlinedCode"},{"text":" to save url in a local cache and ","type":"SimpleText"},{"code":"browser.openSavedUrl","type":"InlinedCode"},{"text":" to open a page later.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"It can be handy in multipart tests where first part creates an entity and the second part","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"updates the created entity.","type":"SimpleText"}]},{"snippet":"browser.open('/resource-creation')\n\n$('#new').click()\nbrowser.saveCurrentUrl()","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"In order to simplify tests development of a second part you can run first part once, save URL,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and iterate on a second part by opening a page using saved URL.","type":"SimpleText"}]},{"snippet":"browser.openSavedUrl()\n// continue resource related manipulations","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: url is stored in a local cache file and will survive tests restart.","type":"SimpleText"}]}]},{"id":"assert-title","type":"Section","title":"Assert Title","content":[{"snippet":"browser.title.should == \"Super Search\"","type":"Snippet","title":"asserting title","lang":"groovy","includeRegexp":"title.should"},{"snippet":"browser.title.waitTo == \"Super Search\"","type":"Snippet","title":"waiting on title","lang":"groovy","includeRegexp":"title.waitTo"}]},{"id":"back-and-forward","type":"Section","title":"Back And Forward","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"browser.back","type":"InlinedCode"},{"text":" and","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"browser.forward","type":"InlinedCode"},{"text":" to simulate","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"browser history ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Back","type":"SimpleText"}]},{"text":" and ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Forward","type":"SimpleText"}]},{"text":" buttons","type":"SimpleText"}]},{"snippet":"browser.back()\nbrowser.forward()","type":"Snippet","title":"back and forward","lang":"groovy","includeRegexp":["back","forward"]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Navigation","pageMeta":{},"dirName":"browser","fileName":"navigation","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Open","id":"open"},{"title":"Reopen","id":"reopen"},{"title":"Refresh","id":"refresh"},{"title":"Restart","id":"restart"},{"title":"Assert URL","id":"assert-url"},{"title":"Persist URL","id":"persist-url"},{"title":"Assert Title","id":"assert-title"},{"title":"Back And Forward","id":"back-and-forward"}]}},{"type":"Page","content":[{"id":"implicit-page-open-logic","type":"Section","title":"Implicit Page Open Logic","content":[{"type":"Paragraph","content":[{"text":"You can register a custom callback that will be called implicitly every time a web page is opened.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"One of the typical use cases is to inject cookies or values into a local storage before tests logic begins.","type":"SimpleText"}]}]},{"id":"auto-login","type":"Section","title":"Auto Login","content":[{"type":"Paragraph","content":[{"text":"To register an open handler you need to define ","type":"SimpleText"},{"code":"browserPageNavigationHandlerProvider","type":"InlinedCode"},{"text":" config value.","type":"SimpleText"}]},{"snippet":"url = \"http://localhost:8180\"\n\ndef userNameKey = 'userName'\nbrowserPageNavigationHandler = { passedUrl, fullUrl, currentUrl ->\n    if (browser.localStorage.getItem(userNameKey)) {\n        return\n    }\n\n    browser.localStorage.setItem(userNameKey, 'LoggedIn User')\n    browser.reopen(fullUrl)\n}","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"snippet":"package scenarios.ui\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"page open handlers\") {\n    browser.open('/logged-in-user')\n    $('#welcome').should == 'Welcome LoggedIn User'\n}\n\nscenario(\"page open handlers during re-open\") {\n    browser.localStorage.clear()\n\n    browser.reopen('/logged-in-user')\n    $('#welcome').should == 'Welcome LoggedIn User'\n}","type":"Snippet","title":"Handler will be called before first assertion","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: usage of ","type":"SimpleText"},{"code":"localStorage","type":"InlinedCode"},{"text":" is just an example. You can use ","type":"SimpleText"},{"code":"cookies","type":"InlinedCode"},{"text":", call external services using ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" or load","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"credentials from a file system.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Page Open Handlers","pageMeta":{},"dirName":"browser","fileName":"page-open-handlers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Implicit Page Open Logic","id":"implicit-page-open-logic"},{"title":"Auto Login","id":"auto-login"}]}},{"type":"Page","content":[{"id":"finders","type":"Section","title":"Finders","content":[{"type":"Paragraph","content":[{"text":"Finders in WebTau is the initial web element selection that could select one or more elements.","type":"SimpleText"}]}]},{"id":"css-finder","type":"Section","title":"CSS Finder","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"$","type":"InlinedCode"},{"text":" to select an element by a given ","type":"SimpleText"},{"code":"css","type":"InlinedCode"},{"text":" selector (","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Read W3Schools CSS selectors","type":"SimpleText"}],"url":"https://www.w3schools.com/cssref/css_selectors.asp"},{"text":" to learn all kind of CSS selection techniques).","type":"SimpleText"}]},{"snippet":"def welcomeMessage = $('#welcome')\nwelcomeMessage.should == 'hello'","type":"Snippet","title":"example of selecting by id","lang":"groovy"},{"type":"Paragraph","content":[{"text":"If more than one element is matched, the first one will be used for actions and assertions.","type":"SimpleText"}]},{"snippet":"def menu = $('ul li a')\nmenu.should == 'book'","type":"Snippet","title":"example of selecting by nested tags","lang":"groovy"},{"type":"Paragraph","content":[{"text":"While ","type":"SimpleText"},{"code":"click","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"sendKeys","type":"InlinedCode"},{"text":" will always work on a first element only, the matchers can work with a list of things.","type":"SimpleText"}]},{"snippet":"def menu = $('ul li a')\nmenu.should == ['book', 'orders', 'help']","type":"Snippet","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: declaring element this way will not trigger element search right away.","type":"SimpleText"}]},{"rightSide":true,"type":"Meta"},{"type":"EmptyBlock"},{"paths":["div"],"xmlAsJson":{"children":[{"text":"hello","tagName":""}],"attributes":[{"name":"id","value":"\"welcome\""}],"tagName":"div"},"type":"Xml"},{"paths":["ul.li[0].a"],"xmlAsJson":{"children":[{"children":[{"children":[{"text":"book","tagName":""}],"attributes":[{"name":"href","value":"\"/book\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"orders","tagName":""}],"attributes":[{"name":"href","value":"\"/orders\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"help","tagName":""}],"attributes":[{"name":"href","value":"\"/help\""}],"tagName":"a"}],"attributes":[],"tagName":"li"}],"attributes":[],"tagName":"ul"},"type":"Xml"},{"paths":["ul.li[0].a","ul.li[1].a","ul.li[2].a"],"xmlAsJson":{"children":[{"children":[{"children":[{"text":"book","tagName":""}],"attributes":[{"name":"href","value":"\"/book\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"orders","tagName":""}],"attributes":[{"name":"href","value":"\"/orders\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"help","tagName":""}],"attributes":[{"name":"href","value":"\"/help\""}],"tagName":"a"}],"attributes":[],"tagName":"li"}],"attributes":[],"tagName":"ul"},"type":"Xml"}]},{"id":"filters","type":"Section","title":"Filters","content":[{"type":"Paragraph","content":[{"text":"You can use filters to narrow down elements selected by finders.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Filter comes in a way of ","type":"SimpleText"},{"code":"get","type":"InlinedCode"},{"text":" method. Parameter is one of the following","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element number","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element text","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Element regexp","type":"SimpleText"}]}]}]},{"snippet":"def ordersMenu = $('ul li a').get(2)\nordersMenu.should == 'orders'","type":"Snippet","title":"Number","lang":"groovy"},{"snippet":"def ordersMenu = $('ul li a').get('orders')\nordersMenu.should == 'orders'","type":"Snippet","title":"Text","lang":"groovy"},{"snippet":"def ordersMenu = $('ul li a').get(~/ord/)\nordersMenu.should == 'orders'","type":"Snippet","title":"Regexp","lang":"groovy"},{"meta":{"rightSide":true},"paths":["ul.li[1].a"],"xmlAsJson":{"children":[{"children":[{"children":[{"text":"book","tagName":""}],"attributes":[{"name":"href","value":"\"/book\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"orders","tagName":""}],"attributes":[{"name":"href","value":"\"/orders\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"help","tagName":""}],"attributes":[{"name":"href","value":"\"/help\""}],"tagName":"a"}],"attributes":[],"tagName":"li"}],"attributes":[],"tagName":"ul"},"type":"Xml"}]},{"id":"chaining","type":"Section","title":"Chaining","content":[{"type":"Paragraph","content":[{"text":"After you filtered, you can use finders again to find nested elements.","type":"SimpleText"}]},{"snippet":"def ordersMenu = $('ul li').get(2).find('a')\nordersMenu.should == 'orders'","type":"Snippet","title":"Nested css selector","lang":"groovy"},{"meta":{"rightSide":true},"paths":["ul.li[1].a"],"xmlAsJson":{"children":[{"children":[{"children":[{"text":"book","tagName":""}],"attributes":[{"name":"href","value":"\"/book\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"orders","tagName":""}],"attributes":[{"name":"href","value":"\"/orders\""}],"tagName":"a"}],"attributes":[],"tagName":"li"},{"children":[{"children":[{"text":"help","tagName":""}],"attributes":[{"name":"href","value":"\"/help\""}],"tagName":"a"}],"attributes":[],"tagName":"li"}],"attributes":[],"tagName":"ul"},"type":"Xml"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Finders And Filters","pageMeta":{"type":["two-sides"]},"dirName":"browser","fileName":"finders-and-filters","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Finders","id":"finders"},{"title":"CSS Finder","id":"css-finder"},{"title":"Filters","id":"filters"},{"title":"Chaining","id":"chaining"}]}},{"type":"Page","content":[{"id":"text","type":"Section","title":"Text","content":[{"snippet":"def message = $(\"#message\")\nmessage.should == \"Select option\"","type":"Snippet","title":"exact text","lang":"groovy"},{"snippet":"def message = $(\"#message\")\nmessage.should == ~/option/","type":"Snippet","title":"regexp text","lang":"groovy"},{"snippet":"def menu = $(\"#menu ul li\")\nmenu.should == [\"Hello\", \"Text\", \"World\"]","type":"Snippet","title":"list of text","lang":"groovy"},{"snippet":"def message = $(\"#message\")\nmessage.should contain(\"option\")","type":"Snippet","title":"contain text in the first matched element","lang":"groovy"},{"snippet":"def menu = $(\"#menu ul li\").all()\nmenu.should contain(\"Text\")","type":"Snippet","title":"contain exact text in list of elements","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"all()","type":"InlinedCode"},{"text":" is used at element declaration time to disambiguate between contain text in the first element and in the list of elements.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"It is not required when you do an explicit comparison with the list on the right, since then WebTau can deduce the desired outcome.","type":"SimpleText"}]},{"snippet":"def menu = $(\"#menu ul li\")\nmenu.should == [\"Hello\", ~/T..t/, \"World\"]","type":"Snippet","title":"list of text and regexp","lang":"groovy"},{"paths":[],"meta":{"rightSide":true},"xmlAsJson":{"children":[{"children":[{"text":"Select option","tagName":""}],"attributes":[{"name":"id","value":"\"message\""}],"tagName":"div"},{"children":[{"children":[{"children":[{"text":"Hello","tagName":""}],"attributes":[],"tagName":"li"},{"children":[{"text":"Text","tagName":""}],"attributes":[],"tagName":"li"},{"children":[{"text":"World","tagName":""}],"attributes":[],"tagName":"li"}],"attributes":[],"tagName":"ul"}],"attributes":[{"name":"id","value":"\"menu\""}],"tagName":"div"}],"attributes":[],"tagName":"div"},"type":"Xml"}]},{"id":"numbers","type":"Section","title":"Numbers","content":[{"snippet":"def total = $(\"#total\")\ntotal.should == 300.6","type":"Snippet","title":"exact number","lang":"groovy"},{"snippet":"def total = $(\"#total\")\ntotal.shouldBe > 200","type":"Snippet","title":"greater than","lang":"groovy"},{"snippet":"def total = $(\"#total\")\ntotal.shouldBe >= 300","type":"Snippet","title":"greater than or equal","lang":"groovy"},{"snippet":"def split = $(\"#split ul li\")\nsplit.should == [100, 28, 172.6]","type":"Snippet","title":"list of numbers","lang":"groovy"},{"snippet":"def split = $(\"#split ul li\")\nsplit.should == [100, lessThan(100), greaterThanOrEqual(150)]","type":"Snippet","title":"list of exact and greater/less","lang":"groovy"},{"paths":[],"meta":{"rightSide":true},"xmlAsJson":{"children":[{"children":[{"text":"300.6","tagName":""}],"attributes":[{"name":"id","value":"\"total\""}],"tagName":"div"},{"children":[{"children":[{"children":[{"text":"100","tagName":""}],"attributes":[],"tagName":"li"},{"children":[{"text":"28","tagName":""}],"attributes":[],"tagName":"li"},{"children":[{"text":"172.6","tagName":""}],"attributes":[],"tagName":"li"}],"attributes":[],"tagName":"ul"}],"attributes":[{"name":"id","value":"\"split\""}],"tagName":"div"}],"attributes":[],"tagName":"div"},"type":"Xml"}]},{"id":"state","type":"Section","title":"State","content":[{"snippet":"def button = $(\"#action\")\nbutton.should beDisabled()\nbutton.shouldNot beEnabled()","type":"Snippet","title":"enabled/disabled","lang":"groovy"},{"snippet":"def feedback = $(\"#feedback\")\nfeedback.should beHidden()\nfeedback.shouldNot beVisible()","type":"Snippet","title":"visible/hidden","lang":"groovy"},{"snippet":"<div> <button id=\"action\" disabled>Click me</button> \n <div id=\"feedback\" style=\"display: none;\"></div> \n</div>","meta":{"rightSide":true},"type":"Snippet","lang":"html"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Browser","pageTitle":"Matchers","pageMeta":{"type":["two-sides"]},"dirName":"browser","fileName":"matchers","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Text","id":"text"},{"title":"Numbers","id":"numbers"},{"title":"State","id":"state"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"server.","type":"InlinedCode"},{"text":" module lets you create and control static, fake and proxy servers:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Static servers to quickly host HTML, JSON, and similar content","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fake servers to control response based request","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Proxy servers to simulate outages and record interactions for failures investigation","type":"SimpleText"}]}]}]},{"snippet":"def myServer = server.serve(\"my-server\", \"data/staticcontent\")","surroundedBy":"static-server-create","type":"Snippet","title":"static server creation example","lang":"groovy"},{"snippet":"def router = server.router() // router-example\n        .get(\"/hello/:name\") { request -> server.response([message: \"hello ${request.param(\"name\")}\"]) } // router-example\n        .get(\"/bye/:name\") { request -> server.response([message: \"bye ${request.param(\"name\")}\"]) } // router-example\n// router-example\ndef myServer = server.fake(\"my-rest-server\", router) // router-example","commentsType":"remove","type":"Snippet","title":"fake server creation example","lang":"groovy","includeRegexp":"router-example"},{"snippet":"def proxyServer = server.proxy(\"test-proxy-server\", targetServer.baseUrl)","surroundedBy":"proxy-server-creation","type":"Snippet","title":"proxy server creation example","lang":"groovy"},{"type":"Paragraph","content":[{"text":"You can apply overrides to any created server. You can also put servers into a \"bad\" state.","type":"SimpleText"}]},{"snippet":"proxyServer.markUnresponsive()","surroundedBy":"mark-unresponsive-example","type":"Snippet","title":"unresponsive server","lang":"groovy"},{"snippet":"def router = server.router()\n        .get(\"/hello/:name\") {request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\nmyServer.addOverride(router)","surroundedBy":"override-example","type":"Snippet","title":"content override","lang":"groovy"}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Servers","pageTitle":"Introduction","pageMeta":{},"dirName":"servers","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"serve-static-content","type":"Section","title":"Serve Static Content","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.serve","type":"InlinedCode"},{"text":" to start a server on random port","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"that will host static content from the specified directory.","type":"SimpleText"}]},{"snippet":"def myServer = server.serve(\"my-server\", \"data/staticcontent\")","surroundedBy":"static-server-create","type":"Snippet","title":"create and start server","lang":"groovy"},{"snippet":"{\n  \"id\": \"user-one\",\n  \"type\": \"person\"\n}","type":"Snippet","title":"data/staticcontent/data.json","autoTitle":true,"lang":"json"},{"snippet":"http.get(\"${myServer.baseUrl}/data.json\") {\n    body.type == \"person\"\n}","surroundedBy":"static-server-json","type":"Snippet","title":"testing response from a static server","lang":"groovy"}]},{"id":"host-html-for-browser","type":"Section","title":"Host Html For Browser","content":[{"type":"Paragraph","content":[{"text":"Use static server to host html files and then open them using a browser.","type":"SimpleText"}]},{"snippet":"<body>\n<p>hello</p>\n</body>","type":"Snippet","title":"data/staticcontent/hello.html","autoTitle":true,"lang":"html"},{"snippet":"browser.open(\"${myServer.baseUrl}/hello.html\")\n$(\"p\").should == \"hello\"","surroundedBy":"static-server-html","type":"Snippet","title":"open browser using static contet","lang":"groovy"}]},{"id":"override-response","type":"Section","title":"Override Response","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"addOverride","type":"InlinedCode"},{"text":" to modify response of a proxied server","type":"SimpleText"}]},{"snippet":"def router = server.router()\n        .get(\"/hello/:name\") {request -> server.response([message: \"hello ${request.param(\"name\")}\"]) }\nmyServer.addOverride(router)","surroundedBy":"override-example","type":"Snippet","title":"content override","lang":"groovy"}]},{"id":"server-slowdown","type":"Section","title":"Server Slowdown","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markUnresponsive","type":"InlinedCode"},{"text":" to mark server as unresponsive","type":"SimpleText"}]},{"snippet":"staticServer.markUnresponsive()\n\ncode {\n    http.get(\"${staticServer.baseUrl}/hello.html\")\n} should throwException(~/Read timed out/)","surroundedBy":"mark-unresponsive","type":"Snippet","title":"mark as unresponsive","lang":"groovy"}]},{"id":"server-break","type":"Section","title":"Server Break","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" to mark server as broken","type":"SimpleText"}]},{"snippet":"staticServer.markBroken()\n\nhttp.get(\"${staticServer.baseUrl}/hello.html\") {\n    statusCode.should == 500\n    body.should == null\n}","surroundedBy":"mark-broken","type":"Snippet","title":"mark as broken","lang":"groovy"}]},{"id":"server-fix","type":"Section","title":"Server Fix","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fix","type":"InlinedCode"},{"text":" to remove broken and/or slowdown state","type":"SimpleText"}]},{"snippet":"staticServer.fix()","surroundedBy":"mark-fix","type":"Snippet","title":"fix server","lang":"groovy"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Servers","pageTitle":"Static Server","pageMeta":{},"dirName":"servers","fileName":"static-server","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Serve Static Content","id":"serve-static-content"},{"title":"Host Html For Browser","id":"host-html-for-browser"},{"title":"Override Response","id":"override-response"},{"title":"Server Slowdown","id":"server-slowdown"},{"title":"Server Break","id":"server-break"},{"title":"Server Fix","id":"server-fix"}]}},{"type":"Page","content":[{"id":"proxy-servers-creation","type":"Section","title":"Proxy Servers Creation","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.proxy","type":"InlinedCode"},{"text":" to create a proxy server by specifying target url","type":"SimpleText"}]},{"snippet":"def proxyServer = server.proxy(\"test-proxy-server\", targetServer.baseUrl)","surroundedBy":"proxy-server-creation","type":"Snippet","title":"proxy server creation example","lang":"groovy"}]},{"id":"override-calls","type":"Section","title":"Override Calls","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"addOverride","type":"InlinedCode"},{"text":" to modify response of a proxied server","type":"SimpleText"}]},{"snippet":"def router = server.router(\"optional-router-id\")\nrouter.get(\"/another/{id}\", (request) -> server.response([anotherId: request.param(\"id\")]))\n\nproxyServer.addOverride(router)","surroundedBy":"proxy-add-override","type":"Snippet","title":"call override","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: override will not call proxied server, and will return a provided response","type":"SimpleText"}]}]},{"id":"preserve-original-call","type":"Section","title":"Preserve Original Call","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"HTTP Module","type":"SimpleText"}],"url":"/webtau/HTTP/introduction"},{"text":" to issue a call to a destination server with a possibility to change a request and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"provide a modified response.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Example of a proxy server that makes original call, but returns an error","type":"SimpleText"}]},{"snippet":"def router = server.router().post(\"/hello\", { request ->\n    def message = http.post(http.concatUrl(proxyServer.urlToProxy, request.uri),\n            http.header(request.header), request.contentAsMap) {\n        return body.message\n    }\n\n    // optional logic with original response\n\n    return server.statusCode(500)\n})\n\nproxyServer.addOverride(router)","excludeRegexp":"capturedMessages","surroundedBy":"override-with-original-call","type":"Snippet","title":"original call and faked error response","lang":"groovy"}]},{"id":"server-slowdown","type":"Section","title":"Server Slowdown","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markUnresponsive","type":"InlinedCode"},{"text":" to mark server as unresponsive","type":"SimpleText"}]},{"snippet":"proxyServer.markUnresponsive()","surroundedBy":"mark-unresponsive","type":"Snippet","title":"mark as unresponsive","lang":"groovy"},{"snippet":"code {\n    http.get(\"${proxyServer.baseUrl}/another/hello\") {\n        body.should == [anotherId: \"hello\"]\n    }\n} should throwException(~/Read timed out/)","surroundedBy":"unresponsive-time-out-throw","type":"Snippet","title":"unresponsive timeout","lang":"groovy"}]},{"id":"server-break","type":"Section","title":"Server Break","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" to mark server as broken","type":"SimpleText"}]},{"snippet":"proxyServer.markBroken()","surroundedBy":"mark-broken","type":"Snippet","title":"mark as broken","lang":"groovy"},{"snippet":"http.get(\"${proxyServer.baseUrl}/hello.html\") {\n    statusCode.should == 500\n    body.should == null\n}","surroundedBy":"mark-broken-response","type":"Snippet","title":"broken server response","lang":"groovy"}]},{"id":"server-fix","type":"Section","title":"Server Fix","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fix","type":"InlinedCode"},{"text":" to remove broken and/or slowdown state","type":"SimpleText"}]},{"snippet":"proxyServer.fix()","surroundedBy":"mark-fix","type":"Snippet","title":"fix server","lang":"groovy"}]},{"id":"max-threads","type":"Section","title":"Max Threads","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"serverProxyMaxThreads","type":"InlinedCode"},{"text":" to change max number of threads available for proxy server","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Servers","pageTitle":"Proxy Server","pageMeta":{},"dirName":"servers","fileName":"proxy-server","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Proxy Servers Creation","id":"proxy-servers-creation"},{"title":"Override Calls","id":"override-calls"},{"title":"Preserve Original Call","id":"preserve-original-call"},{"title":"Server Slowdown","id":"server-slowdown"},{"title":"Server Break","id":"server-break"},{"title":"Server Fix","id":"server-fix"},{"title":"Max Threads","id":"max-threads"}]}},{"type":"Page","content":[{"id":"fake-server-creation","type":"Section","title":"Fake Server Creation","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"server.fake","type":"InlinedCode"},{"text":" to create a server with controlled responses","type":"SimpleText"}]},{"snippet":"def router = server.router() // router-example\n        .get(\"/hello/:name\") { request -> server.response([message: \"hello ${request.param(\"name\")}\"]) } // router-example\n        .get(\"/bye/:name\") { request -> server.response([message: \"bye ${request.param(\"name\")}\"]) } // router-example\n// router-example\ndef myServer = server.fake(\"my-rest-server\", router) // router-example","commentsType":"remove","type":"Snippet","title":"fake server creation example","lang":"groovy","includeRegexp":"router-example"},{"snippet":"http.get(\"${myServer.baseUrl}/hello/person\") {\n    message.should == \"hello person\"\n}\n\nhttp.get(\"${myServer.baseUrl}/bye/person\") {\n    message.should == \"bye person\"\n}","surroundedBy":"fake-response-check","type":"Snippet","title":"fake server creation example","lang":"groovy"}]},{"id":"server-slowdown","type":"Section","title":"Server Slowdown","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markUnresponsive","type":"InlinedCode"},{"text":" to mark server as unresponsive","type":"SimpleText"}]},{"snippet":"myServer.markUnresponsive()\n\ncode {\n    http.get(\"${myServer.baseUrl}/hello/person\") {\n        message.should == \"hello person\"\n    }\n} should throwException(~/Read timed out/)","surroundedBy":"mark-unresponsive","type":"Snippet","title":"mark as unresponsive","lang":"groovy"}]},{"id":"server-break","type":"Section","title":"Server Break","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" to mark server as broken","type":"SimpleText"}]},{"snippet":"myServer.markBroken()\n\nhttp.get(\"${myServer.baseUrl}/hello/person\") {\n    statusCode.should == 500\n    body.should == null\n}","surroundedBy":"mark-broken","type":"Snippet","title":"mark as broken","lang":"groovy"}]},{"id":"server-fix","type":"Section","title":"Server Fix","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"fix","type":"InlinedCode"},{"text":" to remove broken and/or slowdown state","type":"SimpleText"}]},{"snippet":"myServer.fix()\n\nhttp.get(\"${myServer.baseUrl}/hello/person\") {\n    message.should == \"hello person\"\n}","surroundedBy":"mark-fix","type":"Snippet","title":"fix server","lang":"groovy"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Servers","pageTitle":"Fake Server","pageMeta":{},"dirName":"servers","fileName":"fake-server","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Fake Server Creation","id":"fake-server-creation"},{"title":"Server Slowdown","id":"server-slowdown"},{"title":"Server Break","id":"server-break"},{"title":"Server Fix","id":"server-fix"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau provides ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":" module to run and validate command line tools.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Combine it with other modules to create powerful tests: use ","type":"SimpleText"},{"code":"cli","type":"InlinedCode"},{"text":" to run a tool, and","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"http","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"graphql","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser","type":"InlinedCode"},{"text":", or ","type":"SimpleText"},{"code":"db","type":"InlinedCode"},{"text":" to validate the outcome.","type":"SimpleText"}]},{"snippet":"scenario(\"example of ls run\") {\n    cli.run('ls') {\n        output.should contain('scripts')\n    }\n}","excludeRegexp":["package","import","doc.capture"],"type":"Snippet","title":"basicLs.groovy","lang":"groovy"},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau basicLs.groovy"},{"snippet":"data\ndbproviders\ndoc-artifacts\nformHandlers\nlisteners\npages\npersonas\nscenarios\nschemas\nscripts\nuse-cases.csv","highlight":[9],"highlightPath":"doc-artifacts/ls-run/out.matched.txt","type":"Snippet","lang":"txt"}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Cli","pageTitle":"Introduction","pageMeta":{},"dirName":"cli","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau can run commands in ","type":"SimpleText"},{"code":"foreground","type":"InlinedCode"},{"text":" and in ","type":"SimpleText"},{"code":"background","type":"InlinedCode"},{"text":". When command is ran in ","type":"SimpleText"},{"code":"foreground","type":"InlinedCode"},{"text":" WebTau will","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"wait for the command to finish.","type":"SimpleText"}]},{"id":"run","type":"Section","title":"Run","content":[{"type":"Paragraph","content":[{"text":"To run a command use ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" with a single string parameter that includes a command and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"all its arguments:","type":"SimpleText"}]},{"snippet":"cli.run('echo hello world')","type":"Snippet","title":"run command","lang":"groovy"}]},{"id":"run-with-validation","type":"Section","title":"Run With Validation","content":[{"snippet":"cli.run('echo hello world') {\n    output.should contain('hello')\n    output.should contain('world')\n}","type":"Snippet","title":"output validation","lang":"groovy"},{"snippet":"cli.run('scripts/error-output') {\n    error.should == 'error B892T'\n}","type":"Snippet","title":"error validation","lang":"groovy"},{"snippet":"cli.run('scripts/exit-code 8') {\n    exitCode.should == 8\n    exitCode.shouldNot == 0\n}","type":"Snippet","title":"exit code validation","lang":"groovy"}]},{"id":"implicit-exit-code-validation","type":"Section","title":"Implicit Exit Code Validation","content":[{"type":"Paragraph","content":[{"text":"WebTau performs implicit exit code validation and adds ","type":"SimpleText"},{"code":"exitCode","type":"InlinedCode"},{"text":" equals zero when","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"you don't specify explicit ","type":"SimpleText"},{"code":"exitCode","type":"InlinedCode"},{"text":" validation.","type":"SimpleText"}]},{"snippet":"cli.run('echo hello world')","type":"Snippet","title":"implicit exit validation happens here","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Example above is equivalent to","type":"SimpleText"}]},{"snippet":"cli.run('echo hello world') {\n    exitCode.should == 0\n}","type":"Snippet","title":"WebTau performs exit code check if you don't write explicit validation","lang":"groovy"}]},{"id":"run-result","type":"Section","title":"Run Result","content":[{"type":"Paragraph","content":[{"text":"Use the result of ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" if you need to process the output of the command.","type":"SimpleText"}]},{"snippet":"def result = cli.run('scripts/my-script') {\n    exitCode.shouldNot == 0\n}\n\nprintln result.output\nprintln result.error\nif (result.exitCode == 1) {\n    // ...\n}","excludeRegexp":"hide-docs","type":"Snippet","title":"using run result","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Warning: Perform validation inside validation block so WebTau can track what was checked.","type":"SimpleText"}]},{"endLine":"example","snippet":"def result = cli.run('scripts/generate-id')\ndef id = result.extractFromOutputByRegexp(\"id=(\\\\d+)\")","excludeStartEnd":true,"startLine":"example","type":"Snippet","title":"extract from output by regexp","lang":"groovy"},{"endLine":"example","snippet":"def result = cli.run('scripts/generate-id')\ndef id = result.extractFromErrorByRegexp(\"id=(\\\\d+)\")","excludeStartEnd":true,"startLine":"example","type":"Snippet","title":"extract from error by regexp","lang":"groovy"}]},{"id":"working-dir","type":"Section","title":"Working Dir","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.workingDir","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" to set a working dir:","type":"SimpleText"}]},{"snippet":"cli.run('./listing', cli.workingDir('scripts')) {\n    output.should contain('listing files')\n    output.should contain('sleeps')\n}","type":"Snippet","title":"set working dir","lang":"groovy"}]},{"id":"environment-variables","type":"Section","title":"Environment Variables","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.env","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" to set the environment variables:","type":"SimpleText"}]},{"snippet":"#!/bin/bash\necho \"hello $MY_VAR\"","type":"Snippet","title":"scripts/hello-env-var","autoTitle":true,"lang":""},{"snippet":"cli.run('scripts/hello-env-var', cli.env([MY_VAR: 'webtau'])) {\n    output.should == 'hello webtau'\n}","type":"Snippet","title":"set environment variable","lang":"groovy"}]},{"id":"common-environment-variables","type":"Section","title":"Common Environment Variables","content":[{"type":"Paragraph","content":[{"text":"Set ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value with environment values that needs to be passed to each ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"snippet":"cliEnv {\n    MY_VAR = \"webtau\"\n    PREFIX_VAR = \"__\"\n}","surroundedBy":"default-my-var","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"snippet":"cli.run('scripts/hello-env-var') {\n    output.should == 'hello webtau'\n}","type":"Snippet","title":"use environment variable from config","lang":"groovy"}]},{"id":"chain-cli-run-config","type":"Section","title":"Chain Cli Run Config","content":[{"type":"Paragraph","content":[{"text":"Combine configs by using ","type":"SimpleText"},{"code":"cli.env(...).workingDir(...)","type":"InlinedCode"},{"text":" in any order to set both:","type":"SimpleText"}]},{"snippet":"cli.run('./hello-env-var',\n        cli.workingDir('scripts').env([MY_VAR: 'webtau'])) {\n    output.should == 'hello webtau'\n}","type":"Snippet","title":"set environment variable and working dir","lang":"groovy"}]},{"id":"path","type":"Section","title":"Path","content":[{"type":"Paragraph","content":[{"text":"To specify ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":" to use for CLI commands lookup use","type":"SimpleText"}]},{"snippet":"cliPath = ['scripts/more']","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]},{"id":"timeout","type":"Section","title":"Timeout","content":[{"type":"Paragraph","content":[{"code":"cli.run","type":"InlinedCode"},{"text":" command fails if it doesn't complete in 30 seconds.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"To override default timeout use ","type":"SimpleText"},{"code":"cliTimeout","type":"InlinedCode"},{"text":" config value:","type":"SimpleText"}]},{"snippet":"cliTimeout = 400","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To override timeout for a specific ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" use","type":"SimpleText"}]},{"snippet":"cli.run(\"scripts/sleeps\", cli.timeout(300))","type":"Snippet","title":"local override","lang":"groovy","includeRegexp":"cli.timeout"},{"type":"Paragraph","content":[{"text":"Note: Timeout value is specified in milliseconds","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Cli","pageTitle":"Foreground Command","pageMeta":{},"dirName":"cli","fileName":"foreground-command","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Run","id":"run"},{"title":"Run With Validation","id":"run-with-validation"},{"title":"Implicit Exit Code Validation","id":"implicit-exit-code-validation"},{"title":"Run Result","id":"run-result"},{"title":"Working Dir","id":"working-dir"},{"title":"Environment Variables","id":"environment-variables"},{"title":"Common Environment Variables","id":"common-environment-variables"},{"title":"Chain Cli Run Config","id":"chain-cli-run-config"},{"title":"Path","id":"path"},{"title":"Timeout","id":"timeout"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau can run commands in ","type":"SimpleText"},{"code":"foreground","type":"InlinedCode"},{"text":" and in ","type":"SimpleText"},{"code":"background","type":"InlinedCode"},{"text":". When command is ran in ","type":"SimpleText"},{"code":"background","type":"InlinedCode"},{"text":" WebTau","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"will continue execution, leaving command to run its course.","type":"SimpleText"}]},{"id":"run-in-background","type":"Section","title":"Run In Background","content":[{"type":"Paragraph","content":[{"text":"To run a command in a background use ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" with a single string parameter that includes a command and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"all its arguments:","type":"SimpleText"}]},{"snippet":"cli.runInBackground('scripts/sleeps')\nprintln \"process above may still be running\"","type":"Snippet","title":"run command in background","lang":"groovy"}]},{"id":"stop-command","type":"Section","title":"Stop Command","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".stop","type":"InlinedCode"},{"text":" to explicitly terminate the running background command","type":"SimpleText"}]},{"snippet":"def command = cli.runInBackground('scripts/sleeps')\nprintln \"some commands that assume running process\"\n\ncommand.stop()","type":"Snippet","title":"command termination","lang":"groovy"}]},{"id":"interacting-with-command","type":"Section","title":"Interacting With Command","content":[{"type":"Paragraph","content":[{"text":"We are going to test a \"hello world\" script that asks you for a name and greet you:","type":"SimpleText"}]},{"snippet":"#!/bin/bash\necho \"enter your name\"\nread name\necho \"hello $name\"","type":"Snippet","title":"scripts/hello-world","lang":""},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".send","type":"InlinedCode"},{"text":" to send input to a running command. Use ","type":"SimpleText"},{"code":".output.waitTo","type":"InlinedCode"},{"text":" to wait for command to rich a certain state:","type":"SimpleText"}]},{"snippet":"def helloWorld = cli.runInBackground(\"scripts/hello-world\")\nhelloWorld.output.waitTo contain(\"enter your name\")\n\nhelloWorld.send(\"webtau\\n\")\nhelloWorld.output.waitTo contain(\"hello webtau\")\n\nhelloWorld.stop()","type":"Snippet","title":"wait and send input","lang":"groovy"},{"type":"Paragraph","content":[{"text":"You can use ","type":"SimpleText"},{"code":"<<","type":"InlinedCode"},{"text":" instead of ","type":"SimpleText"},{"code":".send","type":"InlinedCode"},{"text":" for extra syntax sugar:","type":"SimpleText"}]},{"snippet":"def helloWorld = cli.runInBackground(\"scripts/hello-world\")\nhelloWorld.output.waitTo contain(\"enter your name\")\n\nhelloWorld << \"webtau\\n\"\nhelloWorld.output.waitTo contain(\"hello webtau\")\n\nhelloWorld.stop()","type":"Snippet","title":"use << as .send","lang":"groovy"}]},{"id":"wait-timeout","type":"Section","title":"Wait Timeout","content":[{"type":"Paragraph","content":[{"text":"By default, WebTau ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" waits 5 seconds for a condition to become true.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This value can be changed either globally by using ","type":"SimpleText"},{"code":"waitTimeout","type":"InlinedCode"},{"text":" config value","type":"SimpleText"}]},{"snippet":"waitTimeout = 20000\n","type":"Snippet","title":"webtau.cfg.groovy","lineNumber":"","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To override wait timeout locally, use","type":"SimpleText"}]},{"snippet":"command.output.waitTo(contain(\"line two\"), 20_000)","surroundedBy":"local-timeout","type":"Snippet","title":"local timeout","lang":"groovy"}]},{"id":"working-dir","type":"Section","title":"Working Dir","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.workingDir","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" to set a working dir:","type":"SimpleText"}]},{"snippet":"def command = cli.runInBackground('./listing', cli.workingDir('scripts'))\ncommand.output.waitTo contain('listing files')\ncommand.output.waitTo contain('sleeps')\ncommand.stop()","type":"Snippet","title":"set working dir","lang":"groovy"}]},{"id":"environment-variables","type":"Section","title":"Environment Variables","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cli.env","type":"InlinedCode"},{"text":" as a second parameter to ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" to set the environment variables:","type":"SimpleText"}]},{"snippet":"#!/bin/bash\necho \"hello $MY_VAR\"","type":"Snippet","title":"scripts/hello-env-var","autoTitle":true,"lang":""},{"snippet":"def command = cli.runInBackground('scripts/hello-env-var', cli.env([MY_VAR: 'webtau']))\ncommand.output.waitTo contain('hello webtau')\ncommand.stop()","type":"Snippet","title":"set environment variable","lang":"groovy"}]},{"id":"common-environment-variables","type":"Section","title":"Common Environment Variables","content":[{"type":"Paragraph","content":[{"text":"Set ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value with environment values that needs to be passed to each ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":":","type":"SimpleText"}]},{"snippet":"cliEnv {\n    MY_VAR = \"webtau\"\n    PREFIX_VAR = \"__\"\n}","surroundedBy":"default-my-var","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"snippet":"def command = cli.runInBackground('scripts/hello-env-var')\ncommand.output.waitTo contain('hello webtau')\ncommand.stop()","type":"Snippet","title":"use environment variable from config","lang":"groovy"}]},{"id":"chain-cli-run-config","type":"Section","title":"Chain Cli Run Config","content":[{"type":"Paragraph","content":[{"text":"Combine configs by using ","type":"SimpleText"},{"code":"cli.env(...).workingDir(...)","type":"InlinedCode"},{"text":" in any order to set both:","type":"SimpleText"}]},{"snippet":"def command = cli.runInBackground('./hello-env-var',\n        cli.workingDir('scripts').env([MY_VAR: 'webtau']))\ncommand.output.waitTo contain('hello webtau')\ncommand.stop()","type":"Snippet","title":"set environment variable and working dir","lang":"groovy"}]},{"id":"path","type":"Section","title":"Path","content":[{"type":"Paragraph","content":[{"text":"To specify ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":" to use for CLI commands lookup use","type":"SimpleText"}]},{"snippet":"cliPath = ['scripts/more']","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Cli","pageTitle":"Background Command","pageMeta":{},"dirName":"cli","fileName":"background-command","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Run In Background","id":"run-in-background"},{"title":"Stop Command","id":"stop-command"},{"title":"Interacting With Command","id":"interacting-with-command"},{"title":"Wait Timeout","id":"wait-timeout"},{"title":"Working Dir","id":"working-dir"},{"title":"Environment Variables","id":"environment-variables"},{"title":"Common Environment Variables","id":"common-environment-variables"},{"title":"Chain Cli Run Config","id":"chain-cli-run-config"},{"title":"Path","id":"path"}]}},{"type":"Page","content":[{"id":"persona-context","type":"Section","title":"Persona Context","content":[{"type":"Paragraph","content":[{"text":"WebTau ","type":"SimpleText"},{"code":"persona","type":"InlinedCode"},{"text":" defines a user of your system with a context associated with that user.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Example of context: authentication credentials, browser, custom config parameters.","type":"SimpleText"}]},{"snippet":"scenario('context example') {\n    Alice {\n       step(\"do something in context of Alice\") {\n           customAction()\n       }\n    }\n\n    Bob {\n        step(\"do same thing in context of Bob\") {\n            customAction()\n        }\n    }\n}","surroundedBy":"context-example-snippet","type":"Snippet","title":"context example","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Alice and Bob execute the same action. Within the action we can access who","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"is the current persona and what is the ","type":"SimpleText"},{"code":"payload","type":"InlinedCode"},{"text":" of the persona.","type":"SimpleText"}]},{"snippet":"def customAction() {\n    def id = Persona.currentPersona.id\n    def authId = Persona.currentPersona.payload.authId // from persona payload\n    def email = cfg.email // from persona associated config override\n    step(\"custom action\", [authId: authId, email: email]) {\n        println \"authenticating $id\"\n    }\n}","entry":"customAction","commentsType":"inline","type":"Snippet","title":"same action performed by two personas","lang":"groovy"}]},{"id":"context-definition","type":"Section","title":"Context Definition","content":[{"type":"Paragraph","content":[{"text":"Persona is defined with ","type":"SimpleText"},{"code":"persona","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Persona can be created in place or in centralized place","type":"SimpleText"}]},{"snippet":"package personas\n\nimport static org.testingisdocumenting.webtau.WebTauCore.persona\n\nclass Personas {\n    public static def Alice = persona(\"Alice\", [authId: \"alice-user-id\"])\n    public static def Bob = persona(\"Bob\", [authId: \"bob-user-id\"])\n}","type":"Snippet","title":"centralized persona definition with payload","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Per persona config section let you define or override any config value, including","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"timeouts, browser preferences, etc","type":"SimpleText"}]},{"endLine":"personas-cfg","snippet":"email = \"default@email.send\"\ncustomValue = 100\n\npersonas {\n    Alice {\n        email = \"alice@email.send\"\n        customValue = 105\n    }\n\n    Bob {\n        email = \"bob@email.send\"\n        customValue = 110\n    }\n}","excludeStartEnd":true,"startLine":"personas-cfg","type":"Snippet","title":"persona specific config","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Snippet from above example to show how to access config values and payload","type":"SimpleText"}]},{"snippet":"def authId = Persona.currentPersona.payload.authId // from persona payload\ndef email = cfg.email // from persona associated config override","entry":"customAction","commentsType":"inline","type":"Snippet","title":"access payload and config example","lang":"groovy","includeRegexp":["def authId","def email"]}]},{"id":"report","type":"Section","title":"Report","content":[{"type":"Paragraph","content":[{"text":"Report captures what step was performed by what persona","type":"SimpleText"}]},{"fit":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/persona-concept-steps.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578889784}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Persona","pageTitle":"Introduction","pageMeta":{},"dirName":"persona","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Persona Context","id":"persona-context"},{"title":"Context Definition","id":"context-definition"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"id":"authorization","type":"Section","title":"Authorization","content":[{"type":"Paragraph","content":[{"text":"In ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"http headers","type":"SimpleText"}],"url":"/webtau/HTTP/headers#implicit-header"},{"text":" section we defined how to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"an implicit header provider to enable authentication/authorization","type":"SimpleText"}]},{"snippet":"package scenarios.rest.headers\n\nimport scenarios.rest.headers.auth.Auth\n\nurl = \"http://localhost:8080\"\n\nhttpHeaderProvider = Auth.&authHeader","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"snippet":"package scenarios.rest.headers.auth\n\nimport org.testingisdocumenting.webtau.http.HttpHeader\n\nclass Auth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        def token = generateToken()\n        return original.merge([Authorization: \"Bearer $token\"])\n    }\n\n    private static String generateToken() {\n        return \"jwt-token\"\n    }\n}","type":"Snippet","title":"scenarios/rest/headers/auth/Auth.groovy","lang":"groovy"}]},{"id":"persona-authorization","type":"Section","title":"Persona Authorization","content":[{"type":"Paragraph","content":[{"text":"Let's define authorization based on persona context.","type":"SimpleText"},{"type":"SoftLineBreak"},{"isFile":false,"type":"Link","content":[{"text":"Previously","type":"SimpleText"}],"url":"/webtau/persona/introduction#context-definition"},{"text":" we defined two personas","type":"SimpleText"}]},{"snippet":"package personas\n\nimport static org.testingisdocumenting.webtau.WebTauCore.persona\n\nclass Personas {\n    public static def Alice = persona(\"Alice\", [authId: \"alice-user-id\"])\n    public static def Bob = persona(\"Bob\", [authId: \"bob-user-id\"])\n}","type":"Snippet","title":"Alice and Bob","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Authorization test using persona concept looks like this","type":"SimpleText"}]},{"snippet":"package scenarios.rest.headers\n\nimport static personas.Personas.*\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"my bank balance\") {\n    Alice {\n        http.get(\"/statement\") {\n            balance.shouldBe > 100\n        }\n    }\n\n    Bob {\n        http.get(\"/statement\") {\n            balance.shouldBe < 50\n        }\n    }\n}","type":"Snippet","title":"persona http call","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To make this example work, let's update implicit header provider above to take into account persona context","type":"SimpleText"}]},{"snippet":"package scenarios.rest.headers.auth\n\nimport org.testingisdocumenting.webtau.http.HttpHeader\nimport static org.testingisdocumenting.webtau.WebTauDsl.*\n\nclass PersonaAuth {\n    static HttpHeader authHeader(String fullUrl, String url, HttpHeader original) {\n        def token = generateTokenBasedOnPersona()\n        return original.merge([Authorization: \"Bearer $token\"])\n    }\n\n    static String generateTokenBasedOnPersona() {\n        if (currentPersona.isDefault()) { // check if we are inside persona context or outside\n            return generateDefaultToken()\n        }\n\n        return generateTokenForSystemUserId(currentPersona.payload.authId) // use persona payload to generate required token\n    }\n\n    static String generateTokenForSystemUserId(String systemUserId) {\n        return \"dummy:$systemUserId\" // this is where you generate specific user auth token\n    }\n\n    static String generateDefaultToken() {\n        return \"dummy:default-user\" // this is where you generate default user auth token\n    }\n}","commentsType":"inline","type":"Snippet","title":"scenarios/rest/headers/auth/PersonaAuth.groovy","lang":"groovy"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Persona","pageTitle":"HTTP Persona","pageMeta":{},"dirName":"persona","fileName":"HTTP-persona","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Authorization","id":"authorization"},{"title":"Persona Authorization","id":"persona-authorization"}]}},{"type":"Page","content":[{"id":"environment-variables","type":"Section","title":"Environment Variables","content":[{"type":"Paragraph","content":[{"text":"Each persona can have their own ","type":"SimpleText"},{"code":"cli.run","type":"InlinedCode"},{"text":" environment variable overrides","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Common variables definition:","type":"SimpleText"}]},{"snippet":"cliEnv {\n    MY_VAR = \"webtau\"\n    PREFIX_VAR = \"__\"\n}","surroundedBy":"default-my-var","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Persona overrides","type":"SimpleText"}]},{"snippet":"personas {\n    Alice {\n        cliEnv.MY_VAR = \"Alice!\"\n    }\n\n    Bob {\n        cliEnv.MY_VAR = \"Bob!\"\n    }\n}","surroundedBy":"personas-my-var","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Script that prints env variable value","type":"SimpleText"}]},{"snippet":"#!/bin/bash\necho \"hello $MY_VAR\"","type":"Snippet","title":"scripts/hello-env-var","autoTitle":true,"lang":""},{"type":"Paragraph","content":[{"text":"Different value will be printed depending on the active persona","type":"SimpleText"}]},{"snippet":"Alice {\n    cli.run('scripts/hello-env-var') {\n        output.should == 'hello Alice!'\n    }\n}\n\nBob {\n    cli.run('scripts/hello-env-var') {\n        output.should == 'hello Bob!'\n    }\n}","type":"Snippet","title":"use environment variable from persona config","lang":"groovy"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Persona","pageTitle":"CLI Persona","pageMeta":{},"dirName":"persona","fileName":"CLI-persona","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Environment Variables","id":"environment-variables"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau provides database access layer ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" to help with data setup, validation and manipulation.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Use it in conjunction with other layers like ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":" to write more powerful tests.","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Data Setup","type":"SimpleText"}],"url":"/webtau/database/data-setup"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Data Query","type":"SimpleText"}],"url":"/webtau/database/data-query"}]}]}]},{"endLine":"2000 }","snippet":"PRICES << [ \"id\" | \"description\" | \"price\"] {\n          ___________________________________\n           \"id1\" | \"nice set\"    | 1000\n           \"id2\" | \"another set\" | 2000 }","entry":"should insert table data into a table","bodyOnly":true,"startLine":"PRICES <<","type":"Snippet","title":"example of data setup","lang":"groovy"},{"endLine":"query with where clause end","snippet":"def prices = db.query(\"select * from PRICES where id=:id\", [id: \"id1\"])\nprices.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000     }","entry":"query table with select statement and param","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"validate parts of a table","lang":"groovy"}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Database","pageTitle":"Introduction","pageMeta":{},"dirName":"database","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"handcrafted-data","type":"Section","title":"Handcrafted Data","content":[{"type":"Paragraph","content":[{"text":"One way to set up a DB state is to use handcrafted ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}],"url":"/webtau/reference/table-data"},{"text":".","type":"SimpleText"}]},{"endLine":"2000 }","snippet":"def PRICES = db.table(\"PRICES\") // declare PRICES table\nPRICES << [ \"id\" | \"description\" | \"price\"] { // append two rows to PRICES\n           ___________________________________\n           \"id1\" | \"nice set\"    | 1000\n           \"id2\" | \"another set\" | 2000 }","entry":"should use data source provider for primary database","bodyOnly":true,"startLine":"def PRICES","commentsType":"inline","type":"Snippet","title":"data setup with hand crafted table data","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Alternatively use list of maps as the parameter to perform multiple rows insertion","type":"SimpleText"}]},{"endLine":"2000]","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [\n        [id: \"id1\", description: \"nice set\", price: 1000],\n        [id: \"id2\", description: \"warm set\", price: 2000]]","entry":"should insert list of maps into table","bodyOnly":true,"startLine":"def PRICES","commentsType":"inline","type":"Snippet","title":"inserting multiple rows using list","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use map as the parameter to perform a single row insertion","type":"SimpleText"}]},{"endLine":"1000]","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [id: \"id1\", description: \"nice set\", price: 1000]","entry":"should insert single row into table","bodyOnly":true,"startLine":"def PRICES","commentsType":"inline","type":"Snippet","title":"inserting single row","lang":"groovy"}]},{"id":"semi-auto-generated-tabledata","type":"Section","title":"Semi-Auto Generated TableData","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"TableData","type":"SimpleText"}],"url":"/webtau/reference/table-data"},{"text":" has features like ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"permute","type":"SimpleText"}],"url":"/webtau/reference/table-data#permutations"},{"text":" and","type":"SimpleText"},{"type":"SoftLineBreak"},{"isFile":false,"type":"Link","content":[{"text":"cell.guid","type":"SimpleText"}],"url":"/webtau/reference/table-data#guid"},{"text":" among others.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Using them can reduce the effort required to maintain data setup.","type":"SimpleText"}]},{"endLine":"cell.above + 20","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << [     \"id\" | \"description\" |          \"available\" |                \"type\" |       \"price\" ] {\n           _____________________________________________________________________________________________\n           cell.guid | \"nice set\"    |                 true |                \"card\" |            1000 // cell.guid generates random guid that can be used for ids\n           cell.guid | \"nice set\"    |                 true |                \"card\" | cell.above + 10 // cell.above refers values above and can be modified with simple math operations\n           cell.guid | \"another set\" | permute(true, false) | permute(\"rts\", \"fps\") | cell.above + 20 } // permute generates additional rows generating new rows with all the permutations","entry":"use table data permute, above and guid to generate rows","bodyOnly":true,"startLine":"def PRICES","commentsType":"inline","type":"Snippet","title":"data setup with hand crafted table data","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: code above assumes ","type":"SimpleText"},{"code":"WebTauCore.*","type":"InlinedCode"},{"text":" static import or ","type":"SimpleText"},{"code":"WebTauGroovyDsl.*","type":"InlinedCode"},{"text":" static import","type":"SimpleText"}]},{"snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*","type":"Snippet","lang":"groovy","includeRegexp":"import.*Core"},{"type":"Table","title":"PRICES","table":{"data":[[[{"type":"Paragraph","content":[{"text":"f34eaf86-1b0a-4a5f-8773-bdd430152811","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"card","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"a497d582-3fa0-4833-ab00-561e32dae9e3","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"card","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1010","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"f1b31ae4-8368-4ab6-a553-9ea1b48ffa91","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"rts","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1030","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"41e6c06a-390d-442b-94fa-a2b81716c35c","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"rts","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1050","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"dde19db4-ec29-4d10-923f-a57a4915fefc","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"fps","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1070","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"1d3ff4eb-6846-4276-90ba-2cfd49373dd9","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"fps","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1090","type":"SimpleText"}]}]]],"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}]}}]},{"id":"external-file-tabledata","type":"Section","title":"External File TableData","content":[{"endLine":"data.csv.table","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES << data.csv.table('prices-db.csv')","entry":"use csv read data","bodyOnly":true,"startLine":"def PRICES","type":"Snippet","title":"data setup with CSV data","lang":"groovy"},{"snippet":"id, description, available, type, price\nid1, description1, true, card, 200\nid2, description2, false, rts, 400","type":"Snippet","title":"prices-db.csv","lang":"csv"},{"type":"Table","title":"PRICES","table":{"data":[[[{"type":"Paragraph","content":[{"text":"id1","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"description1","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"card","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"200","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"id2","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"description2","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"rts","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"400","type":"SimpleText"}]}]]],"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}]}}]},{"id":"cleaning-tables","type":"Section","title":"Cleaning Tables","content":[{"snippet":"db.update(\"delete from PRICES where price > :price\", [price: 950])","entry":"delete with params","bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"delete data","lang":"groovy","includeRegexp":"delete"},{"snippet":"db.update(\"delete from PRICES where price > :price\", 950)","entry":"delete with single param shortcut","bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"delete data with single param shortcut","lang":"groovy","includeRegexp":"delete"}]},{"id":"updating-tables","type":"Section","title":"Updating Tables","content":[{"type":"Table","title":"PRICES","table":{"data":[[[{"type":"Paragraph","content":[{"text":"id1","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"id2","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"2000","type":"SimpleText"}]}]]],"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}]}},{"snippet":"db.update(\"update PRICES set price=:price where id=:id\", [id: 'id2', price: 4000])","entry":"should run updates with params","bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"update data","lang":"groovy","includeRegexp":"db.update"},{"type":"Table","title":"PRICES after update","table":{"data":[[[{"type":"Paragraph","content":[{"text":"id1","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"nice set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"1000","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"id2","type":"SimpleText"}]}],[],[{"type":"Paragraph","content":[{"text":"another set","type":"SimpleText"}]}],[],[],[{"type":"Paragraph","content":[{"text":"4000","type":"SimpleText"}]}]]],"columns":[{"title":"ID"},{"title":"EXTERNAL_ID"},{"title":"DESCRIPTION"},{"title":"AVAILABLE"},{"title":"TYPE"},{"title":"PRICE"}]}}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Database","pageTitle":"Data Setup","pageMeta":{},"dirName":"database","fileName":"data-setup","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Handcrafted Data","id":"handcrafted-data"},{"title":"Semi-Auto Generated TableData","id":"semi-auto-generated-tabledata"},{"title":"External File TableData","id":"external-file-tabledata"},{"title":"Cleaning Tables","id":"cleaning-tables"},{"title":"Updating Tables","id":"updating-tables"}]}},{"type":"Page","content":[{"id":"full-table","type":"Section","title":"Full Table","content":[{"type":"Paragraph","content":[{"text":"To query all data from a table use:","type":"SimpleText"}]},{"endLine":"query whole table end","snippet":"def PRICES = db.table(\"PRICES\")\nPRICES.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000\n                 \"id2\" | \"another set\" | 2000 }","entry":"query method on table should be optional during comparison","excludeStartEnd":true,"bodyOnly":true,"startLine":"query whole table start","type":"Snippet","title":"validate whole table","lang":"groovy"}]},{"id":"custom-query","type":"Section","title":"Custom Query","content":[{"endLine":"query with where clause end","snippet":"def prices = db.query(\"select * from PRICES where id=:id\", [id: \"id1\"])\nprices.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000     }","entry":"query table with select statement and param","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"validate parts of a table","lang":"groovy"},{"endLine":"query with where clause end","snippet":"def prices = db.query(\"select * from PRICES where id=:id\", [id: \"id1\"])\nprices.should == [ID: \"id1\", \"DESCRIPTION\": \"nice set\", PRICE: 1000]","entry":"query table to match one row and assert against map","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"validate parts of a table against map","lang":"groovy"},{"endLine":"query with where clause end","snippet":"def prices = db.query(\"select * from PRICES where id in (:ids)\", [ids: [\"id1\", \"id2\"]])\nprices.should == [\"ID\" | \"DESCRIPTION\" | \"PRICE\"] {\n                 ___________________________________\n                 \"id1\" | \"nice set\"    | 1000\n                 \"id2\" | \"another set\" | 2000     }","entry":"query table with select statement and array param","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"use array as input","lang":"groovy"}]},{"id":"named-parameter-shortcut","type":"Section","title":"Named Parameter Shortcut","content":[{"type":"Paragraph","content":[{"text":"If your query uses a single unique placeholder name, you can pass a regular value instead of a ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"}]},{"endLine":"query with where clause end","snippet":"def prices = db.query(\"select * from PRICES where id=:id or external_id=:id\", \"id1\")\nprices.should == [ID: \"id1\", \"DESCRIPTION\": \"nice set\", PRICE: 1000]","entry":"query table to match one row using single param shortcut and assert against map","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"use regular value in case of one unique placeholder name","lang":"groovy"}]},{"id":"lazy-declaration","type":"Section","title":"Lazy Declaration","content":[{"type":"Paragraph","content":[{"code":"query","type":"InlinedCode"},{"text":" doesn't query database at the call time. It defines a query to be used later.","type":"SimpleText"}]},{"endLine":"query with where clause end","snippet":"def prices = db.query(\"select * from PRICES\")\n\nprices.shouldNot == []\ndb.update(\"delete from PRICES\")\nprices.should == []","entry":"create query is lazy","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"create query is lazy","lang":"groovy"},{"endLine":"query with where clause end","snippet":"def PRICES = db.table(\"PRICES\")\ndef numberOfItems = PRICES.queryCount()\n\nnumberOfItems.shouldNot == 0\ndb.update(\"delete from PRICES\")\nnumberOfItems.should == 0","entry":"lazy count query","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"lazy count query","lang":"groovy"}]},{"id":"single-value","type":"Section","title":"Single Value","content":[{"endLine":"query single value params end","snippet":"def price = db.query(\"select price from PRICES where id=:id\", [id: 'id1'])\nprice.should == 1000\nprice.shouldNot == 2000","entry":"should query single value with params","excludeStartEnd":true,"bodyOnly":true,"startLine":"query single value params start","type":"Snippet","title":"validate single value","lang":"groovy"}]},{"id":"wait-on-result","type":"Section","title":"Wait On Result","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"waitTo","type":"InlinedCode"},{"text":" on query result to continuously query database until condition is met or timeout is reached.","type":"SimpleText"}]},{"endLine":"query with where clause end","snippet":"def count = db.query(\"select count(*) from PRICES\")\ncount.should == 2\n\n// event happen somewhere to increase the number of rows...\ncount.waitTo == 3","entry":"wait for count to change","excludeStartEnd":true,"bodyOnly":true,"startLine":"query with where clause start","type":"Snippet","title":"wait for count to change","lang":"groovy"}]},{"id":"query-result-value","type":"Section","title":"Query Result Value","content":[{"type":"Paragraph","content":[{"text":"Value returned from ","type":"SimpleText"},{"code":"query","type":"InlinedCode"},{"text":" methods is an instance of ","type":"SimpleText"},{"code":"DbQuery","type":"InlinedCode"},{"text":" type.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"No actual query is performed when ","type":"SimpleText"},{"code":"DbQuery","type":"InlinedCode"},{"text":" instance is created. It holds information about what query is, and what its parameters","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and only performs query when validation is triggered.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"queryXXX","type":"InlinedCode"},{"text":" to access underlying value.","type":"SimpleText"}]},{"endLine":"single value access end","snippet":"def price = db.query(\"select price from PRICES where id=:id\", [id: 'id1'])\nif (price.singleValue() > 100) {\n    println(\"do something\")\n}","entry":"value returned from query is a special wrapper value","excludeStartEnd":true,"bodyOnly":true,"startLine":"single value access start","type":"Snippet","title":"access single value","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Avoid: When you use ","type":"SimpleText"},{"code":"queryXXX","type":"InlinedCode"},{"text":" for assertions you may lose additional report information","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Database","pageTitle":"Data Query","pageMeta":{},"dirName":"database","fileName":"data-query","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Full Table","id":"full-table"},{"title":"Custom Query","id":"custom-query"},{"title":"Named Parameter Shortcut","id":"named-parameter-shortcut"},{"title":"Lazy Declaration","id":"lazy-declaration"},{"title":"Single Value","id":"single-value"},{"title":"Wait On Result","id":"wait-on-result"},{"title":"Query Result Value","id":"query-result-value"}]}},{"type":"Page","content":[{"id":"jdbc","type":"Section","title":"JDBC","content":[{"type":"Paragraph","content":[{"text":"WebTau is JVM based API and it uses ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"JDBC","type":"SimpleText"}],"url":"https://en.wikipedia.org/wiki/Java_Database_Connectivity#:~:text=Java%20Database%20Connectivity%20(JDBC)%20is,used%20for%20Java%20database%20connectivity."},{"type":"SoftLineBreak"},{"text":"interface behind the scenes to connect to a database.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"You don't need to know how to use JDBC API as WebTau expose higher level APIs, but you will need to understand how","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to build JDBC connection url to be able to connect to a database.","type":"SimpleText"}]}]},{"id":"primary-database","type":"Section","title":"Primary Database","content":[{"type":"Paragraph","content":[{"text":"Primary DB config used when execute operations using ","type":"SimpleText"},{"code":"db.update","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.query","type":"InlinedCode"},{"text":", etc, without specifying data source name.","type":"SimpleText"}]},{"snippet":"import groovy.grape.Grape\n\nGrape.grab(group:'com.h2database', module: 'h2', version: '1.4.200', // auto download DB driver dependency (in this case H2 db)\n        classLoader: ClassLoader.getSystemClassLoader())\n\ndbUrl = \"jdbc:h2:file:~/h2db/test-db\" // primary DB JDBC connection url\ndbDriverClassName = \"org.h2.Driver\" // JDBC driver class name\ndbUserName = \"sa\"\ndbPassword = \"password\"","excludeRegexp":"package","commentsType":"inline","type":"Snippet","title":"Primary DB config","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Database","pageTitle":"Config","pageMeta":{},"dirName":"database","fileName":"config","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"JDBC","id":"jdbc"},{"title":"Primary Database","id":"primary-database"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau tracks all actions and assertions tests perform.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Actions and assertions are printed to console as well as available in the generated HTML report.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In a test details screen, there are multiple tabs.","type":"SimpleText"}]},{"startNumber":1,"delimiter":".","type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Layer specific details, e.g. HTTP, CLI, DB, Servers, etc","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Every action that was performed","type":"SimpleText"}]}]}]},{"fit":true,"annotationsPath":"doc-artifacts/reports/report-crud-steps.json","border":true,"shapes":[{"darkFriendly":true,"invertedColors":true,"color":"a","x":491,"y":16,"text":"1","id":"badge1","align":"Center","type":"badge"},{"darkFriendly":true,"invertedColors":true,"color":"a","x":576,"y":17,"text":"2","id":"badge2","align":"Center","type":"badge"}],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-http-calls.png","annotate":true,"type":"AnnotatedImage","height":802.0,"timestamp":1653578884668},{"fit":true,"border":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-crud-steps.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578885048},{"type":"Paragraph","content":[{"text":"Every WebTau standard action generates ","type":"SimpleText"},{"code":"WebTauStep","type":"InlinedCode"},{"text":". You can use WebTau API to wrap your repeating actions","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"into WebTau compatible steps.","type":"SimpleText"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Report","pageTitle":"Introduction","pageMeta":{},"dirName":"report","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"grouping-actions","type":"Section","title":"Grouping Actions","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":" core method to wrap a set of actions into a group","type":"SimpleText"}]},{"snippet":"step(\"group of actions\") {\n    actionOne()\n    actionTwo()\n}","surroundedBy":"wrap-step","type":"Snippet","title":"step group","lang":"groovy"},{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","type":"Snippet","title":"core methods import","lang":"groovy","includeRegexp":"WebTauGroovyDsl"}]},{"id":"tracing-values","type":"Section","title":"Tracing Values","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" core method to render key, values pairs to console and to web report.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"From report point of view ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" is an empty step.","type":"SimpleText"}]},{"snippet":"trace(\"trace label\", [k1: \"v1\", k2: \"v2\"])","surroundedBy":"trace-map","type":"Snippet","title":"trace key values","lang":"groovy"},{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*","type":"Snippet","title":"core methods import","lang":"groovy","includeRegexp":"WebTauGroovyDsl"}]},{"id":"grouping-with-trace","type":"Section","title":"Grouping With Trace","content":[{"type":"Paragraph","content":[{"text":"Pass key values to ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":" to combine ","type":"SimpleText"},{"code":"step","type":"InlinedCode"},{"text":" and `trace","type":"SimpleText"}]},{"snippet":"step(\"group of actions\", [url: baseUrl, port: myPort]) {\n    actionThree(myPort, baseUrl)\n}","surroundedBy":"wrap-step-key-value","type":"Snippet","title":"step group with key values","lang":"groovy"},{"fit":true,"border":true,"shapes":[],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-step-key-value.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578905625}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Report","pageTitle":"Steps","pageMeta":{},"dirName":"report","fileName":"steps","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Grouping Actions","id":"grouping-actions"},{"title":"Tracing Values","id":"tracing-values"},{"title":"Grouping With Trace","id":"grouping-with-trace"}]}},{"type":"Page","content":[{"id":"read-eval-print-loop","type":"Section","title":"Read Eval Print Loop","content":[{"type":"Paragraph","content":[{"text":"WebTau command line tool comes with a ","type":"SimpleText"},{"code":"REPL","type":"InlinedCode"},{"text":" mode that stands for 'read-eval-print-loop'. REPL is an established way to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"perform interactive execution of an API for the purpose of learning or experimenting.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The REPL preserves the context of execution and each new command you run can rely on the established context.","type":"SimpleText"}]}]},{"id":"start-repl","type":"Section","title":"Start REPL","content":[{"type":"Paragraph","content":[{"text":"To run WebTau in REPL mode run","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau repl"},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m 2 + 2","\u001B[1m===>\u001B[m 4","\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m a = 5","\u001B[1m===>\u001B[m 5","\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m a + 3","\u001B[1m===>\u001B[m 8"],"title":"REPL session"}]},{"id":"experiment-with-api","type":"Section","title":"Experiment With API","content":[{"type":"Paragraph","content":[{"text":"Use the REPL to try out various apis like ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":", etc.","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m http.get(\"https://jsonplaceholder.typicode.com/todos/1\")","\u001B[33m> \u001B[34mexecuting HTTP GET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[32mequals 200","      matches:","      ","      header.statusCode:   actual: 200 <java.lang.Integer>","                         expected: 200 <java.lang.Integer>\u001B[33m (\u001B[32m35ms\u001B[33m)\u001B[0m","  \u001B[33mresponse\u001B[36m (application/json; charset=utf-8):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"userId\": \u001B[36m1\u001B[33m,\u001B[0m","    \u001B[35m\"id\": \u001B[36m1\u001B[33m,\u001B[0m","    \u001B[35m\"title\": \u001B[32m\"delectus aut autem\"\u001B[33m,\u001B[0m","    \u001B[35m\"completed\": \u001B[36mfalse\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP GET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[33m (\u001B[32m715ms\u001B[33m)\u001B[0m"],"title":"exploring http.get"}]},{"id":"setting-config-value","type":"Section","title":"Setting Config Value","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cfg.url = \"http://url\"","type":"InlinedCode"},{"text":" to set base url for experiments.","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m cfg.url = \"https://jsonplaceholder.typicode.com\"","\u001B[33m> \u001B[34msetting \u001B[0m\u001B[1murl\u001B[0m","  \u001B[35msource\u001B[37m: \u001B[32mmanual\u001B[0m","  \u001B[35murl\u001B[37m: \u001B[32mhttps://jsonplaceholder.typicode.com\u001B[0m","\u001B[32m. \u001B[34mset \u001B[0m\u001B[1murl\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","\u001B[1m===>\u001B[m https://jsonplaceholder.typicode.com","\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m http.get(\"/todos/1\")","\u001B[33m> \u001B[34mexecuting HTTP GET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[0m","  \u001B[32m. \u001B[0m\u001B[1mheader.statusCode \u001B[32mequals 200","      matches:","      ","      header.statusCode:   actual: 200 <java.lang.Integer>","                         expected: 200 <java.lang.Integer>\u001B[33m (\u001B[32m0ms\u001B[33m)\u001B[0m","  \u001B[33mresponse\u001B[36m (application/json; charset=utf-8):\u001B[0m","  \u001B[33m{\u001B[0m","    \u001B[35m\"userId\": \u001B[36m1\u001B[33m,\u001B[0m","    \u001B[35m\"id\": \u001B[36m1\u001B[33m,\u001B[0m","    \u001B[35m\"title\": \u001B[32m\"delectus aut autem\"\u001B[33m,\u001B[0m","    \u001B[35m\"completed\": \u001B[36mfalse\u001B[0m","  \u001B[33m}\u001B[0m","\u001B[32m. \u001B[34mexecuted HTTP GET \u001B[35mhttps://jsonplaceholder.typicode.com/todos/1\u001B[33m (\u001B[32m25ms\u001B[33m)\u001B[0m"],"title":"setting cfg value"}]},{"id":"preserving-browser-context","type":"Section","title":"Preserving Browser Context","content":[{"type":"Paragraph","content":[{"text":"During browser testing the REPL preserves the context of an opened browser, so you can experiment","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"with css selectors and element actions without re-opening the browser and setting the right web app state.","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m browser.open(\"file:///home/runner/work/webtau/webtau/webtau-cli-testing/src/test/groovy/data/basic.html\")","\u001B[33m> \u001B[34minitializing \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[0m","\u001B[32m. \u001B[34minitialized \u001B[36mwebdriver \u001B[33mfor \u001B[0m\u001B[1mchrome\u001B[33m (\u001B[32m1s 474ms\u001B[33m)\u001B[0m","\u001B[33m> \u001B[34mopening \u001B[35mfile:///home/runner/work/webtau/webtau/webtau-cli-testing/src/test/groovy/data/basic.html\u001B[0m","\u001B[32m. \u001B[34mopened \u001B[35mfile:///home/runner/work/webtau/webtau/webtau-cli-testing/src/test/groovy/data/basic.html\u001B[33m (\u001B[32m99ms\u001B[33m)\u001B[0m"],"title":"opened browser stays"},{"type":"Paragraph","content":[{"text":"Using element selectors provides additional information in REPL mode to help with exploration","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m $(\"p\")","\u001B[32melement is found: \u001B[35mby css \u001B[1m\u001B[35mp\u001B[0m","\u001B[33m           getText(): \u001B[32mhello web page\u001B[0m"],"title":"trying css selectors"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"REPL","pageTitle":"Experiments","pageMeta":{},"dirName":"REPL","fileName":"experiments","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Read Eval Print Loop","id":"read-eval-print-loop"},{"title":"Start REPL","id":"start-repl"},{"title":"Experiment With API","id":"experiment-with-api"},{"title":"Setting Config Value","id":"setting-config-value"},{"title":"Preserving Browser Context","id":"preserving-browser-context"}]}},{"type":"Page","content":[{"id":"incremental-tests-development","type":"Section","title":"Incremental Tests Development","content":[{"bulletListType":"Steps","type":"Meta"},{"type":"Paragraph","content":[{"text":"You can combine experimentation in REPL with actual test development. Your feedback loop becomes even faster:","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Try API","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add the line to test","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Re-run test with REPL","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Experiment within preserved context","type":"SimpleText"}]}]}]},{"type":"Paragraph","content":[{"text":"Enumerate test files you want to REPL with and add ","type":"SimpleText"},{"code":"repl","type":"InlinedCode"},{"text":" to get into incremental tests development mode","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau testscipts/* repl"}]},{"id":"test-files-listing","type":"Section","title":"Test Files Listing","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"ls","type":"InlinedCode"},{"text":" command to list available test files.","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m ls","\u001B[34mTest files:\u001B[0m","\u001B[33m0\u001B[35m testscripts/dataDownload.groovy\u001B[0m","\u001B[33m1\u001B[35m testscripts/downstreamValidation.groovy\u001B[0m","\u001B[33m2\u001B[35m testscripts/resourceCreation.groovy\u001B[0m"],"title":"listing available test files"},{"type":"Paragraph","content":[{"text":"Note: Listing will happen automatically at the start","type":"SimpleText"}]}]},{"id":"test-file-selection","type":"Section","title":"Test File Selection","content":[{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s 0","\u001B[34mTest scenarios of \u001B[35mtestscripts/dataDownload.groovy\u001B[34m:\u001B[0m","\u001B[33m0\u001B[35m clean data\u001B[0m","\u001B[33m1\u001B[35m download data\u001B[0m","\u001B[33m2\u001B[35m validate data\u001B[0m"],"title":"select test file by index"},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m b","\u001B[34mTest files:\u001B[0m","\u001B[33m0\u001B[35m testscripts/dataDownload.groovy\u001B[0m","\u001B[33m1\u001B[35m testscripts/downstreamValidation.groovy\u001B[0m","\u001B[33m2\u001B[35m testscripts/resourceCreation.groovy\u001B[0m"],"title":"get back to file selection"},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s 'datadownload'","\u001B[34mTest scenarios of \u001B[35mtestscripts/dataDownload.groovy\u001B[34m:\u001B[0m","\u001B[33m0\u001B[35m clean data\u001B[0m","\u001B[33m1\u001B[35m download data\u001B[0m","\u001B[33m2\u001B[35m validate data\u001B[0m"],"title":"select test file by text"}]},{"id":"single-test-scenario-run","type":"Section","title":"Single Test Scenario Run","content":[{"type":"Paragraph","content":[{"text":"Selected test file has three scenarios","type":"SimpleText"}]},{"snippet":"package testscripts\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.scenario\n\nscenario(\"clean data\") {\n    println \"cleaning...\"\n}\n\nscenario(\"download data\") {\n    println \"downloading...\"\n}\n\nscenario(\"validate data\") {\n    println \"validating...\"\n}","type":"Snippet","title":"testscripts/dataDownload.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To run scenario by index","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 0","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m before first test \u001B[35m(Setup)\u001B[0m","\u001B[32m[.] \u001B[34mbefore first test \u001B[35m(Setup)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run test scenario by an index"},{"type":"Paragraph","content":[{"text":"Use negative index to select from the bottom, i.e. -1 will select the last scenario, -2 will select second from the end","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r -1","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run test scenario by a negative index"},{"type":"Paragraph","content":[{"text":"To run scenario by partial name match","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'clean'","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run test scenario by text"}]},{"id":"re-run-last-run","type":"Section","title":"Re-run Last Run","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"r","type":"InlinedCode"},{"text":" to re-run previous run","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run test scenario by text"}]},{"id":"multiple-test-scenarios-run","type":"Section","title":"Multiple Test Scenarios Run","content":[{"type":"Paragraph","content":[{"text":"Use comma separated list of indexes or partial text match to run more than one scenario","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 0, 1","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run multiple scenario by indexes"},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'download', 'clean'","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run multiple scenarios by partial text matches"},{"type":"Paragraph","content":[{"text":"Note: Order of execution follows the order of specified indexes or text","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"r from:to","type":"InlinedCode"},{"text":" to run a range of scenarios. ","type":"SimpleText"},{"code":"From","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"to","type":"InlinedCode"},{"text":" can be either index or partial text match.","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 0:'validate'","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run multiple scenarios by mixed range"},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'validate':0","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run multiple scenarios by range in reverse"}]},{"id":"select-scenarios-without-run","type":"Section","title":"Select Scenarios Without Run","content":[{"snippet":"package testscripts\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.scenario\n\nscenario(\"clean data\") {\n    println \"cleaning...\"\n}\n\nscenario(\"download data\") {\n    println \"downloading...\"\n}\n\nscenario(\"validate data\") {\n    println \"validating...\"\n}","type":"Snippet","title":"testscripts/dataDownload.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Lets run scenarios by ranage again","type":"SimpleText"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m r 'validate':0","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mvalidate data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m validate data \u001B[35m(dataDownload.groovy)\u001B[0m","validating...","\u001B[32m[.] \u001B[34mvalidate data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mdownload data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m download data \u001B[35m(dataDownload.groovy)\u001B[0m","downloading...","\u001B[32m[.] \u001B[34mdownload data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m","\u001B[34mrunning: \u001B[35mtestscripts/dataDownload.groovy \u001B[33mclean data\u001B[0m","\u001B[43;1m\u001B[30mscenario\u001B[0m\u001B[34m clean data \u001B[35m(dataDownload.groovy)\u001B[0m","cleaning...","\u001B[32m[.] \u001B[34mclean data \u001B[35m(dataDownload.groovy)\u001B[0m","\u001B[0m"],"title":"run multiple scenarios by range in reverse"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"s","type":"InlinedCode"},{"text":" to display last ran or selected scenarios. These scenarios will be ran with ","type":"SimpleText"},{"code":"r","type":"InlinedCode"}]},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s","\u001B[34mSelected scenarios:\u001B[0m","  validate data\u001B[0m","  download data\u001B[0m","  clean data\u001B[0m"],"title":"display selected scenarios"},{"type":"CliOutput","lines":["\u001B[1mwebtau:\u001B[m000\u001B[1m>\u001B[m s 0,2","\u001B[34mSelected scenarios:\u001B[0m","  clean data\u001B[0m","  validate data\u001B[0m"],"title":"select scenarios without run"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"REPL","pageTitle":"Test Runs","pageMeta":{},"dirName":"REPL","fileName":"test-runs","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Incremental Tests Development","id":"incremental-tests-development"},{"title":"Test Files Listing","id":"test-files-listing"},{"title":"Test File Selection","id":"test-file-selection"},{"title":"Single Test Scenario Run","id":"single-test-scenario-run"},{"title":"Re-run Last Run","id":"re-run-last-run"},{"title":"Multiple Test Scenarios Run","id":"multiple-test-scenarios-run"},{"title":"Select Scenarios Without Run","id":"select-scenarios-without-run"}]}},{"type":"Page","content":[{"type":"Paragraph","content":[{"text":"WebTau has several modules to help you simplify automation processes. All operations in the modules provide","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"detailed information on steps executed and details are included in web report as well as console output.","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"data","type":"SimpleText"}],"url":"/webtau/utilities/data"},{"text":" - module to read structured data like CSV and JSON into data structures like ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":", lists and maps","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"file system","type":"SimpleText"}],"url":"/webtau/utilities/file-system"},{"text":" - module to create files, directories, reading data, unzipping, etc","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"cache","type":"SimpleText"}],"url":"/webtau/utilities/cache"},{"text":" - module to cache results of test steps to be able to skip them during test development and exploration","type":"SimpleText"}]}]}]}],"lastModifiedTime":1653578199530,"tocItem":{"sectionTitle":"Utilities","pageTitle":"Introduction","pageMeta":{},"dirName":"utilities","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[]}},{"type":"Page","content":[{"id":"csv-read","type":"Section","title":"CSV Read","content":[{"level":2,"id":"csv-read-table-data","type":"SubHeading","title":"Table Data"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.table","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from CSV file. Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"type":"Table","title":"data/table.csv","table":{"data":[[[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"c","type":"SimpleText"}]}]]],"columns":[{"title":"A"},{"title":"B"},{"title":"C"}]}},{"snippet":"def table = data.csv.table('data/table.csv')\ntable.row(0).B.should == '2'\ntable.row(0).B.class.canonicalName.should == 'java.lang.String'","type":"Snippet","title":"read table data from csv","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: by default numeric values are read as strings, to auto convert numeric values to actual numbers use ","type":"SimpleText"},{"code":"tableAutoConverted","type":"InlinedCode"},{"text":" method","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.tableAutoConverted","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" from CSV file. Numeric values become values of Numeric type instead of String type. Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"snippet":"def table = data.csv.tableAutoConverted('data/table.csv')\ntable.row(0).B.should == 2\ntable.row(0).B.class.canonicalName.should == 'java.lang.Long'","type":"Snippet","title":"read table data from csv with auto conversion","lang":"groovy"},{"level":2,"id":"csv-read-list-of-map","type":"SubHeading","title":"List Of Map"},{"type":"Table","title":"data/table.csv","table":{"data":[[[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"c","type":"SimpleText"}]}]]],"columns":[{"title":"A"},{"title":"B"},{"title":"C"}]}},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.listOfMaps","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from CSV file. Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"snippet":"def list = data.csv.listOfMaps('data/table.csv')\nlist.get(0).B.should == '2'\nlist.get(0).B.class.canonicalName.should == 'java.lang.String'","type":"Snippet","title":"read list of maps from csv","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: by default numeric values are read as strings, to auto convert numeric values to actual numbers use ","type":"SimpleText"},{"code":"tableAutoConverted","type":"InlinedCode"},{"text":" method","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.listOfMapsAutoConverted","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from CSV file. Numeric values become values of Numeric type instead of String type. Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"snippet":"def list = data.csv.listOfMapsAutoConverted('data/table.csv')\nlist.get(0).B.should == 2\nlist.get(0).B.class.canonicalName.should == 'java.lang.Long'","type":"Snippet","title":"read list of maps from csv with auto conversion","lang":"groovy"},{"level":2,"id":"csv-read-specify-header","type":"SubHeading","title":"Specify Header"},{"snippet":"1, 2, 3\na, b, c","type":"Snippet","title":"data/table-no-header.csv","lang":"csv"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.listOfMapsAutoConverted(header, path)","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" of ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from CSV file. Header will be taken from first parameter and first row of CSV file will not be treated as header. Numeric values become values of Numeric type instead of String type. Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"snippet":"def list = data.csv.listOfMapsAutoConverted(['C1', 'C2', 'C3'],'data/table-no-header.csv')\nlist.get(0).C2.should == 2\nlist.get(0).C2.class.canonicalName.should == 'java.lang.Long'","type":"Snippet","title":"read list of maps from csv with auto conversion","lang":"groovy"}]},{"id":"csv-write","type":"Section","title":"CSV Write","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.csv.write","type":"InlinedCode"},{"text":" to write data to CSV file.","type":"SimpleText"}]},{"snippet":"def path = data.csv.write('generated/from-list-maps.csv', list)","type":"Snippet","title":"write list of maps","lang":"groovy","includeRegexp":"data.csv.write"},{"snippet":"colA,colB\n1,R1\n2,R2","type":"Snippet","title":"result","lang":"csv"}]},{"id":"json-read","type":"Section","title":"JSON Read","content":[{"level":2,"id":"json-read-read-list","type":"SubHeading","title":"Read List"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.list","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.List","type":"InlinedCode"},{"text":" from JSON file. Passed path is either relative based on working dir or absolute file path. Or it can be a resource class path.","type":"SimpleText"}]},{"data":[{"payload":{"info":"additional id1 payload"},"name":"hello","id":"id1"},{"payload":{"info":"additional id2 payload"},"name":"world","id":"id2"}],"paths":["root[0].name","root[1].payload.info"],"type":"Json","title":"data/flat-list.json"},{"snippet":"def list = data.json.list('data/flat-list.json')\nlist[0].name.should == 'hello'\nlist[1].payload.info.should == ~/id2 payload/","type":"Snippet","title":"read json as list","lang":"groovy"},{"level":2,"id":"json-read-read-map","type":"SubHeading","title":"Read Map"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.json.map","type":"InlinedCode"},{"text":" to read data as ","type":"SimpleText"},{"code":"java.util.Map","type":"InlinedCode"},{"text":" from JSON file. Passed path is either relative based on working dir or absolute path. Or it can be a resource class path.","type":"SimpleText"}]},{"data":{"payload":{"info":"additional id1 payload"},"name":"hello","id":"id1"},"paths":["root.payload.info"],"type":"Json","title":"data/root-map.json"},{"snippet":"def map = data.json.map('data/root-map.json')\nmap.payload.info.should == \"additional id1 payload\"","type":"Snippet","title":"read json as map","lang":"groovy"}]},{"id":"guid","type":"Section","title":"GUID","content":[{"level":2,"id":"guid-generate","type":"SubHeading","title":"Generate"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"data.guid.generate","type":"InlinedCode"},{"text":" to generate unique identifier.","type":"SimpleText"}]},{"snippet":"def id = data.guid.generate()","type":"Snippet","lang":"groovy","includeRegexp":"data.guid.generate"}]}],"lastModifiedTime":1653578199530,"tocItem":{"sectionTitle":"Utilities","pageTitle":"Data","pageMeta":{},"dirName":"utilities","fileName":"data","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"CSV Read","id":"csv-read"},{"title":"CSV Write","id":"csv-write"},{"title":"JSON Read","id":"json-read"},{"title":"GUID","id":"guid"}]}},{"type":"Page","content":[{"id":"file-content","type":"Section","title":"File Content","content":[{"snippet":"def path = fs.writeText('my-test-file.txt', 'hello world')","type":"Snippet","title":"write content to a file","lang":"groovy","includeRegexp":["fs\\.writeText"]},{"snippet":"fs.textContent('my-test-file.txt').should == 'hello world\\nid=15'","surroundedBy":"assert-file","type":"Snippet","title":"validate file content","lang":"groovy"},{"type":"Paragraph","content":[{"code":"fs.textContent","type":"InlinedCode"},{"text":" declares file content, but doesn't access it right away.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"WebTau reads file content when validation happens. Here is an example of waiting on file content:","type":"SimpleText"}]},{"snippet":"def fileTextContent = fs.textContent('my-test-file.txt')\nfileTextContent.waitTo contain('id=15')","surroundedBy":"wait-for-id","type":"Snippet","title":"wait for file content","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":".data","type":"InlinedCode"},{"text":" to access actual file content for further processing","type":"SimpleText"}]},{"snippet":"def actualFileContent = fileTextContent.data","surroundedBy":"actual-file-content","type":"Snippet","title":"access file content","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"extractByRegexp","type":"InlinedCode"},{"text":" to extract content from a file by regular expression","type":"SimpleText"}]},{"snippet":"def id = fileTextContent.extractByRegexp(\"id=(\\\\d+)\")\nhttp.get(\"/customers/${id}\") {\n    // ...\n}","excludeRegexp":"statusCode","surroundedBy":"extract-id","type":"Snippet","title":"extract file content","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"replaceText","type":"InlinedCode"},{"text":" to replace text in place","type":"SimpleText"}]},{"snippet":"fs.replaceText(path, ~/(\\d+)/, '\"$1\"')","surroundedBy":"replace-text","type":"Snippet","title":"replace file content","lang":"groovy"},{"columns":[{"content":[{"snippet":"a=1\nb=2","type":"Snippet","title":"file to replace","lang":"txt"}]},{"content":[{"snippet":"a=\"1\"\nb=\"2\"","type":"Snippet","title":"result of replace","lang":"txt"}]}],"type":"Columns","config":{}}]},{"id":"copy","type":"Section","title":"Copy","content":[{"snippet":"def dir = fs.createDir(\"my-dir\")\nfs.copy(\"data/message.txt\", dir)","type":"Snippet","title":"copy single file to a directory","lang":"groovy","includeRegexp":["fs\\.copy","createDir"]},{"snippet":"def dir = fs.tempDir(\"fs-copy\")\nfs.copy(\"data/message.txt\", dir)","type":"Snippet","title":"copy single file to a temp directory","lang":"groovy","includeRegexp":["fs\\.copy","tempDir"]},{"snippet":"fs.copy(\"data/message.txt\", \"data/new-message.txt\")","type":"Snippet","title":"copy single file to a file","lang":"groovy","includeRegexp":["fs\\.copy"]}]},{"id":"archive","type":"Section","title":"Archive","content":[{"snippet":"def dest = fs.tempDir(\"for-zip\").resolve(\"content.zip\")\nfs.zip('data/staticcontent', dest)","surroundedBy":"// zip","type":"Snippet","title":"zip a directory","lang":"groovy"},{"snippet":"def dir = fs.tempDir('for-unzip')\nfs.unzip('data/data.zip', dir)","surroundedBy":"// unzip","type":"Snippet","title":"unzip a file","lang":"groovy"},{"snippet":"def dir = fs.tempDir('for-untar')\nfs.untar('data/data.tar', dir)","surroundedBy":"// untar","type":"Snippet","title":"untar a file","lang":"groovy"}]},{"id":"temporary-dirs-and-files","type":"Section","title":"Temporary Dirs And Files","content":[{"snippet":"def dir = fs.tempDir(\"my-dir-prefix\")\ndef path = dir.resolve(\"my-file\")\nfs.writeText(path, \"hello world\")","surroundedBy":"// temp-dir","type":"Snippet","title":"create temp directory","lang":"groovy"},{"snippet":"def parentDir = fs.tempDir(\"my-dir-prefix\")\ndef dir = fs.tempDir(parentDir, \"nested-temp-dir\")","surroundedBy":"// temp-dir-parent","type":"Snippet","title":"create temp directory inside directory","lang":"groovy"},{"snippet":"def file = fs.tempFile(\"my-file-prefix\", \".txt\")\nfs.writeText(file, \"hello world\")","surroundedBy":"// temp-file","type":"Snippet","title":"create temp file","lang":"groovy"},{"snippet":"def dir = fs.tempDir(\"temp-dir-prefix\")\ndef file = fs.tempFile(dir, \"my-file-prefix\", \".txt\")","surroundedBy":"// temp-file-parent","type":"Snippet","title":"create temp file inside a directory","lang":"groovy"},{"snippet":"/tmp/temp-dir-prefix7675520564015790378/my-file-prefix7250101212348748876.txt","type":"Snippet","title":"example of temp file location","lang":"txt"},{"type":"Paragraph","content":[{"text":"Note: temp files and temp directories will be automatically deleted at the end of run","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199530,"tocItem":{"sectionTitle":"Utilities","pageTitle":"File System","pageMeta":{},"dirName":"utilities","fileName":"file-system","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"File Content","id":"file-content"},{"title":"Copy","id":"copy"},{"title":"Archive","id":"archive"},{"title":"Temporary Dirs And Files","id":"temporary-dirs-and-files"}]}},{"type":"Page","content":[{"id":"cached-value","type":"Section","title":"Cached Value","content":[{"type":"Paragraph","content":[{"text":"When you develop tests, you don't have to restart the whole flow from the beginning.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Imagine you have a multistep test that includes running Command Line tool and then validating REST API response, and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"then opening a browser to assert UI values.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Cache long steps results like created entities ","type":"SimpleText"},{"code":"ids","type":"InlinedCode"},{"text":" to speed up tests development.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In the example below, you create first scenario that runs a heavy command line tool that generates an id.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"We then cache the value and you can write a second scenario and keep re-running it, without the need to re-run the first one.","type":"SimpleText"}]},{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef createdId = cache.value(\"cli-heavy-created-id\") // declare cached value with distinct id\n\nscenario(\"heavy setup operation\") {\n    def cliResult = cli.run(\"scripts/cli-heavy-process\") // long running process that you don't want to re-run as you write your tests\n    createdId.set(cliResult.extractFromOutputByRegexp(\"id=(\\\\S+)\")) // caching the extracted id from CLI run\n}\n\nscenario(\"using previous setup id even after restart\") {\n    def id = createdId.get() // using cached value from previous test run. value will be preserved between restarts and re-compile\n    http.get(\"/resource/${id}\") {\n        message.should == \"hello\"\n    }\n}","surroundedBy":"example","commentsType":"inline","type":"Snippet","title":"cached value","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: Use ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Selective Run","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/selective-run"},{"text":" or ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"REPL mode","type":"SimpleText"}],"url":"/webtau/REPL/test-runs"},{"text":"","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to run one scenario at a time.","type":"SimpleText"}]}]},{"id":"fs-path-type","type":"Section","title":"FS Path type","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"File System module","type":"SimpleText"}],"url":"/webtau/utilities/file-system"},{"text":" return values of type ","type":"SimpleText"},{"code":"Path","type":"InlinedCode"},{"text":". WebTau stores them as ","type":"SimpleText"},{"code":"String","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"HardLineBreak"},{"text":"To retrieve as ","type":"SimpleText"},{"code":"Path","type":"InlinedCode"},{"text":" use ","type":"SimpleText"},{"code":"getAsPath()","type":"InlinedCode"}]},{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef deployDirCache = cache.value(\"deploy-dir\")\n\nscenario(\"caching of path value\") {\n    def path = fs.tempDir(\"my-dir\")\n    deployDirCache.set(path)\n}\n\nscenario(\"accessing path value\") {\n    def deployDir = deployDirCache.getAsPath()\n    fs.writeText(deployDir.resolve(\"file.txt\"), \"hello\")\n}","surroundedBy":"example","commentsType":"inline","type":"Snippet","title":"cached path value","lang":"groovy"}]},{"id":"presence-check","type":"Section","title":"Presence Check","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"exists","type":"InlinedCode"},{"text":" inside utilities methods","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to check if a cache value was set.","type":"SimpleText"}]},{"snippet":"def prevGenerated = cache.value(\"zip-unpacked-path\")\n// ...\nif (!prevGenerated.exists()) {\n    // recreate content\n}","surroundedBy":"exists-example","type":"Snippet","title":"cached value","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Avoid: using cache check inside test methods to keep them clean","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199530,"tocItem":{"sectionTitle":"Utilities","pageTitle":"Cache","pageMeta":{},"dirName":"utilities","fileName":"cache","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Cached Value","id":"cached-value"},{"title":"FS Path type","id":"fs-path-type"},{"title":"Presence Check","id":"presence-check"}]}},{"type":"Page","content":[{"id":"cross-types-comparison","type":"Section","title":"Cross Types Comparison","content":[{"type":"Paragraph","content":[{"text":"In WebTau you can compare strings, dates, arrays, strings and numbers, dates and strings, arrays and sets and other numerous combinations","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"using the same set of matchers.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def errorMessage = generateErrorMessage()\nerrorMessage.should == \"insufficient disk space\" // string and string equality comparison\n\ndef numberAsText = \"200\"\nnumberAsText.shouldBe > 150 // text and number relative comparison","surroundedBy":["string-string-example","string-number-example"],"commentsType":"inline","type":"Snippet","surroundedBySeparator":"","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"String errorMessage = generateErrorMessage();\nactual(errorMessage).should(equal(\"insufficient disk space\")); // string and string equality comparison\n\nString numberAsText = \"200\";\nactual(numberAsText).shouldBe(greaterThan(150)); // text and number relative comparison","surroundedBy":["string-string-example","string-number-example"],"commentsType":"inline","type":"Snippet","surroundedBySeparator":"","lang":"java"}]}],"type":"Tabs"}]},{"id":"static-import","type":"Section","title":"Static Import","content":[{"type":"Paragraph","content":[{"text":"Examples assume ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"The class contains useful utility methods and matchers","type":"SimpleText"}]},{"snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","surroundedBy":"import-dsl","type":"Snippet","lang":"java"}]},{"id":"java-beans-and-maps","type":"Section","title":"Java Beans And Maps","content":[{"type":"Paragraph","content":[{"text":"Use map and bean comparison to validate individual java bean properties.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def account = new Account(\"ac1\", \"My Account\", \"test account\")\naccount.should == [\n        id: \"ac1\",\n        name: \"My Account\"] // only specified properties will be compared","surroundedBy":"bean-map-example","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"Account account = new Account(\"ac1\", \"My Account\", \"test account\");\nactual(account).should(equal(aMapOf( // utility function from WebTauCore static import\n        \"id\", \"ac1\",\n        \"name\", \"My Account\"))); // only specified properties will be compared","surroundedBy":"bean-map-example","commentsType":"inline","type":"Snippet","lang":"java"}]}],"type":"Tabs"},{"snippet":"public class Account {\n    private final String id;\n    private final String name;\n    private final String description;\n\n    public Account(String id, String name, String description) {\n        this.id = id;\n        this.name = name;\n        this.description = description;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n}","surroundedBy":"account","type":"Snippet","title":"Account Bean","lang":"java"}]},{"id":"dates","type":"Section","title":"Dates","content":[{"type":"Paragraph","content":[{"text":"Universal compare lets you compare dates, local dates, strings, and times with timezones against each other.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def dateAsText = \"2018-06-10\"\ndateAsText.shouldBe > LocalDate.of(2018, 6, 9)\n\ndef timeAsText = \"2018-01-02T00:00:00Z\"\ntimeAsText.shouldBe > LocalDate.of(2018, 1, 1) // date/time will be converted to local timezone\n\ndef withTime = LocalDateTime.of(2022, 3, 16, 10, 4, 4)\ndef dateOnly = LocalDate.of(2022, 3, 16)\nwithTime.should == dateOnly // comparison ignores time portion","entry":["actual local date string greater than expected local date instance","actual zoned date time string greater than expected local date instance","should compare local date against local date time"],"bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"text and date","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"String dateAsText = \"2018-06-10\";\nactual(dateAsText).shouldBe(greaterThan(LocalDate.of(2018, 6, 9)));\n\nString timeAsText = \"2018-01-02T00:00:00Z\";\nactual(timeAsText).shouldBe(greaterThan(LocalDate.of(2018, 1, 1))); // date/time will be converted to local timezone\n\nLocalDateTime withTime = LocalDateTime.of(2022, 3, 16, 10, 4, 4);\nLocalDate withDate = LocalDate.of(2022, 3, 16);\nactual(withTime).should(equal(withDate)); // comparison ignores time portion","entry":["actualLocalDateStringGreaterThanExpectedLocalDateInstance","actualZonedDateTimeStringGreaterThanExpectedLocalDateInstance","shouldCompareLocalDateAgainstLocalDateTime"],"bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"text and date","lang":"groovy"}]}],"type":"Tabs"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Matchers","pageTitle":"Universal Compare","pageMeta":{},"dirName":"matchers","fileName":"universal-compare","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Cross Types Comparison","id":"cross-types-comparison"},{"title":"Static Import","id":"static-import"},{"title":"Java Beans And Maps","id":"java-beans-and-maps"},{"title":"Dates","id":"dates"}]}},{"type":"Page","content":[{"id":"handler-vs-matcher","type":"Section","title":"Handler vs Matcher","content":[{"type":"Paragraph","content":[{"text":"Adding new equality and greater/less rules is done by creating and registering new ","type":"SimpleText"},{"code":"CompareToHandler","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Creating new matchers is not required in this case.","type":"SimpleText"}]}]},{"style":"api","id":"comparetohandler","type":"Section","title":"CompareToHandler","content":[{"type":"Paragraph","content":[{"text":"To add a new handler you need to","type":"SimpleText"}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"implement ","type":"SimpleText"},{"code":"CompareToHandler","type":"InlinedCode"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"register new class using Java Services","type":"SimpleText"}]}]}]},{"level":2,"id":"comparetohandler-interface","type":"SubHeading","title":"Interface"},{"snippet":"public interface CompareToHandler {\n    /**\n     * determines whether supports equality comparison\n     * @param actual actual value\n     * @param expected expected value\n     * @return true if comparison can be handled\n     */\n    boolean handleEquality(Object actual, Object expected);\n\n    /**\n     * determines whether supports greater/less than comparison family\n     * @param actual actual value\n     * @param expected expected value\n     * @return true if comparison can be handled\n     */\n    default boolean handleGreaterLessEqual(Object actual, Object expected) {\n        return false;\n    }\n\n    /**\n     * determines whether handler can handle nulls. usually left unimplemented\n     * @return true if handler can match nulls\n     */\n    default boolean handleNulls() {\n        return false;\n    }\n\n    /**\n     * implementation logic of equality only\n     * @param comparator comparator to delegate comparison to\n     * @param actualPath path to use for reporting\n     * @param actual actual value\n     * @param expected expected value\n     */\n    void compareEqualOnly(CompareToComparator comparator,\n                          ActualPath actualPath, Object actual,\n                          Object expected);\n\n    /**\n     * implementation logic of greater/less than family\n     * @param comparator comparator to delegate comparison to\n     * @param actualPath path to use for reporting\n     * @param actual actual value\n     * @param expected expected value\n     */\n    default void compareGreaterLessEqual(CompareToComparator comparator,\n                                         ActualPath actualPath, Object actual,\n                                         Object expected) {\n        throw new UnsupportedOperationException(\"greater-less comparison is not implemented\");\n    }\n}","entry":"CompareToHandler","type":"Snippet","title":"interface to implement","lang":"java"},{"level":2,"id":"comparetohandler-example-implementation","type":"SubHeading","title":"Example Implementation"},{"type":"Paragraph","content":[{"text":"Below is an existing implementation of handler to deal with Java Bean as actual and Map as expected","type":"SimpleText"}]},{"snippet":"public class MapAndBeanCompareToHandler implements CompareToHandler {\n    @Override\n    public boolean handleEquality(Object actual, Object expected) {\n        return isMapOfProps(expected) && isBean(actual); // only handles equality if actual is a java bean and expected is a map\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    private boolean isMapOfProps(Object o) {\n        if (!(o instanceof Map)) {\n            return false;\n        }\n\n        return ((Map<?, Object>) o).keySet().stream().allMatch(k -> k instanceof String); // making sure all the keys are strings\n    }\n\n    private boolean isBean(Object o) {\n        return !(o instanceof Iterable || o instanceof Map);\n    }\n\n    @Override\n    @SuppressWarnings(\"unchecked\")\n    public void compareEqualOnly(CompareToComparator comparator,\n                                 ActualPath actualPath, Object actual,\n                                 Object expected) {\n        Map<String, ?> expectedMap = (Map<String, ?>) expected;\n        Map<String, ?> actualAsMap = JavaBeanUtils.convertBeanToMap(actual);\n\n        expectedMap.keySet().forEach(p -> { // going only through expected keys, ignoring all other bean properties\n            ActualPath propertyPath = actualPath.property(p);\n\n            if (actualAsMap.containsKey(p)) {\n                // use provided comparator to delegate comparison of properties\n                comparator.compareUsingEqualOnly(propertyPath, actualAsMap.get(p), expectedMap.get(p));\n            } else {\n                // report missing properties\n                comparator.reportMissing(this, propertyPath, expectedMap.get(p));\n            }\n        });\n    }\n}","entry":"MapAndBeanCompareToHandler","commentsType":"inline","type":"Snippet","title":"map and bean comparison handler","lang":"java"},{"level":2,"id":"comparetohandler-registration","type":"SubHeading","title":"Registration"},{"type":"Paragraph","content":[{"text":"WebTau uses ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Service Loaders","type":"SimpleText"}],"url":"https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html"},{"text":" to discover implementations of handlers.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"To register an additional handler you need to create a file under resources","type":"SimpleText"}]},{"snippet":"META-INF/services/org.testingisdocumenting.webtau.expectation.equality.CompareToHandler\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"with the content file containing a line per implementing class","type":"SimpleText"}]},{"snippet":"org.testingisdocumenting.webtau.expectation.equality.handlers.MapAndBeanCompareToHandler","type":"Snippet","title":"src/main/resources/META-INF/services/org.testingisdocumenting.webtau.expectation.equality.CompareToHandler","autoTitle":true,"lang":"CompareToHandler","includeRegexp":"MapAndBeanCompareToHandler"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Matchers","pageTitle":"Custom Compare To Handler","pageMeta":{},"dirName":"matchers","fileName":"custom-compare-to-handler","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Handler vs Matcher","id":"handler-vs-matcher"},{"title":"CompareToHandler","id":"comparetohandler"}]}},{"type":"Page","content":[{"id":"standalone-cli","type":"Section","title":"Standalone CLI","content":[{"type":"Paragraph","content":[{"text":"WebTau has a standalone runner, so you can author and run tests without needing a build system or IDEs.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You can fire your editor of choice and start creating automations without worrying about imports and packages","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to get your first result.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"In Enterprise setups WebTau command line tool can be shared with everyone through mount drives or other similar","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"mechanisms which makes local testing and CI testing to be much more streamlined.","type":"SimpleText"}]}]},{"id":"setup","type":"Section","title":"Setup","content":[{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"brew","type":"SimpleText"}],"url":"https://brew.sh"},{"text":" installed in your system use","type":"SimpleText"}]},{"snippet":"brew install testingisdocumenting/brew/webtau\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"If you have ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"sdkman","type":"SimpleText"}],"url":"https://sdkman.io"},{"text":" installed in your system use","type":"SimpleText"}]},{"snippet":"sdk install webtau\n","type":"Snippet","lineNumber":"","lang":""},{"type":"Paragraph","content":[{"text":"Alternatively, download and unzip ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"WebTau","type":"SimpleText"}],"url":"https://repo.maven.apache.org/maven2/org/testingisdocumenting/webtau/webtau-dist/1.48/webtau-dist-1.48-webtau.zip"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Add it to your ","type":"SimpleText"},{"code":"PATH","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau --example"},{"type":"Paragraph","content":[{"text":"Navigate into ","type":"SimpleText"},{"code":"todo","type":"InlinedCode"},{"text":" example","type":"SimpleText"}]},{"paramsToHighlight":[],"type":"CliCommand","command":"cd examples/todo"},{"snippet":"import static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('fetch todo item') {\n    http.get('/todos/1') {\n        title.should == 'delectus aut autem'\n        completed.should == false\n    }\n}","type":"Snippet","title":"todolist.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"To run test","type":"SimpleText"}]},{"paramsToHighlight":["url"],"type":"CliCommand","command":"webtau todolist.groovy --url=https://jsonplaceholder.typicode.com"}]},{"id":"repl","type":"Section","title":"REPL","content":[{"type":"Paragraph","content":[{"text":"WebTau standalone runner comes with ","type":"SimpleText"},{"code":"repl","type":"InlinedCode"},{"text":" mode that let you experiment with API and write tests incrementally.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Repl mode preserves context of the runs which significantly speeds up tests development.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Even if you don't want to use Groovy for your tests, you can still benefit from REPL mode as you experiment with APIs","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"and system under tests.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"Learn more about REPL","type":"SimpleText"}],"url":"/webtau/REPL/experiments"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Introduction","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"introduction","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Standalone CLI","id":"standalone-cli"},{"title":"Setup","id":"setup"},{"title":"REPL","id":"repl"}]}},{"type":"Page","content":[{"id":"dynamic-scenarios","type":"Section","title":"Dynamic Scenarios","content":[{"type":"Paragraph","content":[{"text":"Every time you call ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":" method a new scenario is being registered.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Define scenarios in a loop to have dynamic scenarios based on provided data.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n[1, 2, 3].each { number ->\n    scenario(\"number $number\") {\n        println number\n    }\n}","type":"Snippet","title":"dynamic scenarios","lang":"groovy"}]},{"id":"csv","type":"Section","title":"CSV","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"data.csv","type":"SimpleText"}],"url":"/webtau/utilities/data#csv-read"},{"text":" to conveniently build your scenarios from an external ","type":"SimpleText"},{"code":"CSV","type":"InlinedCode"},{"text":" data set.","type":"SimpleText"}]},{"snippet":"title, input, output\nhello, 10, 20\nworld, 30, 40","type":"Snippet","title":"examples/use-cases.csv","lang":"csv"},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndata.csv.table('use-cases.csv').each { row ->\n    scenario(\"use case ${row.title}\") {\n        println row.input\n        println row.output\n    }\n}","type":"Snippet","title":"CSV-driven tests","lang":"groovy"}]},{"id":"table-data","type":"Section","title":"Table Data","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" if you want to derive data and/or have a convenience of collocating data and tests","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndef lever = 10\n\ndef useCases = ['title'  | 'input'    | 'output'] {\n               ____________________________________\n                'hello'  | lever      | lever + 10\n                'world'  | lever + 30 | lever + 40 }\n\nuseCases.each { row ->\n    scenario(\"use case ${row.title}\") {\n        println row.input\n        println row.output\n    }\n}","type":"Snippet","title":"TableData-driven tests","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Data Driven Scenarios","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"data-driven-scenarios","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Dynamic Scenarios","id":"dynamic-scenarios"},{"title":"CSV","id":"csv"},{"title":"Table Data","id":"table-data"}]}},{"type":"Page","content":[{"id":"terminate-all","type":"Section","title":"Terminate All","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"terminateAll","type":"InlinedCode"},{"text":" if you need to stop a current scenario and all the scenarios after that. Consequent scenarios will be marked","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"as skipped in the produced report.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario(\"first test\") {\n    terminateAll('hard stop of the rest of the tests')\n}\n\nscenario(\"second test\") {\n    browser.open(\"/app\")\n}\n\nscenario(\"third test\") {\n    http.get(\"/weather\") {\n        temperature.shouldBe < 100\n    }\n}","type":"Snippet","title":"tests termination","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Test two and three in the example above will not be executed. Browser will not be opened and REST API will not be called.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Tests Hard Stops","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"tests-hard-stops","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Terminate All","id":"terminate-all"}]}},{"type":"Page","content":[{"id":"sscenario","type":"Section","title":"sscenario","content":[{"type":"Paragraph","content":[{"text":"Define tests with ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"singleScenario","type":"InlinedCode"},{"text":" to only run those tests and skip all the other tests defined in all the test files.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Useful during tests creation or debugging.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nscenario('step one') {\n    http.post('/reset') {\n        // ...\n    }\n}\n\nsscenario('step two') {\n    // test that you want to focus on\n}\n\nsingleScenario('step three') {\n    // test that you want to focus on\n}\n\nscenario('step four') {\n    http.put('/extra') {\n        // ...\n    }\n}","highlight":[10,14],"type":"Snippet","title":"Selective tests run","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"webtau","type":"InlinedCode"},{"text":" command line will exit with non zero code if there are ","type":"SimpleText"},{"code":"sscenario","type":"InlinedCode"},{"text":" tests present","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Selective Run","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"selective-run","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"sscenario","id":"sscenario"}]}},{"type":"Page","content":[{"id":"skipping-tests-on-condition","type":"Section","title":"Skipping Tests on Condition","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"onlyWhen","type":"InlinedCode"},{"text":" if you need to skip tests based on a condition.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nString emailHost = cfg.emailHost\n\nonlyWhen('email server is internal', { -> emailHost.contains('internal.server')}) {\n    scenario('confirmation emails should be sent') {\n        // ...\n        http.get(emailHost) {\n            subjects.should contain('my message')\n        }\n    }\n}","type":"Snippet","title":"Conditional tests skip","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Tests will still appear as part of your report but will be marked as skipped.","type":"SimpleText"}]}]},{"id":"skipping-tests-based-on-env","type":"Section","title":"Skipping Tests Based on Env","content":[{"type":"Paragraph","content":[{"text":"Use the ","type":"SimpleText"},{"code":"skipForEnv","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"onlyForEnv","type":"InlinedCode"},{"text":" shortcuts if you need to skip or enable tests for a certain environment.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nonlyForEnv('experimental') {\n    scenario('this scenario will only be executed in \"experimental\" env') {\n        http.get('/new-endpoint') {\n            price.shouldBe > 0\n        }\n    }\n}\n\nskipForEnv('experimental') {\n    scenario('this scenario will not be executed in \"experimental\" env') {\n        http.get('/new-endpoint') {\n            price.shouldBe > 0\n        }\n    }\n}","type":"Snippet","title":"Environment specific tests","lang":"groovy"}]},{"id":"custom-shortcuts","type":"Section","title":"Custom Shortcuts","content":[{"type":"Paragraph","content":[{"text":"Consider creating your project specific shortcuts to avoid boilerplate.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Here is an example of ","type":"SimpleText"},{"code":"onlyForEnv","type":"InlinedCode"},{"text":" shortcut definition.","type":"SimpleText"}]},{"snippet":"static void onlyForEnv(String env, Closure registrationCode) {\n    onlyWhen(\"only for <$env> environment\",\n            { -> getCfg().getEnv() == env },\n            registrationCode)\n}","entry":"onlyForEnv","type":"Snippet","title":"Custom shortcut","lang":"groovy"}]},{"id":"unconditionally-skipping-tests","type":"Section","title":"Unconditionally Skipping Tests","content":[{"type":"Paragraph","content":[{"text":"Instead of ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":", use ","type":"SimpleText"},{"code":"dscenario","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"disabledScenario","type":"InlinedCode"},{"text":" to always skip a test.  This is analogous to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Junit's ","type":"SimpleText"},{"code":"@Ignore","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"@Disabled","type":"InlinedCode"},{"text":".","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\ndscenario('do not execute this scenario') {\n    http.get('/non-existing-endpoint') {\n        price.shouldBe > 0\n    }\n}\n\ndisabledScenario('do not execute this scenario either') {\n    http.get('/non-existing-endpoint') {\n        price.shouldBe > 0\n    }\n}","type":"Snippet","title":"Disable tests","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Alternatively, if you name file as ","type":"SimpleText"},{"code":"<fileName>.disabled.groovy","type":"InlinedCode"},{"text":" WebTau will skip all the scenarios inside.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Skipping Tests","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"skipping-tests","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Skipping Tests on Condition","id":"skipping-tests-on-condition"},{"title":"Skipping Tests Based on Env","id":"skipping-tests-based-on-env"},{"title":"Custom Shortcuts","id":"custom-shortcuts"},{"title":"Unconditionally Skipping Tests","id":"unconditionally-skipping-tests"}]}},{"type":"Page","content":[{"id":"specifying-test-metadata","type":"Section","title":"Specifying Test Metadata","content":[{"type":"Paragraph","content":[{"text":"To attach custom metadata to a test use ","type":"SimpleText"},{"code":"metadata","type":"InlinedCode"},{"text":" from ","type":"SimpleText"},{"code":"WebTauGroovyDsl","type":"InlinedCode"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nmetadata([owner: \"team A\"]) // setting owner for all the scenarios below\n\nscenario(\"one\") {\n}\n\nscenario(\"two\") {\n}\n\nscenario(\"three\") {\n    metadata([owner: \"team B\"]) // owner is overridden for scenario \"three\"\n}\n\nscenario(\"four\") {\n}","commentsType":"inline","type":"Snippet","title":"test metadata","lang":"groovy"},{"type":"Paragraph","content":[{"code":"metadata","type":"InlinedCode"},{"text":" can be called multiple times outside of ","type":"SimpleText"},{"code":"scenario","type":"InlinedCode"},{"text":". It will be applied to all the scenarios below.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nmetadata([owner: \"team A\"]) // setting owner for scenarios \"one\" and \"two\"\n\nscenario(\"one\") {\n}\n\nscenario(\"two\") {\n}\n\nmetadata([owner: \"team B\"]) // setting owner for scenarios \"three\" and \"four\"\n\nscenario(\"three\") {\n}\n\nscenario(\"four\") {\n}","commentsType":"inline","type":"Snippet","title":"multiple top-level metadata","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Unlike previous example, \"team B\" will be set for scenario \"three\" and \"four\".","type":"SimpleText"}]}]},{"id":"metadata-encapsulation","type":"Section","title":"Metadata Encapsulation","content":[{"type":"Paragraph","content":[{"text":"You can encapsulate repeated metadata into a separate file.","type":"SimpleText"}]},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nSupport.teamA()\n\nscenario(\"one\") {\n}\n\nscenario(\"two\") {\n}\n\nscenario(\"three\") {\n    Support.teamB()\n}\n\nscenario(\"four\") {\n}","type":"Snippet","title":"encapsulated metadata","lang":"groovy"},{"snippet":"package scenarios.concept\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\nclass Support {\n    static void owner(String name) {\n        metadata([owner: name])\n    }\n\n    static void severity(int level) {\n        metadata([severity: level])\n    }\n\n    static void teamA() {\n        owner(\"team A\")\n    }\n\n    static void teamB() {\n        owner(\"team B\")\n    }\n\n    static void critical() {\n        severity(100)\n    }\n\n    static void low() {\n        severity(1)\n    }\n}","type":"Snippet","title":"Support.groovy","lang":"groovy"}]},{"id":"report","type":"Section","title":"Report","content":[{"type":"Paragraph","content":[{"text":"Test metadata will be available in a generated report as well as in test listeners.","type":"SimpleText"}]},{"annotationsPath":"doc-artifacts/reports/report-test-metadata.json","shapes":[{"darkFriendly":false,"invertedColors":false,"color":"a","x":628,"y":238,"text":"1","id":"badge4","align":"Center","type":"badge"}],"width":1200.0,"imageSrc":"/webtau/doc-artifacts/reports/report-test-metadata.png","type":"AnnotatedImage","height":802.0,"timestamp":1653578903825},{"startNumber":1,"delimiter":".","type":"OrderedList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"If metadata is present, it will be displayed at the test summary page","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Test Metadata","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"test-metadata","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Specifying Test Metadata","id":"specifying-test-metadata"},{"title":"Metadata Encapsulation","id":"metadata-encapsulation"},{"title":"Report","id":"report"}]}},{"type":"Page","content":[{"id":"test-listener-interface","type":"Section","title":"Test Listener Interface","content":[{"type":"Paragraph","content":[{"text":"To define a custom test listener you need to implement the ","type":"SimpleText"},{"code":"TestListener","type":"InlinedCode"},{"text":" interface","type":"SimpleText"}]},{"snippet":"/*\n * Copyright 2020 webtau maintainers\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.testingisdocumenting.webtau;\n\nimport org.testingisdocumenting.webtau.reporter.WebTauTest;\n\nimport java.util.List;\n\n/**\n * Lowest common denominator for Groovy Standalone Tests, JUnit4, JUnit5\n */\npublic interface TestListener {\n    /**\n     * before any test is ran\n     */\n    default void beforeFirstTest() {}\n\n    /**\n     * before test code is invoked\n     * @param test test\n     */\n    default void beforeTestRun(WebTauTest test) {}\n\n    /**\n     * after test code is invoked\n     * @param test test\n     */\n    default void afterTestRun(WebTauTest test) {}\n\n    /**\n     * after all the tests are invoked\n     */\n    default void afterAllTests() {}\n\n    /**\n     * after test is ran but before its first statement.\n     * executed code in this listener is considered to be part of a test.\n     * @param test test\n     */\n    default void beforeFirstTestStatement(WebTauTest test) {}\n\n    /**\n     * right before test considered to be complete. May not be executed if the test didn't reach the last statement.\n     * executed code in this listener is considered to be part of a test.\n     * @param test test\n     */\n    default void afterLastTestStatement(WebTauTest test) {}\n\n    /**\n     * after all the tests are discovered\n     * @param tests stream of discovered tests\n     */\n    default void afterTestsRegistration(List<WebTauTest> tests) {}\n}","type":"Snippet","title":"TestListener.java","lang":"java"}]},{"id":"config","type":"Section","title":"Config","content":[{"type":"Paragraph","content":[{"text":"Once you have an implementation, use the ","type":"SimpleText"},{"code":"testListeners","type":"InlinedCode"},{"text":" key in your config file to use it","type":"SimpleText"}]},{"snippet":"import listeners.MetadataValidationTestListener\n\ntestListeners = [MetadataValidationTestListener]","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"snippet":"package listeners\n\nimport org.testingisdocumenting.webtau.TestListener\nimport org.testingisdocumenting.webtau.reporter.WebTauTest\n\nclass MetadataValidationTestListener implements TestListener {\n    @Override\n    void afterLastTestStatement(WebTauTest test) {\n        if (!test.isSynthetic() && !test.metadata.has('owner')) {\n            throw new RuntimeException('owner for <' + test.scenario + '> is not set')\n        }\n    }\n}","type":"Snippet","title":"listeners/MetadataValidationTestListener.groovy","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Test Listeners","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"test-listeners","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Test Listener Interface","id":"test-listener-interface"},{"title":"Config","id":"config"}]}},{"type":"Page","content":[{"id":"serial-execution","type":"Section","title":"Serial execution","content":[{"type":"Paragraph","content":[{"text":"The default mode for running tests is serially; in other words, scenario files are executed one after the other.","type":"SimpleText"}]}]},{"id":"parallel-execution","type":"Section","title":"Parallel execution","content":[{"type":"Paragraph","content":[{"text":"WebTau supports executing tests in parallel.  In this mode, ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"scenario files","type":"SimpleText"}]},{"text":" are executed in parallel.  ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"Individual","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"scenarios","type":"SimpleText"}]},{"text":" are still executed sequentially.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For large test suites, it is therefore advisable to create many small focused scenario files instead of few large files.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"--parallel","type":"InlinedCode"},{"text":" parameter to run each test file in a separate thread.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"numberOfThreads","type":"InlinedCode"},{"text":" to specify the maximum number of threads either through the configuration file","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"or as a CLI parameter. Value of ","type":"SimpleText"},{"code":"-1","type":"InlinedCode"},{"text":" is equivalent of using ","type":"SimpleText"},{"code":"--parallel","type":"InlinedCode"},{"text":" and will use as many threads as there are files.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: scenario file execution order is not guaranteed.","type":"SimpleText"}]}]},{"id":"scenario-discovery","type":"Section","title":"Scenario discovery","content":[{"type":"Paragraph","content":[{"text":"WebTau via CLI or Maven plugin supports a number of methods for specifying and discovering scenarios.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The simplest way is to list the scenario files explicitly:","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"paramsToHighlight":[],"type":"CliCommand","command":"webtau scenarios/rest/simpleGet.groovy scnearios/rest/simplePost.groovy"}]},{"name":"Maven","content":[{"snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>1.48</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <env>integration</env>\n        <url>http://optional-base-url</url>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/simpleGet.groovy</include>\n                <include>scenarios/simplePost.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet","lang":"xml"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Wildcard matching is also supported.  In the CLI version this is normal shell ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"glob","type":"SimpleText"}],"url":"https://en.wikipedia.org/wiki/Glob_(programming)"},{"type":"SoftLineBreak"},{"text":"and in Maven it's a standard Maven file inclusion block:","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"paramsToHighlight":[],"type":"CliCommand","command":"webtau scenarios/rest/simple*.groovy"}]},{"name":"Maven","content":[{"snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>1.48</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <env>integration</env>\n        <url>http://optional-base-url</url>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n            <includes>\n                <include>scenarios/simple*.groovy</include>\n            </includes>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet","lang":"xml"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"It is also possible to include a set of base directories and WebTau will then find all ","type":"SimpleText"},{"code":"*.groovy","type":"InlinedCode"},{"text":" files within","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"them, recursively:","type":"SimpleText"}]},{"tabsContent":[{"name":"CLI","content":[{"paramsToHighlight":[],"type":"CliCommand","command":"webtau scenarios/rest"}]},{"name":"Maven","content":[{"snippet":"<plugin>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-maven-plugin</artifactId>\n    <version>1.48</version>\n    <executions>\n        <execution>\n            <phase>test</phase>\n            <goals>\n                <goal>run</goal>\n            </goals>\n        </execution>\n    </executions>\n    <configuration>\n        <workingDir>${project.basedir}/src/main/groovy</workingDir>\n        <env>integration</env>\n        <url>http://optional-base-url</url>\n        <tests>\n            <directory>${project.basedir}/src/main/groovy</directory>\n        </tests>\n    </configuration>\n</plugin>","type":"Snippet","lang":"xml"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"In this mode, the HTML report that WebTau generates will show paths to the files relative to the","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"requested directories.","type":"SimpleText"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Groovy Standalone Runner","pageTitle":"Test Execution","pageMeta":{},"dirName":"groovy-standalone-runner","fileName":"test-execution","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Serial execution","id":"serial-execution"},{"title":"Parallel execution","id":"parallel-execution"},{"title":"Scenario discovery","id":"scenario-discovery"}]}},{"type":"Page","content":[{"id":"basic-properties","type":"Section","title":"Basic Properties","content":[{"type":"Paragraph","content":[{"text":"Use assignment to register a config value","type":"SimpleText"}]},{"snippet":"email = 'hello'\ncliPath = ['p1', 'p2']","surroundedBy":"basic-properties","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]},{"id":"complex-properties","type":"Section","title":"Complex Properties","content":[{"type":"Paragraph","content":[{"text":"Multiple ways to register complex properties","type":"SimpleText"}]},{"snippet":"complex.my_var.nested = 'webtau' // direct nested assignment\n\ncomplex { // scope definition for multiple assignment\n    abc = 'abc_value'\n    EDF = 'edf_value'\n    subNested {\n        nested = 'nested_nested'\n    }\n}\n\nanotherComplex = [nested: 'vn'] // map based assignment\nanotherComplex.anotherNested = 'an'","surroundedBy":"complex-properties","commentsType":"inline","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]},{"id":"environments","type":"Section","title":"Environments","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"environments","type":"InlinedCode"},{"text":" block to define environment specific values and overrides","type":"SimpleText"}]},{"snippet":"email = 'hello'\nserver = 'my-server'\nenvironments {\n    dev {\n        email = 'dev-hello'\n    }\n\n    beta {\n        email = 'beta'\n    }\n\n    prod {\n        server = 'prod-server'\n    }\n}","surroundedBy":"environment-override","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Environment specific complex object overrides","type":"SimpleText"}]},{"snippet":"complex = [id1: 'value1', id2: 'value2']\nenvironments {\n    dev {\n        complex.id1 = 'value1-dev'\n        complex.id3 = 'value3-dev'\n    }\n\n    beta {\n        complex.id3 = 'value3-beta'\n    }\n}","surroundedBy":"environment-complex-override","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"paramsToHighlight":[],"type":"CliCommand","command":"webtau --env=dev"}]},{"id":"personas","type":"Section","title":"Personas","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"personas","type":"InlinedCode"},{"text":" block to define persona specific values and overrides","type":"SimpleText"}]},{"snippet":"email = 'hello'\npersonas {\n    Alice {\n        email = 'alice-email'\n    }\n\n    Bob {\n        email = 'bob-email'\n    }\n}","surroundedBy":"persona-overrides","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"},{"type":"Paragraph","content":[{"text":"Persona specific complex object overrides","type":"SimpleText"}]},{"snippet":"cliEnv = [\n        COMMON: 'common value',\n        ANOTHER_COMMON: 'another common value']\n\npersonas {\n    Alice {\n        cliEnv.CREDENTIALS = 'alice-token'\n        cliEnv.EXTRA_ALICE = 'extra alice'\n    }\n\n    Bob {\n        cliEnv.CREDENTIALS = 'bob-token'\n        cliEnv.EXTRA_BOB = 'extra bob'\n    }\n}","surroundedBy":"persona-complex-overrides","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]},{"id":"persona-inside-environment","type":"Section","title":"Persona Inside Environment","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"personas","type":"InlinedCode"},{"text":" block inside specific environment within ","type":"SimpleText"},{"code":"environments","type":"InlinedCode"},{"text":" block to have persona override for an environment","type":"SimpleText"}]},{"snippet":"cliEnv = [\n        COMMON: 'common value',\n        ANOTHER_COMMON: 'another common value']\n\npersonas {\n    Alice {\n        cliEnv.CREDENTIALS = 'alice-token' // default Alice's specific values\n        cliEnv.EXTRA_ALICE = 'extra alice'\n    }\n\n    Bob {\n        cliEnv.CREDENTIALS = 'bob-token'\n        cliEnv.EXTRA_BOB = 'extra bob'\n    }\n}\n\nenvironments {\n    dev {\n        personas {\n            Alice {\n                cliEnv.CREDENTIALS = 'alice-dev-token' // Alice's overrides for dev environment\n                cliEnv.EXTRA_ALICE = 'extra dev alice'\n                cliEnv.EXTRA_DEV_V = 'extra dev alice v'\n            }\n\n            Bob {\n                cliEnv.CREDENTIALS = 'bob-dev-token'\n                cliEnv.EXTRA_BOB = 'extra dev bob'\n            }\n        }\n    }\n\n    beta {\n        personas {\n            Alice {\n                cliEnv.CREDENTIALS = 'alice-beta-token'\n                cliEnv.EXTRA_ALICE = 'extra beta alice'\n                cliEnv.EXTRA_BETA_V = 'extra beta alice v'\n            }\n\n            Bob {\n                cliEnv.CREDENTIALS = 'bob-beta-token'\n                cliEnv.EXTRA_BOB = 'extra beta bob'\n            }\n        }\n    }\n}","surroundedBy":"complex-environment-persona","commentsType":"inline","type":"Snippet","title":"webtau.cfg.groovy","lang":"groovy"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Configuration","pageTitle":"Groovy Config File","pageMeta":{},"dirName":"configuration","fileName":"groovy-config-file","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Basic Properties","id":"basic-properties"},{"title":"Complex Properties","id":"complex-properties"},{"title":"Environments","id":"environments"},{"title":"Personas","id":"personas"},{"title":"Persona Inside Environment","id":"persona-inside-environment"}]}},{"type":"Page","content":[{"id":"cli-and-configuration-file-options","type":"Section","title":"CLI and configuration file options","content":[{"type":"ApiParameters","parameters":[{"name":"browserAnnotationsDarkFriendly","description":[{"type":"Paragraph","content":[{"text":"browser doc capture to use light colors annotations by default (for dark theme UI)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"browserAnnotationsDarkFriendly","type":[]},{"name":"browserDisableExtensions","description":[{"type":"Paragraph","content":[{"text":"run browser without extensions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"browserDisableExtensions","type":[]},{"name":"browserHeadless","description":[{"type":"Paragraph","content":[{"text":"run browser in headless mode","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"browserHeadless","type":[]},{"name":"browserHeight","description":[{"type":"Paragraph","content":[{"text":"browser window height","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}],"anchorId":"browserHeight","type":[]},{"name":"browserId","description":[{"type":"Paragraph","content":[{"text":"browser to use: chrome, firefox","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": chrome","type":"SimpleText"}]}],"anchorId":"browserId","type":[]},{"name":"browserRemoteDriverUrl","description":[{"type":"Paragraph","content":[{"text":"browser remote driver url","type":"SimpleText"}]}],"anchorId":"browserRemoteDriverUrl","type":[]},{"name":"browserStaleElementRetry","description":[{"type":"Paragraph","content":[{"text":"number of times to automatically retry for browser stale element actions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5","type":"SimpleText"}]}],"anchorId":"browserStaleElementRetry","type":[]},{"name":"browserStaleElementRetryWait","description":[{"type":"Paragraph","content":[{"text":"wait time in between browser stale element retries","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 100","type":"SimpleText"}]}],"anchorId":"browserStaleElementRetryWait","type":[]},{"name":"browserUrl","description":[{"type":"Paragraph","content":[{"text":"browser base url for application under test. It is being used instead of url when provided","type":"SimpleText"}]}],"anchorId":"browserUrl","type":[]},{"name":"browserVersion","description":[{"type":"Paragraph","content":[{"text":"browser version for automatic driver download","type":"SimpleText"}]}],"anchorId":"browserVersion","type":[]},{"name":"browserWidth","description":[{"type":"Paragraph","content":[{"text":"browser window width","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}],"anchorId":"browserWidth","type":[]},{"name":"cachePath","description":[{"type":"Paragraph","content":[{"text":"user driven cache base dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/.webtau-cache","type":"SimpleText"}]}],"anchorId":"cachePath","type":[]},{"name":"chromeBinPath","description":[{"type":"Paragraph","content":[{"text":"path to chrome binary","type":"SimpleText"}]}],"anchorId":"chromeBinPath","type":[]},{"name":"chromeDriverPath","description":[{"type":"Paragraph","content":[{"text":"path to chrome driver binary","type":"SimpleText"}]}],"anchorId":"chromeDriverPath","type":[]},{"name":"cliEnv","description":[{"type":"Paragraph","content":[{"text":"cli common environment variables","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": {}","type":"SimpleText"}]}],"anchorId":"cliEnv","type":[]},{"name":"cliPath","description":[{"type":"Paragraph","content":[{"text":"path items to append to path used for cli runs","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": []","type":"SimpleText"}]}],"anchorId":"cliPath","type":[]},{"name":"cliTimeout","description":[{"type":"Paragraph","content":[{"text":"cli foreground command run timeout (ms)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}],"anchorId":"cliTimeout","type":[]},{"name":"config","description":[{"type":"Paragraph","content":[{"text":"config file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau.cfg.groovy","type":"SimpleText"}]}],"anchorId":"config","type":[]},{"name":"consolePayloadOutputLimit","description":[{"type":"Paragraph","content":[{"text":"max number of lines to display in console for outputs (e.g. http response)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 500","type":"SimpleText"}]}],"anchorId":"consolePayloadOutputLimit","type":[]},{"name":"dbDriverClassName","description":[{"type":"Paragraph","content":[{"text":"primary database driver class name","type":"SimpleText"}]}],"anchorId":"dbDriverClassName","type":[]},{"name":"dbPassword","description":[{"type":"Paragraph","content":[{"text":"primary database password","type":"SimpleText"}]}],"anchorId":"dbPassword","type":[]},{"name":"dbUrl","description":[{"type":"Paragraph","content":[{"text":"primary database url","type":"SimpleText"}]}],"anchorId":"dbUrl","type":[]},{"name":"dbUserName","description":[{"type":"Paragraph","content":[{"text":"primary database user name","type":"SimpleText"}]}],"anchorId":"dbUserName","type":[]},{"name":"disableRedirects","description":[{"type":"Paragraph","content":[{"text":"disable following of redirects from HTTP calls","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"disableRedirects","type":[]},{"name":"docPath","description":[{"type":"Paragraph","content":[{"text":"path for captured request/responses, screenshots and other generated artifacts for documentation","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/doc-artifacts","type":"SimpleText"}]}],"anchorId":"docPath","type":[]},{"name":"env","description":[{"type":"Paragraph","content":[{"text":"environment id","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": local","type":"SimpleText"}]}],"anchorId":"env","type":[]},{"name":"failedReportPath","description":[{"type":"Paragraph","content":[{"text":"failed report file path","type":"SimpleText"}]}],"anchorId":"failedReportPath","type":[]},{"name":"firefoxBinPath","description":[{"type":"Paragraph","content":[{"text":"path to firefox binary","type":"SimpleText"}]}],"anchorId":"firefoxBinPath","type":[]},{"name":"firefoxDriverPath","description":[{"type":"Paragraph","content":[{"text":"path to firefox driver binary","type":"SimpleText"}]}],"anchorId":"firefoxDriverPath","type":[]},{"name":"fullStackTrace","description":[{"type":"Paragraph","content":[{"text":"print full stack trace to console","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"fullStackTrace","type":[]},{"name":"graphQLEndpoint","description":[{"type":"Paragraph","content":[{"text":"override the default graphQL endpoint","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /graphql","type":"SimpleText"}]}],"anchorId":"graphQLEndpoint","type":[]},{"name":"graphQLIgnoreIntrospectionFailures","description":[{"type":"Paragraph","content":[{"text":"ignore graphQL introspection failures, introspection is required for coverage reporting","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}],"anchorId":"graphQLIgnoreIntrospectionFailures","type":[]},{"name":"graphQLShowOperationAsQueryParam","description":[{"type":"Paragraph","content":[{"text":"pass the graphQL operation as operation=","type":"SimpleText"},{"text":" query parameter if present","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}],"anchorId":"graphQLShowOperationAsQueryParam","type":[]},{"name":"httpProxy","description":[{"type":"Paragraph","content":[{"text":"http proxy host:port","type":"SimpleText"}]}],"anchorId":"httpProxy","type":[]},{"name":"httpTimeout","description":[{"type":"Paragraph","content":[{"text":"http connect and read timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}],"anchorId":"httpTimeout","type":[]},{"name":"jsonSchemasDir","description":[{"type":"Paragraph","content":[{"text":"url of directory containing JSON schemas","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /home/runner/work/webtau/webtau/webtau-groovy-app","type":"SimpleText"}]}],"anchorId":"jsonSchemasDir","type":[]},{"name":"maxRedirects","description":[{"type":"Paragraph","content":[{"text":"Maximum number of redirects to follow for an HTTP call","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 20","type":"SimpleText"}]}],"anchorId":"maxRedirects","type":[]},{"name":"noColor","description":[{"type":"Paragraph","content":[{"text":"disable ANSI colors","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"noColor","type":[]},{"name":"numberOfThreads","description":[{"type":"Paragraph","content":[{"text":"number of threads on which to run test files (one file per thread), -1 will use as many threads as there are files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 1","type":"SimpleText"}]}],"anchorId":"numberOfThreads","type":[]},{"name":"openApiIgnoreAdditionalProperties","description":[{"type":"Paragraph","content":[{"text":"ignore additional OpenAPI properties","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"openApiIgnoreAdditionalProperties","type":[]},{"name":"openApiSpecUrl","description":[{"type":"Paragraph","content":[{"text":"url of OpenAPI 2 spec against which to validate http calls","type":"SimpleText"}]}],"anchorId":"openApiSpecUrl","type":[]},{"name":"parallel","description":[{"type":"Paragraph","content":[{"text":"run tests in parallel using numberOfThreads equals to number of files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"parallel","type":[]},{"name":"removeWebTauFromUserAgent","description":[{"type":"Paragraph","content":[{"text":"By default webtau appends webtau and its version to the user-agent, this disables that part","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"removeWebTauFromUserAgent","type":[]},{"name":"reportName","description":[{"type":"Paragraph","content":[{"text":"report name to show","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau report","type":"SimpleText"}]}],"anchorId":"reportName","type":[]},{"name":"reportNameUrl","description":[{"type":"Paragraph","content":[{"text":"report name url to navigate to when clicked","type":"SimpleText"}]}],"anchorId":"reportNameUrl","type":[]},{"name":"reportPath","description":[{"type":"Paragraph","content":[{"text":"report file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/webtau.report.html","type":"SimpleText"}]}],"anchorId":"reportPath","type":[]},{"name":"serverProxyMaxThreads","description":[{"type":"Paragraph","content":[{"text":"max number of threads for proxy servers (default number of CPUs * 2)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 4","type":"SimpleText"}]}],"anchorId":"serverProxyMaxThreads","type":[]},{"name":"termui","description":[{"type":"Paragraph","content":[{"text":"enable terminal UI to monitor tests (experimental)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"termui","type":[]},{"name":"url","description":[{"type":"Paragraph","content":[{"text":"base url for application under test","type":"SimpleText"}]}],"anchorId":"url","type":[]},{"name":"userAgent","description":[{"type":"Paragraph","content":[{"text":"User agent to send on HTTP requests","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau/1.48","type":"SimpleText"}]}],"anchorId":"userAgent","type":[]},{"name":"verbosityLevel","description":[{"type":"Paragraph","content":[{"text":"output verbosity level. 0 - no output; 1 - test names; 2 - first level steps; etc","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 2147483647","type":"SimpleText"}]}],"anchorId":"verbosityLevel","type":[]},{"name":"waitTimeout","description":[{"type":"Paragraph","content":[{"text":"wait timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5000","type":"SimpleText"}]}],"anchorId":"waitTimeout","type":[]},{"name":"workingDir","description":[{"type":"Paragraph","content":[{"text":"logical working dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ","type":"SimpleText"}]}],"anchorId":"workingDir","type":[]}]}]},{"id":"environment-variable-options","type":"Section","title":"Environment variable options","content":[{"type":"ApiParameters","parameters":[{"name":"WEBTAU_BROWSER_ANNOTATIONS_DARK_FRIENDLY","description":[{"type":"Paragraph","content":[{"text":"browser doc capture to use light colors annotations by default (for dark theme UI)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_ANNOTATIONS_DARK_FRIENDLY","type":[]},{"name":"WEBTAU_BROWSER_DISABLE_EXTENSIONS","description":[{"type":"Paragraph","content":[{"text":"run browser without extensions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_DISABLE_EXTENSIONS","type":[]},{"name":"WEBTAU_BROWSER_HEADLESS","description":[{"type":"Paragraph","content":[{"text":"run browser in headless mode","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_HEADLESS","type":[]},{"name":"WEBTAU_BROWSER_HEIGHT","description":[{"type":"Paragraph","content":[{"text":"browser window height","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_HEIGHT","type":[]},{"name":"WEBTAU_BROWSER_ID","description":[{"type":"Paragraph","content":[{"text":"browser to use: chrome, firefox","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": chrome","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_ID","type":[]},{"name":"WEBTAU_BROWSER_REMOTE_DRIVER_URL","description":[{"type":"Paragraph","content":[{"text":"browser remote driver url","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_REMOTE_DRIVER_URL","type":[]},{"name":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY","description":[{"type":"Paragraph","content":[{"text":"number of times to automatically retry for browser stale element actions","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY","type":[]},{"name":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY_WAIT","description":[{"type":"Paragraph","content":[{"text":"wait time in between browser stale element retries","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 100","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_STALE_ELEMENT_RETRY_WAIT","type":[]},{"name":"WEBTAU_BROWSER_URL","description":[{"type":"Paragraph","content":[{"text":"browser base url for application under test. It is being used instead of url when provided","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_URL","type":[]},{"name":"WEBTAU_BROWSER_VERSION","description":[{"type":"Paragraph","content":[{"text":"browser version for automatic driver download","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_VERSION","type":[]},{"name":"WEBTAU_BROWSER_WIDTH","description":[{"type":"Paragraph","content":[{"text":"browser window width","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 0","type":"SimpleText"}]}],"anchorId":"WEBTAU_BROWSER_WIDTH","type":[]},{"name":"WEBTAU_CACHE_PATH","description":[{"type":"Paragraph","content":[{"text":"user driven cache base dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/.webtau-cache","type":"SimpleText"}]}],"anchorId":"WEBTAU_CACHE_PATH","type":[]},{"name":"WEBTAU_CHROME_BIN_PATH","description":[{"type":"Paragraph","content":[{"text":"path to chrome binary","type":"SimpleText"}]}],"anchorId":"WEBTAU_CHROME_BIN_PATH","type":[]},{"name":"WEBTAU_CHROME_DRIVER_PATH","description":[{"type":"Paragraph","content":[{"text":"path to chrome driver binary","type":"SimpleText"}]}],"anchorId":"WEBTAU_CHROME_DRIVER_PATH","type":[]},{"name":"WEBTAU_CLI_ENV","description":[{"type":"Paragraph","content":[{"text":"cli common environment variables","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": {}","type":"SimpleText"}]}],"anchorId":"WEBTAU_CLI_ENV","type":[]},{"name":"WEBTAU_CLI_PATH","description":[{"type":"Paragraph","content":[{"text":"path items to append to path used for cli runs","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": []","type":"SimpleText"}]}],"anchorId":"WEBTAU_CLI_PATH","type":[]},{"name":"WEBTAU_CLI_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"cli foreground command run timeout (ms)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}],"anchorId":"WEBTAU_CLI_TIMEOUT","type":[]},{"name":"WEBTAU_CONFIG","description":[{"type":"Paragraph","content":[{"text":"config file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau.cfg.groovy","type":"SimpleText"}]}],"anchorId":"WEBTAU_CONFIG","type":[]},{"name":"WEBTAU_CONSOLE_PAYLOAD_OUTPUT_LIMIT","description":[{"type":"Paragraph","content":[{"text":"max number of lines to display in console for outputs (e.g. http response)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 500","type":"SimpleText"}]}],"anchorId":"WEBTAU_CONSOLE_PAYLOAD_OUTPUT_LIMIT","type":[]},{"name":"WEBTAU_DB_DRIVER_CLASS_NAME","description":[{"type":"Paragraph","content":[{"text":"primary database driver class name","type":"SimpleText"}]}],"anchorId":"WEBTAU_DB_DRIVER_CLASS_NAME","type":[]},{"name":"WEBTAU_DB_PASSWORD","description":[{"type":"Paragraph","content":[{"text":"primary database password","type":"SimpleText"}]}],"anchorId":"WEBTAU_DB_PASSWORD","type":[]},{"name":"WEBTAU_DB_URL","description":[{"type":"Paragraph","content":[{"text":"primary database url","type":"SimpleText"}]}],"anchorId":"WEBTAU_DB_URL","type":[]},{"name":"WEBTAU_DB_USER_NAME","description":[{"type":"Paragraph","content":[{"text":"primary database user name","type":"SimpleText"}]}],"anchorId":"WEBTAU_DB_USER_NAME","type":[]},{"name":"WEBTAU_DISABLE_REDIRECTS","description":[{"type":"Paragraph","content":[{"text":"disable following of redirects from HTTP calls","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_DISABLE_REDIRECTS","type":[]},{"name":"WEBTAU_DOC_PATH","description":[{"type":"Paragraph","content":[{"text":"path for captured request/responses, screenshots and other generated artifacts for documentation","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/doc-artifacts","type":"SimpleText"}]}],"anchorId":"WEBTAU_DOC_PATH","type":[]},{"name":"WEBTAU_ENV","description":[{"type":"Paragraph","content":[{"text":"environment id","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": local","type":"SimpleText"}]}],"anchorId":"WEBTAU_ENV","type":[]},{"name":"WEBTAU_FAILED_REPORT_PATH","description":[{"type":"Paragraph","content":[{"text":"failed report file path","type":"SimpleText"}]}],"anchorId":"WEBTAU_FAILED_REPORT_PATH","type":[]},{"name":"WEBTAU_FIREFOX_BIN_PATH","description":[{"type":"Paragraph","content":[{"text":"path to firefox binary","type":"SimpleText"}]}],"anchorId":"WEBTAU_FIREFOX_BIN_PATH","type":[]},{"name":"WEBTAU_FIREFOX_DRIVER_PATH","description":[{"type":"Paragraph","content":[{"text":"path to firefox driver binary","type":"SimpleText"}]}],"anchorId":"WEBTAU_FIREFOX_DRIVER_PATH","type":[]},{"name":"WEBTAU_FULL_STACK_TRACE","description":[{"type":"Paragraph","content":[{"text":"print full stack trace to console","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_FULL_STACK_TRACE","type":[]},{"name":"WEBTAU_GRAPH_QLENDPOINT","description":[{"type":"Paragraph","content":[{"text":"override the default graphQL endpoint","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /graphql","type":"SimpleText"}]}],"anchorId":"WEBTAU_GRAPH_QLENDPOINT","type":[]},{"name":"WEBTAU_GRAPH_QLIGNORE_INTROSPECTION_FAILURES","description":[{"type":"Paragraph","content":[{"text":"ignore graphQL introspection failures, introspection is required for coverage reporting","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}],"anchorId":"WEBTAU_GRAPH_QLIGNORE_INTROSPECTION_FAILURES","type":[]},{"name":"WEBTAU_GRAPH_QLSHOW_OPERATION_AS_QUERY_PARAM","description":[{"type":"Paragraph","content":[{"text":"pass the graphQL operation as operation=","type":"SimpleText"},{"text":" query parameter if present","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": true","type":"SimpleText"}]}],"anchorId":"WEBTAU_GRAPH_QLSHOW_OPERATION_AS_QUERY_PARAM","type":[]},{"name":"WEBTAU_HTTP_PROXY","description":[{"type":"Paragraph","content":[{"text":"http proxy host:port","type":"SimpleText"}]}],"anchorId":"WEBTAU_HTTP_PROXY","type":[]},{"name":"WEBTAU_HTTP_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"http connect and read timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 30000","type":"SimpleText"}]}],"anchorId":"WEBTAU_HTTP_TIMEOUT","type":[]},{"name":"WEBTAU_JSON_SCHEMAS_DIR","description":[{"type":"Paragraph","content":[{"text":"url of directory containing JSON schemas","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": /home/runner/work/webtau/webtau/webtau-groovy-app","type":"SimpleText"}]}],"anchorId":"WEBTAU_JSON_SCHEMAS_DIR","type":[]},{"name":"WEBTAU_MAX_REDIRECTS","description":[{"type":"Paragraph","content":[{"text":"Maximum number of redirects to follow for an HTTP call","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 20","type":"SimpleText"}]}],"anchorId":"WEBTAU_MAX_REDIRECTS","type":[]},{"name":"WEBTAU_NO_COLOR","description":[{"type":"Paragraph","content":[{"text":"disable ANSI colors","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_NO_COLOR","type":[]},{"name":"WEBTAU_NUMBER_OF_THREADS","description":[{"type":"Paragraph","content":[{"text":"number of threads on which to run test files (one file per thread), -1 will use as many threads as there are files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 1","type":"SimpleText"}]}],"anchorId":"WEBTAU_NUMBER_OF_THREADS","type":[]},{"name":"WEBTAU_OPEN_API_IGNORE_ADDITIONAL_PROPERTIES","description":[{"type":"Paragraph","content":[{"text":"ignore additional OpenAPI properties","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_OPEN_API_IGNORE_ADDITIONAL_PROPERTIES","type":[]},{"name":"WEBTAU_OPEN_API_SPEC_URL","description":[{"type":"Paragraph","content":[{"text":"url of OpenAPI 2 spec against which to validate http calls","type":"SimpleText"}]}],"anchorId":"WEBTAU_OPEN_API_SPEC_URL","type":[]},{"name":"WEBTAU_PARALLEL","description":[{"type":"Paragraph","content":[{"text":"run tests in parallel using numberOfThreads equals to number of files","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_PARALLEL","type":[]},{"name":"WEBTAU_REMOVE_WEB_TAU_FROM_USER_AGENT","description":[{"type":"Paragraph","content":[{"text":"By default webtau appends webtau and its version to the user-agent, this disables that part","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_REMOVE_WEB_TAU_FROM_USER_AGENT","type":[]},{"name":"WEBTAU_REPORT_NAME","description":[{"type":"Paragraph","content":[{"text":"report name to show","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau report","type":"SimpleText"}]}],"anchorId":"WEBTAU_REPORT_NAME","type":[]},{"name":"WEBTAU_REPORT_NAME_URL","description":[{"type":"Paragraph","content":[{"text":"report name url to navigate to when clicked","type":"SimpleText"}]}],"anchorId":"WEBTAU_REPORT_NAME_URL","type":[]},{"name":"WEBTAU_REPORT_PATH","description":[{"type":"Paragraph","content":[{"text":"report file path","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ${workingDir}/webtau.report.html","type":"SimpleText"}]}],"anchorId":"WEBTAU_REPORT_PATH","type":[]},{"name":"WEBTAU_SERVER_PROXY_MAX_THREADS","description":[{"type":"Paragraph","content":[{"text":"max number of threads for proxy servers (default number of CPUs * 2)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 4","type":"SimpleText"}]}],"anchorId":"WEBTAU_SERVER_PROXY_MAX_THREADS","type":[]},{"name":"WEBTAU_TERMUI","description":[{"type":"Paragraph","content":[{"text":"enable terminal UI to monitor tests (experimental)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": false","type":"SimpleText"}]}],"anchorId":"WEBTAU_TERMUI","type":[]},{"name":"WEBTAU_URL","description":[{"type":"Paragraph","content":[{"text":"base url for application under test","type":"SimpleText"}]}],"anchorId":"WEBTAU_URL","type":[]},{"name":"WEBTAU_USER_AGENT","description":[{"type":"Paragraph","content":[{"text":"User agent to send on HTTP requests","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": webtau/1.48","type":"SimpleText"}]}],"anchorId":"WEBTAU_USER_AGENT","type":[]},{"name":"WEBTAU_VERBOSITY_LEVEL","description":[{"type":"Paragraph","content":[{"text":"output verbosity level. 0 - no output; 1 - test names; 2 - first level steps; etc","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 2147483647","type":"SimpleText"}]}],"anchorId":"WEBTAU_VERBOSITY_LEVEL","type":[]},{"name":"WEBTAU_WAIT_TIMEOUT","description":[{"type":"Paragraph","content":[{"text":"wait timeout in milliseconds","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": 5000","type":"SimpleText"}]}],"anchorId":"WEBTAU_WAIT_TIMEOUT","type":[]},{"name":"WEBTAU_WORKING_DIR","description":[{"type":"Paragraph","content":[{"text":"logical working dir","type":"SimpleText"}]},{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"default value","type":"SimpleText"}]},{"text":": ","type":"SimpleText"}]}],"anchorId":"WEBTAU_WORKING_DIR","type":[]}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Configuration","pageTitle":"Options","pageMeta":{},"dirName":"configuration","fileName":"options","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"CLI and configuration file options","id":"cli-and-configuration-file-options"},{"title":"Environment variable options","id":"environment-variable-options"}]}},{"type":"Page","content":[{"id":"webtau-runner","type":"Section","title":"WebTau Runner","content":[{"type":"Paragraph","content":[{"text":"You can use WebTau ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"graphql.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" methods as in a junit 4 tests, but to enable reporting you need to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"@RunWith(WebTauRunner.class)","type":"InlinedCode"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package com.example.tests.junit4\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.* // convenient single import for DSL methods and props like http\n\n@RunWith(WebTauRunner)  // runner is required to have this test to be a part of generated html report\nclass CustomerCrudSingleGroovyTest {\n    private def customerPayload = [firstName: 'FN',\n                                   lastName: 'LN']\n    private def changedCustomerPayload = [*:customerPayload, lastName: 'NLN']\n\n    @Test\n    void crud() {\n        def id = http.post(\"/customers\", customerPayload) {\n            return id\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should == customerPayload\n        }\n\n        http.put(\"/customers/$id\", changedCustomerPayload) {\n            body.should == changedCustomerPayload\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should == changedCustomerPayload\n        }\n\n        http.delete(\"/customers/$id\") {\n            statusCode.should == 204\n        }\n\n        http.get(\"/customers/$id\") {\n            statusCode.should == 404\n        }\n    }\n}","commentsType":"inline","type":"Snippet","title":"CRUD test in a single method","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit4;\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport java.util.Map;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*; // convenient single import for DSL methods and props like http and equal, aMapOf, etc\n\n@RunWith(WebTauRunner.class) // runner is required to have this test to be a part of generated html report\npublic class CustomerCrudSingleJavaTest {\n    private Map<String, Object> customerPayload = createCustomerPayload();\n    private Map<String, Object> changedCustomerPayload = createChangedCustomerPayload();\n\n    @Test\n    public void crud() {\n        int id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(404));\n        }));\n    }\n\n    private Map<String, Object> createCustomerPayload() {\n        return aMapOf(\n                \"firstName\", \"FN\",\n                \"lastName\", \"LN\");\n    }\n\n    private Map<String, Object> createChangedCustomerPayload() {\n        Map<String, Object> payload = createCustomerPayload();\n        payload.put(\"lastName\", \"NLN\");\n\n        return payload;\n    }\n}","commentsType":"inline","type":"Snippet","title":"CRUD test in a single method","lang":"java"}]}],"type":"Tabs"}]},{"id":"beforeafter","type":"Section","title":"Before/After","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"@Before","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"@After","type":"InlinedCode"},{"text":" standard ","type":"SimpleText"},{"code":"JUnit 4","type":"InlinedCode"},{"text":" annotations to implement init and cleanup logic for each test.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package com.example.tests.junit4\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport org.junit.After\nimport org.junit.Before\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@RunWith(WebTauRunner.class)\nclass CustomerCrudBeforeAfterGroovyTest {\n    private def customerPayload = [firstName: 'FN',\n                                   lastName: 'LN']\n    private def changedCustomerPayload = [*:customerPayload, lastName: 'NLN']\n\n    private int customerId\n\n    @Before\n    void \"create customer\"() {\n        customerId = http.post(\"/customers\", customerPayload) {\n            return id // We deliberately named field as \"customerId\" to avoid conflict with response field. Alternatively you can use body.id to avoid the conflict\n        }\n    }\n\n    @Test\n    void \"query customer\"() {\n        http.get(\"/customers/$customerId\") {\n            body.should == customerPayload\n        }\n    }\n\n    @Test\n    void \"update customer\"() {\n        http.put(\"/customers/$customerId\", changedCustomerPayload) {\n            body.should == changedCustomerPayload\n        }\n\n        http.get(\"/customers/$customerId\") {\n            body.should == changedCustomerPayload\n        }\n    }\n\n    @After\n    void \"delete customer\"() {\n        http.delete(\"/customers/$customerId\") {\n            statusCode.should == 204\n        }\n\n        http.get(\"/customers/$customerId\") {\n            statusCode.should == 404\n        }\n    }\n}","commentsType":"inline","type":"Snippet","title":"CRUD test with @Before and @After annotations","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit4;\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport java.util.Map;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class CustomerCrudBeforeAfterJavaTest {\n    private Map<String, Object> customerPayload = createCustomerPayload();\n    private Map<String, Object> changedCustomerPayload = createChangedCustomerPayload();\n    private int customerId;\n\n    @Before\n    public void createCustomer() {\n        customerId = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n    }\n\n    @Test\n    public void queryCustomer() {\n        http.get(\"/customers/\" + customerId, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n    }\n\n    @Test\n    public void updateCustomer() {\n        http.put(\"/customers/\" + customerId, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + customerId, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n    }\n\n    @After\n    public void deleteCustomer() {\n        http.delete(\"/customers/\" + customerId, (header, body) -> {\n            header.statusCode().should(equal(204));\n        });\n\n        http.get(\"/customers/\" + customerId, ((header, body) -> {\n            header.statusCode().should(equal(404));\n        }));\n    }\n\n    private Map<String, Object> createCustomerPayload() {\n        return aMapOf(\n                \"firstName\", \"FN\",\n                \"lastName\", \"LN\");\n    }\n\n    private Map<String, Object> createChangedCustomerPayload() {\n        Map<String, Object> payload = createCustomerPayload();\n        payload.put(\"lastName\", \"NLN\");\n\n        return payload;\n    }\n}","commentsType":"inline","type":"Snippet","title":"CRUD test with @Before and @After annotations","lang":"java"}]}],"type":"Tabs"}]},{"id":"beforeclassafterclass","type":"Section","title":"BeforeClass/AfterClass","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"@BeforeClass","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"@AfterClass","type":"InlinedCode"},{"text":" to prepare and cleanup resources required for multiple test methods.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package com.example.tests.junit4\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner\nimport org.junit.AfterClass\nimport org.junit.BeforeClass\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.http\n\n@RunWith(WebTauRunner.class)\nclass CustomerQueryGroovyTest {\n    private static def id1 // keep track of created ids to assert and cleanup later\n    private static def id2\n    private static def id3\n\n    @BeforeClass\n    static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\")\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\")\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\")\n    }\n\n    @Test\n    void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", [name: \"CQ_FN1\"]) {\n            body.should == [\"*id\" | \"firstName\" | \"lastName\"] { // star(*) marks key column so assertion is order agnostic\n                            __________________________________\n                             id1  | \"CQ_FN1\"    | \"CQ_LN1\"\n                             id2  | \"CQ_FN1\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @Test\n    void queryByLastName() {\n        http.get(\"/customers/search/last-name\", [name: \"CQ_LN2\"]) {\n           body.should == [\"*id\" | \"firstName\" | \"lastName\"] {\n                          __________________________________\n                            id2  | \"CQ_FN1\"    | \"CQ_LN2\"\n                            id3  | \"CQ_FN2\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @AfterClass\n    static void cleanup() {\n        [id1, id2, id3].each { http.delete(\"/customers/$it\") }\n    }\n\n    private static def createCustomer(String firstName, String lastName) {\n        return http.post(\"/customers\", [firstName: firstName, lastName: lastName]) { id }\n    }\n}","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit4;\n\nimport org.testingisdocumenting.webtau.junit4.WebTauRunner;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport java.util.Map;\nimport java.util.stream.Stream;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@RunWith(WebTauRunner.class)\npublic class CustomerQueryJavaTest {\n    private static Integer id1; // keep track of created ids to assert and cleanup later\n    private static Integer id2;\n    private static Integer id3;\n\n    @BeforeClass\n    public static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\");\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\");\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\");\n    }\n\n    @Test\n    public void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", http.query(\"name\", \"CQ_FN1\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\", // star(*) marks key column so assertion is order agnostic\n                                   ________________________________,\n                                      id1, \"CQ_FN1\"   , \"CQ_LN1\",\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @Test\n    public void queryByLastName() {\n        http.get(\"/customers/search/last-name\", http.query(\"name\", \"CQ_LN2\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\",\n                                    ________________________________,\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\",\n                                      id3, \"CQ_FN2\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @AfterClass\n    public static void cleanup() {\n        Stream.of(id1, id2, id3).forEach(id -> http.delete(\"/customers/\" + id));\n    }\n\n    private static int createCustomer(String firstName, String lastName) {\n        Map<String, Object> payload = aMapOf(\n                \"firstName\", firstName,\n                \"lastName\", lastName);\n\n        return http.post(\"/customers\", payload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n    }\n}","commentsType":"inline","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"maven-import","type":"Section","title":"Maven Import","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit4</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","lang":"xml"}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Generic Runners","pageTitle":"JUnit 4","pageMeta":{},"dirName":"generic-runners","fileName":"JUnit-4","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"WebTau Runner","id":"webtau-runner"},{"title":"Before/After","id":"beforeafter"},{"title":"BeforeClass/AfterClass","id":"beforeclassafterclass"},{"title":"Maven Import","id":"maven-import"}]}},{"type":"Page","content":[{"id":"webtau-runner","type":"Section","title":"WebTau Runner","content":[{"type":"Paragraph","content":[{"text":"You can use WebTau ","type":"SimpleText"},{"code":"http.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"graphql.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"browser.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"cli.","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"db.","type":"InlinedCode"},{"text":" methods as in a junit 5 tests, but to enable reporting you need to use","type":"SimpleText"},{"type":"SoftLineBreak"},{"code":"@WebTau","type":"InlinedCode"},{"text":" annotation","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package com.example.tests.junit5\n\nimport org.testingisdocumenting.webtau.junit5.WebTau\nimport org.junit.jupiter.api.*\n\nimport static org.testingisdocumenting.webtau.WebTauGroovyDsl.*\n\n@WebTau\n@TestMethodOrder(MethodOrderer.OrderAnnotation) // forcing methods execution order\n@DisplayName(\"customer CRUD\")\nclass CustomerCrudSeparatedGroovyTest {\n    private static def customerPayload = [firstName: 'FN',\n                                          lastName : 'LN']\n    private static def changedCustomerPayload = [*: customerPayload, lastName: 'NLN']\n\n    private static def id\n\n    @BeforeAll\n    @DisplayName(\"create customer\") // optional friendly name for reporting purposes\n    static void createCustomer() {\n        id = http.post(\"/customers\", customerPayload) {\n            body.id // using body prefix is required in this case as id conflicts with class field name\n        }\n\n        id.shouldNot == 0\n    }\n\n    @Test\n    @Order(1)\n    @DisplayName(\"read customer\")\n    void read() {\n        http.get(\"/customers/$id\") {\n            body.should == customerPayload\n        }\n    }\n\n    @Test\n    @Order(2) // order dependence saves from creating customer on every test\n    @DisplayName(\"update customer\")\n    void update() {\n        http.put(\"/customers/$id\", changedCustomerPayload) {\n            body.should == changedCustomerPayload\n        }\n\n        http.get(\"/customers/$id\") {\n            body.should == changedCustomerPayload\n        }\n    }\n\n    @Test\n    @Order(3) // but you can still run each method independently\n    @DisplayName(\"delete customer\")\n    void delete() {\n        http.delete(\"/customers/$id\") {\n            header.statusCode.should == 204\n        }\n\n        http.get(\"/customers/$id\") {\n            header.statusCode.should == 404\n        }\n\n        id = -1 // marking as deleted to let cleanup step know that no delete is required\n    }\n\n    @AfterAll\n    static void cleanup() { // optional (since we create new ids all the time) step to keep your environment clean\n        if (id == -1) {\n            return\n        }\n\n        http.delete(\"/customers/$id\")\n    }\n}","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit5;\n\nimport org.testingisdocumenting.webtau.junit5.WebTau;\nimport org.junit.jupiter.api.*;\n\nimport java.util.Map;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@WebTau\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class) // forcing methods execution order\n@DisplayName(\"customer CRUD\")\npublic class CustomerCrudSeparatedJavaTest {\n    private static final Map<String, ?> customerPayload = aMapOf(\n            \"firstName\", \"FN\",\n            \"lastName\", \"LN\" );\n\n    private static final Map<String, ?> changedCustomerPayload = aMapOf(\n            customerPayload,\n            \"lastName\", \"NLN\");\n\n    private static int id;\n\n    @BeforeAll\n    @DisplayName(\"create customer\") // optional friendly name for reporting purposes\n    static void createCustomer() {\n        id = http.post(\"/customers\", customerPayload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n\n        actual(id).shouldNot(equal(0));\n    }\n\n    @Test\n    @Order(1)\n    @DisplayName(\"read customer\")\n    void read() {\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(customerPayload));\n        }));\n    }\n\n    @Test\n    @Order(2) // order dependence saves from creating customer on every test\n    @DisplayName(\"update customer\")\n    void update() {\n        http.put(\"/customers/\" + id, changedCustomerPayload, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            body.should(equal(changedCustomerPayload));\n        }));\n    }\n\n    @Test\n    @Order(3) // but you can still run each method independently\n    @DisplayName(\"delete customer\")\n    void delete() {\n        http.delete(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(204));\n        }));\n\n        http.get(\"/customers/\" + id, ((header, body) -> {\n            header.statusCode().should(equal(404));\n        }));\n\n        id = -1; // marking as deleted to let cleanup step know that no delete is required\n    }\n\n    @AfterAll\n    static void cleanup() { // optional (since we create new ids all the time) step to keep your environment clean\n        if (id == -1) {\n            return;\n        }\n\n        http.delete(\"/customers/\" + id);\n    }\n}","commentsType":"inline","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"beforeallafterall","type":"Section","title":"BeforeAll/AfterAll","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"@BeforeAll","type":"InlinedCode"},{"text":" and ","type":"SimpleText"},{"code":"@AfterAll","type":"InlinedCode"},{"text":" to prepare and cleanup resources required for multiple test methods.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"package com.example.tests.junit5\n\nimport org.testingisdocumenting.webtau.junit5.WebTau\nimport org.junit.jupiter.api.AfterAll\nimport org.junit.jupiter.api.BeforeAll\nimport org.junit.jupiter.api.DisplayName\nimport org.junit.jupiter.api.Test\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.http\n\n@WebTau\n@DisplayName(\"customer query\")\nclass CustomerQueryGroovyTest {\n    private static def id1 // keep track of created ids to assert and cleanup later\n    private static def id2\n    private static def id3\n\n    @BeforeAll\n    @DisplayName(\"create customers\")\n    static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\")\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\")\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\")\n    }\n\n    @Test\n    @DisplayName(\"query by first name\")\n    void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", [name: \"CQ_FN1\"]) {\n            body.should == [\"*id\" | \"firstName\" | \"lastName\"] { // star(*) marks key column so assertion is order agnostic\n                           __________________________________\n                             id1  | \"CQ_FN1\"    | \"CQ_LN1\"\n                             id2  | \"CQ_FN1\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @Test\n    @DisplayName(\"query by last name\")\n    void queryByLastName() {\n        http.get(\"/customers/search/last-name\", [name: \"CQ_LN2\"]) {\n            body.should == [\"*id\" | \"firstName\" | \"lastName\"] {\n                           __________________________________\n                             id2  | \"CQ_FN1\"    | \"CQ_LN2\"\n                             id3  | \"CQ_FN2\"    | \"CQ_LN2\" }\n        }\n    }\n\n    @AfterAll\n    @DisplayName(\"clean up\")\n    static void cleanup() {\n        [id1, id2, id3].each { http.delete(\"/customers/$it\") }\n    }\n\n    private static def createCustomer(String firstName, String lastName) {\n        return http.post(\"/customers\", [firstName: firstName, lastName: lastName]) { id }\n    }\n}","commentsType":"inline","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"package com.example.tests.junit5;\n\nimport org.junit.jupiter.api.AfterAll;\nimport org.junit.jupiter.api.BeforeAll;\nimport org.junit.jupiter.api.DisplayName;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Map;\nimport java.util.stream.Stream;\n\nimport static org.testingisdocumenting.webtau.WebTauDsl.*;\n\n@DisplayName(\"customer query\")\nclass CustomerQueryJavaTest {\n    private static Integer id1; // keep track of created ids to assert and cleanup later\n    private static Integer id2;\n    private static Integer id3;\n\n    @BeforeAll\n    @DisplayName(\"create customers\")\n    static void createCustomers() {\n        id1 = createCustomer(\"CQ_FN1\", \"CQ_LN1\");\n        id2 = createCustomer(\"CQ_FN1\", \"CQ_LN2\");\n        id3 = createCustomer(\"CQ_FN2\", \"CQ_LN2\");\n    }\n\n    @Test\n    @DisplayName(\"query by first name\")\n    void queryByFirstName() {\n        http.get(\"/customers/search/first-name\", http.query(\"name\", \"CQ_FN1\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\", // star(*) marks key column so assertion is order agnostic\n                                   ________________________________,\n                                      id1, \"CQ_FN1\"   , \"CQ_LN1\",\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @Test\n    @DisplayName(\"query by last name\")\n    void queryByLastName() {\n        http.get(\"/customers/search/last-name\", http.query(\"name\", \"CQ_LN2\"), (header, body) -> {\n            body.should(equal(table(\"*id\", \"firstName\", \"lastName\",\n                                    ________________________________,\n                                      id2, \"CQ_FN1\"   , \"CQ_LN2\",\n                                      id3, \"CQ_FN2\"   , \"CQ_LN2\")));\n        });\n    }\n\n    @AfterAll\n    @DisplayName(\"clean up\")\n    static void cleanup() {\n        Stream.of(id1, id2, id3).forEach(id -> http.delete(\"/customers/\" + id));\n    }\n\n    private static int createCustomer(String firstName, String lastName) {\n        Map<String, Object> payload = aMapOf(\n                \"firstName\", firstName,\n                \"lastName\", lastName);\n\n        return http.post(\"/customers\", payload, ((header, body) -> {\n            return body.get(\"id\");\n        }));\n    }\n}","commentsType":"inline","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"maven-import","type":"Section","title":"Maven Import","content":[{"snippet":"<dependency>\n    <groupId>org.testingisdocumenting.webtau</groupId>\n    <artifactId>webtau-junit5</artifactId>\n    <version>1.48</version>\n</dependency>","type":"Snippet","lang":"xml"}]},{"id":"testfactory","type":"Section","title":"TestFactory","content":[{"type":"Paragraph","content":[{"text":"With the additional annotation ","type":"SimpleText"},{"code":"@TestFactory","type":"InlinedCode"},{"text":" you can use ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" as an easy-to-read source of","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"similar but independent tests where each row is treated as its own test (comparable to JUnit 4's","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"parameterized tests), optionally with a descriptive label.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Here are examples of parameterized tests with and without labels, and how an IDE uses the label for display purposes:","type":"SimpleText"}]},{"snippet":"@TestFactory\ndef \"individual tests use generated display labels\"() {\n    [\"price\" | \"quantity\" | \"outcome\"] {\n    _________________________________\n      10     |  30        |  300\n      -10    |  30        | -300\n    }.test {\n        PriceCalculator.calculate(price, quantity).should == outcome\n    }\n}","entry":"individual tests use generated display labels","type":"Snippet","title":"Parameterized tests without explicit label","lang":"groovy"},{"snippet":"@TestFactory\ndef \"individual tests can use an optional display label to clarify the use case\"() {\n    [\"label\"           | \"price\" | \"quantity\" | \"outcome\"] {\n    ___________________________________________________\n      \"positive price\" | 10      |  30        |  300\n      \"negative price\" | -10     |  30        | -300\n    }.test {\n        PriceCalculator.calculate(price, quantity).should == outcome\n    }\n}","entry":"individual tests can use an optional display label to clarify the use case","type":"Snippet","title":"Parameterized tests with explicit label","lang":"groovy"},{"shapes":[],"width":402.0,"imageSrc":"/webtau/img/intellij-parameterized-tests.png","type":"AnnotatedImage","height":156.0,"timestamp":1653578199522}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"Generic Runners","pageTitle":"JUnit 5","pageMeta":{},"dirName":"generic-runners","fileName":"JUnit-5","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"WebTau Runner","id":"webtau-runner"},{"title":"BeforeAll/AfterAll","id":"beforeallafterall"},{"title":"Maven Import","id":"maven-import"},{"title":"TestFactory","id":"testfactory"}]}},{"type":"Page","content":[{"id":"data-focused-tests","type":"Section","title":"Data Focused Tests","content":[{"type":"Paragraph","content":[{"text":"WebTau simplifies writing REST/GraphQL/Browser/DB/CLI tests. On top of that if the logic behind those layers is written in JVM based language,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"WebTau also simplifies testing logic behind those layers directly.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"WebTau makes tests to be focused on input and output by reducing boilerplate.","type":"SimpleText"}]}]},{"id":"simplified-input-preparation","type":"Section","title":"Simplified Input Preparation","content":[{"tabsContent":[{"name":"Groovy","content":[{"snippet":"@Test\nvoid \"diversified teams should have various levels and time at company\"() {\n    def employeeData = [ \"id\"    | \"level\" | \"monthsAtCompany\"] {\n                       _______________________________________\n                         \"bob\"   |       2 |  12\n                         \"smith\" |       4 |  34\n                         \"john\"  |       3 |  20 }\n\n    def diversified = peopleManagement.diversityLevel(employees(employeeData))\n    diversified.should == true\n}","entry":"diversified teams should have various levels and time at company","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"@Test\npublic void diversifiedTeamsShouldHaveVariousLevelsAndTimeAtCompany() {\n    TableData employeeData = table(     \"id\", \"level\", \"monthsAtCompany\").values(\n                                       \"bob\",       2, 12,\n                                     \"smith\",       4, 34,\n                                      \"john\",       3, 20);\n\n    boolean diversified = peopleManagement.diversityLevel(employees(employeeData));\n    actual(diversified).should(equal(true));\n}","entry":"diversifiedTeamsShouldHaveVariousLevelsAndTimeAtCompany","type":"Snippet","lang":"java"}]}],"type":"Tabs"}]},{"id":"simplified-output-validation","type":"Section","title":"Simplified Output Validation","content":[{"type":"Paragraph","content":[{"text":"Complex data and assertions are first class citizens.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"@Test\nvoid \"provides access to new joiners\"() {\n    TableData allEmployees = [\"id\"    | \"level\" | \"monthsAtCompany\"] {\n                              ______________________________________\n                              \"alice\" |       5 |  1\n                              \"bob\"   |       3 |  0\n                              \"smith\" |       4 |  1\n                              \"cat\"   |       4 |  0 }\n\n    addEmployees(allEmployees)\n\n    dao.thisWeekJoiners().should == [\"id\"    | \"level\" | \"monthsAtCompany\"] {\n                                     ______________________________________\n                                     \"bob\"   | 3       | 0\n                                     \"cat\"   | 4       | 0  }\n}","entry":"provides access to new joiners","type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"@Test\npublic void providesAccessToNewJoiners() {\n    TableData allEmployees = table(    \"id\", \"level\", \"monthsAtCompany\",\n                                    ____________________________________,\n                                    \"alice\",       5,   1,\n                                      \"bob\",       3,   0,\n                                    \"smith\",       4,   1,\n                                      \"cat\",       4,   0);\n    addEmployees(allEmployees);\n\n    actual(dao.thisWeekJoiners()).should(equal(table(   \"*id\", \"level\", \"monthsAtCompany\",\n                                                        ____________________________________,\n                                                        \"bob\",       3,   0,\n                                                        \"cat\",       4,   0)));\n}","entry":"providesAccessToNewJoiners","type":"Snippet","lang":"java"},{"type":"Paragraph","content":[{"text":"Note: The examples above assumes ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauCore.*","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauDsl.*","type":"InlinedCode"},{"text":".","type":"SimpleText"}]}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"For more ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" features, check ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"reference page","type":"SimpleText"}],"url":"/webtau/reference/table-data"}]}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"JVM Business Logic","pageTitle":"Data Driven","pageMeta":{},"dirName":"JVM-business-logic","fileName":"data-driven","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Data Focused Tests","id":"data-focused-tests"},{"title":"Simplified Input Preparation","id":"simplified-input-preparation"},{"title":"Simplified Output Validation","id":"simplified-output-validation"}]}},{"type":"Page","content":[{"id":"living-document","type":"Section","title":"Living Document","content":[{"type":"Paragraph","content":[{"text":"In your test you can capture input and output and save it to a file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"By using documentation systems you can use the captured artifacts to render business friendly documentation of your business logic.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"As system evolves, so do your tests and so does your documentation. Essentially you will have a living document describing your system.","type":"SimpleText"}]}]},{"id":"capture-input","type":"Section","title":"Capture Input","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"doc.capture","type":"InlinedCode"},{"text":" to save a test captured value to a file.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Example below assumes ","type":"SimpleText"},{"code":"core","type":"InlinedCode"},{"text":" static import.","type":"SimpleText"}]},{"snippet":"import static org.testingisdocumenting.webtau.WebTauCore.*;","type":"Snippet","lang":"java","includeRegexp":"import.*Core"},{"snippet":"TableData allEmployees = table(    \"id\", \"level\", \"monthsAtCompany\",\n                               ____________________________________,\n                                \"alice\",       5,   1,\n                                  \"bob\",       3,   0,\n                                \"smith\",       4,   1,\n                                  \"cat\",       4,   0);\naddEmployees(allEmployees);\n\ndoc.capture(\"all-employees\", allEmployees); // capture all employees for documentation purposes","entry":"initEmployees","bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"capturing a value","lang":"java"}]},{"id":"capture-expected-output","type":"Section","title":"Capture Expected Output","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"doc.expected.capture","type":"InlinedCode"},{"text":" to save most recent expected value.","type":"SimpleText"}]},{"snippet":"actual(dao.thisWeekJoiners()).should(equal(table(   \"*id\", \"level\", \"monthsAtCompany\",\n                                                ____________________________________,\n                                                    \"bob\",       3,   0,\n                                                    \"cat\",       4,   0)));\n\ndoc.expected.capture(\"new-joiners\"); // capture expected new joiners for documentation purposes","entry":"validateNewJoiners","bodyOnly":true,"commentsType":"inline","type":"Snippet","title":"capturing most recent expected","lang":"java"}]},{"id":"znai-example","type":"Section","title":"Znai Example","content":[{"type":"Paragraph","content":[{"text":"Since this documentation is rendered using ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}],"url":"https://github.org/testingisdocumenting/znai"},{"text":" here is an example of how to use the captured artifacts.","type":"SimpleText"},{"type":"SoftLineBreak"},{"isFile":false,"type":"Link","content":[{"text":"Znai","type":"SimpleText"}],"url":"https://github.org/testingisdocumenting/znai"},{"text":" has ","type":"SimpleText"},{"code":":include-table:","type":"InlinedCode"},{"text":" plugin to render a table giving a json or CSV file.","type":"SimpleText"}]},{"snippet":":include-table: doc-artifacts/all-employees.json\n:include-table: doc-artifacts/new-joiners.json\n","type":"Snippet","lineNumber":"","lang":"text"},{"type":"Paragraph","content":[{"text":"Below is the example of the business logic rendered as documentation.","type":"SimpleText"}]},{"type":"ThematicBreak"},{"type":"Paragraph","content":[{"text":"Our HR system consider all employees that has been in the company less than a month as new joiners.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"For example, giving employees:","type":"SimpleText"}]},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"alice","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"5","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"smith","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"1","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"cat","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]]],"columns":[{"title":"id"},{"title":"level"},{"title":"monthsAtCompany"}]}},{"type":"Paragraph","content":[{"text":"System will list following employees as new joiners:","type":"SimpleText"}]},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"cat","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"4","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"0","type":"SimpleText"}]}]]],"columns":[{"title":"id"},{"title":"level"},{"title":"monthsAtCompany"}]}}]}],"lastModifiedTime":1653578199522,"tocItem":{"sectionTitle":"JVM Business Logic","pageTitle":"Documentation Artifacts","pageMeta":{},"dirName":"JVM-business-logic","fileName":"documentation-artifacts","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Living Document","id":"living-document"},{"title":"Capture Input","id":"capture-input"},{"title":"Capture Expected Output","id":"capture-expected-output"},{"title":"Znai Example","id":"znai-example"}]}},{"type":"Page","content":[{"id":"create","type":"Section","title":"Create","content":[{"type":"Paragraph","content":[{"text":"Use language specific DSL to create ","type":"SimpleText"},{"code":"TableData","type":"InlinedCode"},{"text":" instance:","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"Col A\" | \"Col B\" | \"Col C\"] {\n________________________________\n   \"v1a\" |   \"v1b\" | \"v1c\"\n   \"v2a\" |   \"v2b\" | \"v2c\" }","entry":"createTableWithUnderscore","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"Col A\", \"Col B\", \"Col C\",\n      ________________________________,\n        \"v1a\",   \"v1b\", \"v1c\",\n        \"v2a\",   \"v2b\", \"v2c\")","removeSemicolon":true,"entry":"createTableDataInOneGo","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true},{"type":"Paragraph","content":[{"text":"Note: The example above assumes ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauCore.*","type":"InlinedCode"},{"text":" or ","type":"SimpleText"},{"code":"import static org.testingisdocumenting.webtau.WebTauDsl.*","type":"InlinedCode"},{"text":".","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Additionally ","type":"SimpleText"},{"code":"WebTauCore","type":"InlinedCode"},{"text":" has header-separating","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"lines defined using underscores ","type":"SimpleText"},{"code":"___","type":"InlinedCode"},{"text":" of various lengths, which you can optionally use for aesthetics.","type":"SimpleText"}]}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Using ","type":"SimpleText"},{"code":"____","type":"InlinedCode"},{"text":" underscore is optional and is there for aesthetics only","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"Col A\" | \"Col B\" | \"Col C\"] {\n   \"v1a\" |   \"v1b\" | \"v1c\"\n   \"v2a\" |   \"v2b\" | \"v2c\" }","entry":"createTableWithoutUnderscore","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"Col A\", \"Col B\", \"Col C\").values(\n        \"v1a\",   \"v1b\", \"v1c\",\n        \"v2a\",   \"v2b\", \"v2c\")","removeSemicolon":true,"entry":"createTableDataSeparateValues","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"}]},{"id":"key-columns","type":"Section","title":"Key Columns","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"*","type":"InlinedCode"},{"text":" in front of a column to specify it as a key column","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"*id\" | \"Name\" | \"Type\"] {\n___________________________\n \"id1\" | \"N\"    | \"T\"\n \"id2\" | \"N2\"   | \"T2\"\n \"id3\" | \"N\"    | \"T\" }","entry":"createTableWithKeyColumns","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"*id\" , \"Name\" , \"Type\",\n      _______________________,\n      \"id1\" , \"N\"    , \"T\",\n      \"id2\" , \"N2\"   , \"T2\",\n      \"id3\" , \"N\"    , \"T\")","removeSemicolon":true,"entry":"createTableWithKeyColumns","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To access a value by key column","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def found = tableData.find(key(\"id2\"))\nfound.Name.should == \"N2\"","entry":"findByKeyAndValidate","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"Record found = tableData.find(key(\"id2\"));\nactual(found.get(\"Name\")).should(equal(\"N2\"));","entry":"findByKeyAndValidate","bodyOnly":true,"type":"Snippet","lang":"java"}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"To change key columns of an existing table","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"tableData.withNewKeyColumns(\"Name\", \"Type\")","entry":"changeKeyColumns","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"tableData.withNewKeyColumns(\"Name\", \"Type\")","removeSemicolon":true,"entry":"changeKeyColumns","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Paragraph","content":[{"text":"Note: ","type":"SimpleText"},{"code":"withNewKeyColumns","type":"InlinedCode"},{"text":" creates new table and validates new key column uniqueness","type":"SimpleText"}]}]},{"id":"permutations","type":"Section","title":"Permutations","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"permute(v1, v2)","type":"InlinedCode"},{"text":" to automatically generate multiple rows.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"Col A\"              | \"Col B\"         | \"Col C\"] {\n___________________________________________________________\n permute(true, false) | \"v1b\"           | permute('a', 'b')\n \"v2a\"                | permute(10, 20) | \"v2c\" }","entry":"createTableDataWithPermute","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"Col A\"              , \"Col B\"         , \"Col C\",\n      ________________________________________________________________,\n       permute(true, false), \"v1b\"           , permute('a', 'b'),\n       \"v2a\"               , permute(10, 20) , \"v2c\")","removeSemicolon":true,"entry":"createTableDataWithPermute","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]]],"columns":[{"title":"Col A"},{"title":"Col B"},{"title":"Col C"}]}}]},{"id":"guid","type":"Section","title":"GUID","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cell.guid","type":"InlinedCode"},{"text":" to automatically generate unique ids.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"ID\"      | \"Col A\"              | \"Col B\"         | \"Col C\"] {\n________________________________________________________________________\n cell.guid | permute(true, false) | \"v1b\"           | permute('a', 'b')\n cell.guid | \"v2a\"                | permute(10, 20) | \"v2c\" }","entry":"createTableDataWithPermuteAndGuid","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"ID\"      , \"Col A\"              , \"Col B\"         , \"Col C\",\n      ______________________________________________________________________,\n       cell.guid, permute(true, false), \"v1b\"           , permute('a', 'b'),\n       cell.guid, \"v2a\"               , permute(10, 20) , \"v2c\")","removeSemicolon":true,"entry":"createTableDataWithPermuteAndGuid","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"a09483fb-0918-400e-9ca9-bf18357a2bbe","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"f771a52e-f15d-4cad-a1b4-4e81f155387c","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"a","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"4215a5ff-123e-4fb9-9c1e-9b97a4f19cf7","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"true","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"ed250b8c-cc50-4d5f-bb69-474b763b8e3e","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"false","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"b","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"aae0e886-1a2e-4eb9-8a41-0b20bfb13c57","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"2907c47a-f0b8-40a5-a0bb-ded0ffa9b082","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]]],"columns":[{"title":"ID"},{"title":"Col A"},{"title":"Col B"},{"title":"Col C"}]}}]},{"id":"replace","type":"Section","title":"Replace","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"table.replace(before, after)","type":"InlinedCode"},{"text":" to replace values in a table.","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"Col A\" | \"Col B\" | \"Col C\"] {\n________________________________\n   \"v1a\" |   \"v1b\" | \"v1c\"\n   \"v2a\" |   \"v2b\" | \"v2c\" }","entry":"createTableWithUnderscore","bodyOnly":true,"type":"Snippet","lang":"groovy"},{"snippet":"tableData.replace(\"v1b\", \"v1b_\")","entry":"replaceValue","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"Col A\", \"Col B\", \"Col C\",\n      ________________________________,\n        \"v1a\",   \"v1b\", \"v1c\",\n        \"v2a\",   \"v2b\", \"v2c\")","removeSemicolon":true,"entry":"createTableDataInOneGo","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true},{"snippet":"tableData.replace(\"v1b\", \"v1b_\")","removeSemicolon":true,"entry":"replaceValue","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"v1a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1b_","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v1c","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"v2a","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2b","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"v2c","type":"SimpleText"}]}]]],"columns":[{"title":"Col A"},{"title":"Col B"},{"title":"Col C"}]}}]},{"id":"cell-above-value-reference","type":"Section","title":"Cell Above Value Reference","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cell.above","type":"InlinedCode"},{"text":" to refer to the previous row value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                |  8\n \"Mike\" | cell.above                | 14\n\n \"Drew\" | LocalDate.of(2016, 6, 22) | 10\n \"Pete\" | cell.above                | 11\n \"Max\"  | cell.above                |  3 }","entry":"createTableDataWithAboveRef","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"Name\", \"Start Date\"             , \"Games To Play\",\n      __________________________________________________,\n      \"John\", LocalDate.of(2016, 6, 20), 10,\n      \"Bob\" , cell.above               ,  8,\n      \"Mike\", cell.above               , 14,\n\n      \"Drew\", LocalDate.of(2016, 6, 22), 10,\n      \"Pete\", cell.above               , 11,\n      \"Max\" , cell.above               ,  3)","removeSemicolon":true,"entry":"createTableDataWithAboveRef","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"John","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"8","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Mike","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"14","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Drew","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-22","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Pete","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-22","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"11","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Max","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-22","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"3","type":"SimpleText"}]}]]],"columns":[{"title":"Name"},{"title":"Start Date"},{"title":"Games To Play"}]}}]},{"id":"cell-above-math","type":"Section","title":"Cell Above Math","content":[{"type":"Paragraph","content":[{"text":"Use ","type":"SimpleText"},{"code":"cell.above.plus|minus","type":"InlinedCode"},{"text":" to generate a derived value based on the previous row value","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                | cell.above + 1\n \"Mike\" | cell.above                | cell.above + 1 }","entry":"createTableDataWithAboveRefAndMath","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"table(\"Name\", \"Start Date\"             , \"Games To Play\",\n     ________________________________________________________________,\n      \"John\", LocalDate.of(2016, 6, 20), 10,\n      \"Bob\" , cell.above               , cell.above.plus(1),\n      \"Mike\", cell.above               , cell.above.plus(1))","removeSemicolon":true,"entry":"createTableDataWithAboveRefAndMath","bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"},{"type":"Table","table":{"data":[[[{"type":"Paragraph","content":[{"text":"John","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"10","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Bob","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"11","type":"SimpleText"}]}]],[[{"type":"Paragraph","content":[{"text":"Mike","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"2016-06-20","type":"SimpleText"}]}],[{"type":"Paragraph","content":[{"text":"12","type":"SimpleText"}]}]]],"columns":[{"title":"Name"},{"title":"Start Date"},{"title":"Games To Play"}]}},{"type":"Paragraph","content":[{"text":"Extract ","type":"SimpleText"},{"code":"cell.above.operation","type":"InlinedCode"},{"text":" to make your intentions clearer","type":"SimpleText"}]},{"tabsContent":[{"name":"Groovy","content":[{"snippet":"def increment = cell.above + 1\n\n[\"Name\" | \"Start Date\"              | \"Games To Play\" ] {\n ______________________________________________________\n \"John\" | LocalDate.of(2016, 6, 20) | 10\n \"Bob\"  | cell.above                | increment\n \"Mike\" | cell.above                | increment }","entry":"createTableDataWithAboveRefAndMathExtracted","bodyOnly":true,"type":"Snippet","lang":"groovy"}]},{"name":"Java","content":[{"snippet":"/*\n * Copyright 2020 webtau maintainers\n * Copyright 2019 TWO SIGMA OPEN SOURCE, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.testingisdocumenting.webtau.data.table;\n\nimport org.testingisdocumenting.webtau.data.table.autogen.TableDataCellValueGenerator;\nimport org.junit.Test;\n\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\n\nimport static org.testingisdocumenting.webtau.WebTauCore.*;\nimport static org.testingisdocumenting.webtau.data.table.TableDataJavaTestValidations.*;\n\npublic class TableDataJavaTest {\n    private static final TableDataCellValueGenerator<?> increment = cell.above.plus(1);\n\n    @Test\n    public void shouldCreateTableUsingConvenienceMethodsForTableAndValues() {\n        TableData tableData = createTableDataSeparateValues();\n        validateSimpleTableData(tableData);\n    }\n\n    @Test\n    public void shouldCreateTableUsingSingleTableMethod() {\n        TableData tableData = createTableDataInOneGo();\n        validateSimpleTableData(tableData);\n    }\n\n    @Test(expected = IllegalArgumentException.class)\n    public void shouldReportColumnsNumberMismatchDuringTableCreationUsingHeaderAndValuesVarargMethod() {\n        table(\"Col A\", \"Col B\", \"Col C\").values(\n                \"v1a\",   \"v1b\", \"v1c\",\n                \"v2a\",   \"v2b\");\n    }\n\n    @Test\n    public void shouldGenerateMultipleRowsFromMultiValues() {\n        TableData tableData = createTableDataWithPermute();\n\n        validatePermute(tableData);\n        doc.captureJson(\"table-with-permute\", tableData);\n    }\n\n    @Test\n    public void shouldGenerateIdsForMultipleRowsFromMultiValues() {\n        TableData tableData = createTableDataWithPermuteAndGuid();\n\n        validatePermuteAndGuid(tableData);\n        doc.captureJson(\"table-with-permute-and-guid\", tableData);\n    }\n\n    @Test\n    public void cellAboveShouldBeSubstitutedWithValueFromPreviousRow() {\n        TableData tableData = createTableDataWithAboveRef();\n        validateAboveValue(tableData);\n\n        saveTableWithDate(tableData, \"table-with-cell-above\");\n    }\n\n    @Test\n    public void cellAboveShouldSupportPlusOperation() {\n        TableData tableData = createTableDataWithAboveRefAndMath();\n        validateAboveValueWithMath(tableData);\n\n        saveTableWithDate(tableData, \"table-with-cell-above-math\");\n    }\n\n    @Test\n    public void cellAboveShouldSupportPlusOperationWithExtraction() {\n        TableData tableData = createTableDataWithAboveRefAndMathExtracted();\n        validateAboveValueWithMath(tableData);\n    }\n\n    @Test\n    public void shouldReplaceSingleSpecifiedValue() {\n        TableData tableData = createTableDataInOneGo();\n        TableData newTableData = replaceValue(tableData);\n\n        validateSimpleTableData(tableData);\n        validateSimpleTableDataAfterReplace(newTableData);\n\n        saveTableWithDate(newTableData, \"table-after-replace\");\n    }\n\n    @Test\n    public void accessByKeyColumn() {\n        TableData tableData = createTableWithKeyColumns();\n        findByKeyAndValidate(tableData);\n    }\n\n    @Test\n    public void shouldChangeKeyColumnsAndValidateUniqueness() {\n        TableData tableData = createTableWithKeyColumns();\n\n        code(() ->\n            changeKeyColumns(tableData)\n        ).should(throwException(\"duplicate entry found with key: [N, T]\\n\" +\n                \"{id=id1, Name=N, Type=T}\\n\" +\n                \"{id=id3, Name=N, Type=T}\"));\n    }\n\n    private static TableData replaceValue(TableData tableData) {\n        return tableData.replace(\"v1b\", \"v1b_\");\n    }\n\n    private static TableData changeKeyColumns(TableData tableData) {\n        return tableData.withNewKeyColumns(\"Name\", \"Type\");\n    }\n\n    private static void findByKeyAndValidate(TableData tableData) {\n        Record found = tableData.find(key(\"id2\"));\n        actual(found.get(\"Name\")).should(equal(\"N2\"));\n    }\n\n    private static TableData createTableDataSeparateValues() {\n        return table(\"Col A\", \"Col B\", \"Col C\").values(\n                       \"v1a\",   \"v1b\", \"v1c\",\n                       \"v2a\",   \"v2b\", \"v2c\");\n    }\n\n    private static TableData createTableDataInOneGo() {\n        return table(\"Col A\", \"Col B\", \"Col C\",\n                     ________________________________,\n                       \"v1a\",   \"v1b\", \"v1c\",\n                       \"v2a\",   \"v2b\", \"v2c\");\n    }\n\n    private static TableData createTableDataWithPermute() {\n        return table(\"Col A\"              , \"Col B\"         , \"Col C\",\n                     ________________________________________________________________,\n                      permute(true, false), \"v1b\"           , permute('a', 'b'),\n                      \"v2a\"               , permute(10, 20) , \"v2c\");\n    }\n\n    private static TableData createTableDataWithPermuteAndGuid() {\n        return table(\"ID\"      , \"Col A\"              , \"Col B\"         , \"Col C\",\n                     ______________________________________________________________________,\n                      cell.guid, permute(true, false), \"v1b\"           , permute('a', 'b'),\n                      cell.guid, \"v2a\"               , permute(10, 20) , \"v2c\");\n    }\n\n    private static TableData createTableDataWithAboveRef() {\n        return table(\"Name\", \"Start Date\"             , \"Games To Play\",\n                     __________________________________________________,\n                     \"John\", LocalDate.of(2016, 6, 20), 10,\n                     \"Bob\" , cell.above               ,  8,\n                     \"Mike\", cell.above               , 14,\n\n                     \"Drew\", LocalDate.of(2016, 6, 22), 10,\n                     \"Pete\", cell.above               , 11,\n                     \"Max\" , cell.above               ,  3);\n    }\n\n    private static TableData createTableDataWithAboveRefAndMath() {\n        return table(\"Name\", \"Start Date\"             , \"Games To Play\",\n                    ________________________________________________________________,\n                     \"John\", LocalDate.of(2016, 6, 20), 10,\n                     \"Bob\" , cell.above               , cell.above.plus(1),\n                     \"Mike\", cell.above               , cell.above.plus(1));\n    }\n\n    private static void createIncrementExample() {\n        TableDataCellValueGenerator<?> increment = cell.above.plus(1);\n    }\n\n    private static TableData createTableDataWithAboveRefAndMathExtracted() {\n        return table(\"Name\", \"Start Date\"             , \"Games To Play\",\n                    ________________________________________________________________,\n                     \"John\", LocalDate.of(2016, 6, 20), 10,\n                     \"Bob\" , cell.above               , increment,\n                     \"Mike\", cell.above               , increment);\n    }\n\n    static TableData createTableWithKeyColumns() {\n        return table(\"*id\" , \"Name\" , \"Type\",\n                     _______________________,\n                     \"id1\" , \"N\"    , \"T\",\n                     \"id2\" , \"N2\"   , \"T2\",\n                     \"id3\" , \"N\"    , \"T\");\n    }\n\n    private void saveTableWithDate(TableData tableData, String artifactName) {\n        doc.captureJson(artifactName,\n                tableData\n                        .map((rowIdx, colIdx, columnName, v) ->\n                                columnName.equals(\"Start Date\") ?\n                                        ((LocalDate) v).format(DateTimeFormatter.ISO_DATE) : v));\n    }\n}","removeSemicolon":true,"entries":["createIncrementExample","createTableDataWithAboveRefAndMathExtracted"],"bodyOnly":true,"type":"Snippet","lang":"java","removeReturn":true}]}],"type":"Tabs"}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Reference","pageTitle":"Table Data","pageMeta":{},"dirName":"reference","fileName":"table-data","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"Create","id":"create"},{"title":"Key Columns","id":"key-columns"},{"title":"Permutations","id":"permutations"},{"title":"GUID","id":"guid"},{"title":"Replace","id":"replace"},{"title":"Cell Above Value Reference","id":"cell-above-value-reference"},{"title":"Cell Above Math","id":"cell-above-math"}]}},{"type":"Page","content":[{"id":"148","type":"Section","title":"1.48","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: trim web report generated by section in case of long version name (e.g. snapshot)","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Java access modifier to ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Cookies","type":"SimpleText"}],"url":"/webtau/browser/cookies"},{"text":" and ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Local Storage","type":"SimpleText"}],"url":"/webtau/browser/local-storage"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add java examples for ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"implicit header creation","type":"SimpleText"}],"url":"/webtau/HTTP/headers#implicit-header"},{"text":" and example ","type":"SimpleText"},{"code":".with","type":"InlinedCode"},{"text":" usage","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add java examples for ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"explicit header creation","type":"SimpleText"}],"url":"/webtau/HTTP/headers#explicit-header"},{"text":" and example ","type":"SimpleText"},{"code":".with","type":"InlinedCode"},{"text":" usage","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: add links to individual ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Options and Environment Variables","type":"SimpleText"}],"url":"/webtau/configuration/options#browserHeight"},{"text":" and update default values","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"custom compare to handler","type":"SimpleText"}],"url":"/webtau/matchers/custom-compare-to-handler"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"dates universal comparison","type":"SimpleText"}],"url":"/webtau/matchers/universal-compare#dates"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Update documentation and implementation details classes to have consistent WebTau naming","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add additional actual/expected label for first line mismatch message during strings comparison","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"HttpHeader.with","type":"InlinedCode"},{"text":" vararg support to conveniently provide multiple header values in Java","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add documentation screenshot with annotations ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"capture for specific element","type":"SimpleText"}],"url":"/webtau/browser/documentation-artifacts#screenshot-of-specific-element"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Disable scenarios by ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"file name convention","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/skipping-tests#unconditionally-skipping-tests"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Selenium 4 upgrade","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Speedup ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"CSV","type":"SimpleText"}],"url":"/webtau/utilities/data#csv-read"},{"text":" numbers auto conversion","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Contain handler for Map and Map","type":"SimpleText"}]}]}]}]},{"id":"147","type":"Section","title":"1.47","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: browser fetch int value fails on newer browsers","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: proper handling of ","type":"SimpleText"},{"code":"element.count","type":"InlinedCode"},{"text":" stale element Selenium exception","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix report code highlight lines when multiline comment is present (e.g. ","type":"SimpleText"},{"code":"/* */","type":"InlinedCode"},{"text":")","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Matchers","type":"SimpleText"}],"url":"/webtau/matchers/universal-compare"},{"text":" initial doc and placeholder","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add LocalDateTime and LocalDate(expected) comparison","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add scenario level elapsed time to Web Report in addition to suite level elapsed time","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add scenario level elapsed time to Web Report in addition to suite level elapsed time","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add browser ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"drag and drop by","type":"SimpleText"}],"url":"/webtau/browser/element-actions#drag-and-drop"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Skip all the tests if ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"before fist test setup","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/test-listeners"},{"text":" has failed","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Brighter test status color in web report light theme","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add human-readable tests performance elapsed time to web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"fs.tempFile","type":"SimpleText"}],"url":"/webtau/utilities/file-system#temporary-dirs-and-files"}]}]}]}]},{"id":"146","type":"Section","title":"1.46","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"proxy server original call","type":"SimpleText"}],"url":"/webtau/servers/proxy-server#preserve-original-call"},{"text":" example and tweaks","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"proxy server","type":"SimpleText"}],"url":"/webtau/servers/proxy-server"},{"text":" ","type":"SimpleText"},{"code":"serverProxyMaxThreads","type":"InlinedCode"},{"text":" config","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report failed code snippet font in light theme","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: examples generation via webtau cli","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report HTTP warning call color in light theme","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report scrollbar color in light theme","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Release Notes","pageTitle":"2022 Releases","pageMeta":{"title":["2022 Releases"]},"dirName":"release-notes","fileName":"2022","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"1.48","id":"148"},{"title":"1.47","id":"147"},{"title":"1.46","id":"146"}]}},{"type":"Page","content":[{"id":"1451","type":"Section","title":"1.45.1","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report light theme HTTP response match color","type":"SimpleText"}]}]}]}]},{"id":"145","type":"Section","title":"1.45","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Servers","type":"SimpleText"}],"url":"/webtau/servers/introduction"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Wrap deletion of all ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"temp files","type":"SimpleText"}],"url":"/webtau/utilities/file-system"},{"text":" in a parent step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document report ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"step and trace","type":"SimpleText"}],"url":"/webtau/report/steps"},{"text":" core methods","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Move report tests status filter to the top and put theme switching to the bottom in its place","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"trace","type":"InlinedCode"},{"text":" core method to report values to console and web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Report color theme toggle and auto OS dark/light detection","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Improved code snippet rendering in web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Check element presence before ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"scroll","type":"SimpleText"}],"url":"/webtau/browser/element-actions#scrolling"},{"text":" to provide better error message","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cache exists","type":"SimpleText"}],"url":"/webtau/utilities/cache#presence-check"},{"text":" method","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"CLI run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command"},{"text":" working dir matches config working dir if none specified for the process","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: remove internal info of ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"CLI run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command"},{"text":" from web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"static content server","type":"SimpleText"}],"url":"/webtau/servers/static-server"},{"text":" capture of browser page request","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: remove call to open api schema end-point at the end of tests if no http calls were performed during tests","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: missing files message to use only path but not container id","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report step with 0ms now shows elapsed time","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"waiting","type":"SimpleText"}],"url":"/webtau/utilities/file-system"},{"text":" for non-existing file content is ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"not","type":"SimpleText"}]},{"text":" throwing error anymore","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: jansi Mac M1 exception","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report key-value color contrast","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report extra scroll bar on overall summary screen","type":"SimpleText"}]}]}]}]},{"id":"1441","type":"Section","title":"1.44.1","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: report extra scroll bar on test summary screen","type":"SimpleText"}]}]}]}]},{"id":"144","type":"Section","title":"1.44","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: HTTP JSON fullscreen payload alignment and colors","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: proxy server captures request and response now","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: string compare to handler show proper caret position of a change in case of ","type":"SimpleText"},{"code":"not","type":"InlinedCode"},{"text":" equal","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: Report summary vertical scroll preserves tab selection at the top","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: document ","type":"SimpleText"},{"code":"cli","type":"InlinedCode"},{"text":" background command ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"wait timeout","type":"SimpleText"}],"url":"/webtau/cli/background-command#wait-timeout"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"report steps render step output information","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cache","type":"SimpleText"}],"url":"/webtau/utilities/cache"},{"text":" stored values validation and conversion to Path","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"static server serves from symlink by resolving it first","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"fs.zip","type":"InlinedCode"},{"text":" command to ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"zip files","type":"SimpleText"}],"url":"/webtau/utilities/file-system#archive"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"cli.runInBackground","type":"InlinedCode"},{"text":" overload with config only parameter","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"Servers","type":"InlinedCode"},{"text":" section to a test data to display requests/responses that internal servers handled","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add \"generated by\" section to test report summary page","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Ability to specify report name and optional associated URL","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Improvements on http call details page: proper vertical scroll and layout changes","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Web report card lists style change to make grouping more distinct and combined with title","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Changed web report to use dark theme","type":"SimpleText"}]}]}]}]},{"id":"1431","type":"Section","title":"1.43.1","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"groovy config","type":"SimpleText"}],"url":"/webtau/configuration/groovy-config-file"},{"text":" parsing of empty lists and simple variables reference within config","type":"SimpleText"}]}]}]}]},{"id":"143","type":"Section","title":"1.43","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Fix ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Persona Intro","type":"SimpleText"}],"url":"/webtau/persona/introduction"},{"text":" example snippets","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Groovy Config","type":"SimpleText"}],"url":"/webtau/configuration/groovy-config-file"},{"text":" complex objects, persona and overrides examples","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Persona HTTP","type":"SimpleText"}],"url":"/webtau/persona/HTTP-persona"},{"text":" authorization example","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: Add ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"Persona","type":"SimpleText"}],"url":"/webtau/persona/introduction"},{"text":" documentation","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Doc: combined \"files upload\" and \"PDF\" section under ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"files","type":"SimpleText"}],"url":"/webtau/HTTP/files"},{"text":". Edited text.","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Parse Groovy config files using new internal DSL instead of GroovyConfig to better support Persona","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add persona specific ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value to set ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"persona's common CLI environment variables","type":"SimpleText"}],"url":"/webtau/persona/CLI-persona"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add java.time.Instant and String compareTo handler rule","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add ","type":"SimpleText"},{"code":"cliEnv","type":"InlinedCode"},{"text":" config value to set common environment variables for ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command#common-environment-variables"},{"text":" and ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.runInBackground","type":"SimpleText"}],"url":"/webtau/cli/background-command#common-environment-variables"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server journal capture request body and response body","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server support for other than ","type":"SimpleText"},{"code":"application/json","type":"InlinedCode"},{"text":" content type responses","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Implemented ","type":"SimpleText"},{"code":"markBroken","type":"InlinedCode"},{"text":" on static, proxy and fake servers","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Added overrides and slow down to static server","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Ignore ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"single scenario","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/selective-run#sscenario"},{"text":" and ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"disabled scenario","type":"SimpleText"}],"url":"/webtau/groovy-standalone-runner/skipping-tests#unconditionally-skipping-tests"},{"type":"SoftLineBreak"},{"text":"in ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"REPL mode","type":"SimpleText"}],"url":"/webtau/REPL/test-runs"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add server router fluent syntax","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add server router definition support for :param syntax","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add server journal to track or wait on handled calls","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Handle router overrides in proxy server","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server router - collection of overrides that can be set up and re-used for multiple servers","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server implements autocloseable for ","type":"SimpleText"},{"code":"try-with-resources","type":"InlinedCode"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Server route parameters based fake setup","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Initial fake server support","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add config info to web report for ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command#working-dir"},{"text":" and ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.rinInBackground","type":"SimpleText"}],"url":"/webtau/cli/background-command#working-dir"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add config info to step output for ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command#working-dir"},{"text":" and ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.rinInBackground","type":"SimpleText"}],"url":"/webtau/cli/background-command#working-dir"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command#run-result"},{"text":" results are properly returned when validation block is present","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: browser screenshot on failure is displayed again in the generated report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}],"url":"/webtau/cli/foreground-command#run"},{"text":" now captures output in case of timeout","type":"SimpleText"}]}]}]}]},{"id":"142","type":"Section","title":"1.42","content":[{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"http proxy","type":"SimpleText"}],"url":"/webtau/HTTP/proxy"},{"text":" via config","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"stop all servers is a separate logged step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"REPL ","type":"SimpleText"},{"code":"beforeAll","type":"InlinedCode"},{"text":", ","type":"SimpleText"},{"code":"afterAll","type":"InlinedCode"},{"text":" commands to trigger setup and teardown on demand","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"cli.run","type":"InlinedCode"},{"text":" local ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"timeout override","type":"SimpleText"}],"url":"/webtau/cli/foreground-command#timeout"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"step","type":"InlinedCode"},{"text":" accepts ","type":"SimpleText"},{"code":"map","type":"InlinedCode"},{"text":" as params for additional reporting","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"isFile":false,"type":"Link","content":[{"text":"replace text content by regexp","type":"SimpleText"}],"url":"/webtau/utilities/file-system#file-content"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"capture open api warnings in web report","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"code":"db","type":"InlinedCode"},{"text":" data source creation is a reported step","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"web report support for step key-value input","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"add PageElement.all() to disambiguate element.should contain for browser assertions","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"web report section with env vars","type":"SimpleText"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Add browser ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"scroll actions","type":"SimpleText"}],"url":"/webtau/browser/element-actions#scrolling"}]}]}]},{"bulletMarker":"*","type":"BulletList","tight":true,"content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Fix: ","type":"SimpleText"},{"isFile":false,"type":"Link","content":[{"text":"cli.run","type":"SimpleText"}],"url":"/webtau/cli/introduction"},{"text":" quoted params handling","type":"SimpleText"}]}]}]}]},{"id":"141","type":"Section","title":"1.41","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"No notes","type":"SimpleText"}]}]}]},{"id":"140","type":"Section","title":"1.40","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"No notes","type":"SimpleText"}]}]}]},{"id":"139","type":"Section","title":"1.39","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"No notes","type":"SimpleText"}]}]}]}],"lastModifiedTime":1653578199526,"tocItem":{"sectionTitle":"Release Notes","pageTitle":"2021 Releases","pageMeta":{"title":["2021 Releases"]},"dirName":"release-notes","fileName":"2021","viewOnRelativePath":null,"pageSectionIdTitles":[{"title":"1.45.1","id":"1451"},{"title":"1.45","id":"145"},{"title":"1.44.1","id":"1441"},{"title":"1.44","id":"144"},{"title":"1.43.1","id":"1431"},{"title":"1.43","id":"143"},{"title":"1.42","id":"142"},{"title":"1.41","id":"141"},{"title":"1.40","id":"140"},{"title":"1.39","id":"139"}]}}]